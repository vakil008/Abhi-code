{"ast":null,"code":"var _jsxFileName = \"/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/pages/Home/index.js\";\nimport React from \"react\";\nimport \"date-fns\";\nimport { Paper, Box, Typography, Divider, Container, InputLabel, Select, FormControl, FormHelperText, MenuItem, Grid, Button } from \"@material-ui/core\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"../../theme/light\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 400\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nclass Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      this.setState({\n        age: event.target.value\n      });\n    };\n\n    this.handleDateChange = date => {\n      this.setState({\n        startDate: date,\n        endDate: date + 1\n      });\n    };\n\n    this.handleEndDateChange = date => {\n      this.setState({\n        endDate: date\n      });\n    };\n\n    this.state = {\n      age: \"\",\n      startDate: new Date(),\n      endDate: new Date() + 1\n    };\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      age,\n      startDate,\n      endDate\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"container\",\n        p: 2.5,\n        bgcolor: \"primary.lightBgContainer\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"content lead-page\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"page-heading\",\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              color: \"text.secondary\",\n              pt: 3,\n              pr: 2.7,\n              pb: 1.8,\n              pl: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                color: \"inherit\",\n                children: \"Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: DateFnsUtils,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-around\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"outlined\",\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  id: \"demo-simple-select-outlined-label\",\n                  children: \"Age\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  labelId: \"demo-simple-select-outlined-label\",\n                  id: \"demo-simple-select-outlined\",\n                  value: age,\n                  onChange: e => this.handleChange(e),\n                  label: \"Age\",\n                  children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: \"\",\n                    children: /*#__PURE__*/_jsxDEV(\"em\", {\n                      children: \"None\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 114,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 10,\n                    children: \"Ten\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 20,\n                    children: \"Twenty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n                    value: 30,\n                    children: \"Thirty\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                variant: \"inline\",\n                format: \"dd/MM/yyyy\",\n                margin: \"normal\",\n                id: \"date-picker-inline\",\n                label: \"Start Date\",\n                value: startDate,\n                onChange: date => this.handleDateChange(date),\n                KeyboardButtonProps: {\n                  \"aria-label\": \"change date\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                variant: \"inline\",\n                format: \"dd/MM/yyyy\",\n                margin: \"normal\",\n                id: \"date-picker-inline\",\n                label: \"End Date\",\n                minDate: startDate,\n                value: endDate,\n                onChange: date => this.handleEndDateChange(date),\n                KeyboardButtonProps: {\n                  \"aria-label\": \"change date\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"small\",\n                color: \"primary\",\n                children: \"Primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default withStyles(useStyles)(Home); // import React from \"react\";\n// import {\n//   Paper, Box, Typography\n// } from \"@material-ui/core\";\n// import { ThemeProvider } from \"@material-ui/core/styles\";\n// import { theme } from '../../theme/light';\n// import PropTypes from 'prop-types';\n// import clsx from 'clsx';\n// import { makeStyles } from '@material-ui/core/styles';\n// import {Table, Grid, TextField} from '@material-ui/core';\n// import TableBody from '@material-ui/core/TableBody';\n// import TableCell from '@material-ui/core/TableCell';\n// import TableContainer from '@material-ui/core/TableContainer';\n// import TableHead from '@material-ui/core/TableHead';\n// import TablePagination from '@material-ui/core/TablePagination';\n// import TableRow from '@material-ui/core/TableRow';\n// import TableSortLabel from '@material-ui/core/TableSortLabel';\n// import Toolbar from '@material-ui/core/Toolbar';\n// import Checkbox from '@material-ui/core/Checkbox';\n// import IconButton from '@material-ui/core/IconButton';\n// import Tooltip from '@material-ui/core/Tooltip';\n// import DeleteIcon from '@material-ui/icons/Delete';\n// import EditIcon from '@material-ui/icons/Edit';\n// import Drawer from '@material-ui/core/Drawer';\n// import Button from '@material-ui/core/Button';\n// import Divider from '@material-ui/core/Divider';\n// import CloseIcon from '@material-ui/icons/Close';\n// function createData(name, calories, fat, carbs, protein) {\n//   return { name, calories, fat, carbs, protein };\n// }\n// const rows = [\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\n//   createData('Donut', 452, 25.0, 51, 4.9),\n//   createData('Eclair', 262, 16.0, 24, 6.0),\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\n//   createData('KitKat', 518, 26.0, 65, 7.0),\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\n//   createData('Marshmallow', 318, 0, 81, 2.0),\n//   createData('Nougat', 360, 19.0, 9, 37.0),\n//   createData('Oreo', 437, 18.0, 63, 4.0),\n// ];\n// function descendingComparator(a, b, orderBy) {\n//   if (b[orderBy] < a[orderBy]) {\n//     return -1;\n//   }\n//   if (b[orderBy] > a[orderBy]) {\n//     return 1;\n//   }\n//   return 0;\n// }\n// function getComparator(order, orderBy) {\n//   return order === 'desc'\n//     ? (a, b) => descendingComparator(a, b, orderBy)\n//     : (a, b) => -descendingComparator(a, b, orderBy);\n// }\n// function stableSort(array, comparator) {\n//   const stabilizedThis = array.map((el, index) => [el, index]);\n//   stabilizedThis.sort((a, b) => {\n//     const order = comparator(a[0], b[0]);\n//     if (order !== 0) return order;\n//     return a[1] - b[1];\n//   });\n//   return stabilizedThis.map((el) => el[0]);\n// }\n// const headCells = [\n//   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\n//   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Action' },\n// ];\n// function EnhancedTableHead(props) {\n//   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n//   const createSortHandler = (property) => (event) => {\n//     onRequestSort(event, property);\n//   };\n//   return (\n//     <TableHead>\n//       <TableRow>\n//         <TableCell padding=\"checkbox\">\n//           <Checkbox\n//             indeterminate={numSelected > 0 && numSelected < rowCount}\n//             checked={rowCount > 0 && numSelected === rowCount}\n//             onChange={onSelectAllClick}\n//             inputProps={{ 'aria-label': 'select all desserts' }}\n//           />\n//         </TableCell>\n//         {headCells.map((headCell) => (\n//           <TableCell\n//             key={headCell.id}\n//             align={headCell.numeric ? 'right' : 'left'}\n//             padding={headCell.disablePadding ? 'none' : 'normal'}\n//             sortDirection={orderBy === headCell.id ? order : false}\n//           >\n//             <TableSortLabel\n//               active={orderBy === headCell.id}\n//               direction={orderBy === headCell.id ? order : 'asc'}\n//               onClick={createSortHandler(headCell.id)}\n//             >\n//               {headCell.label}\n//               {orderBy === headCell.id ? (\n//                 <span className={classes.visuallyHidden}>\n//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n//                 </span>\n//               ) : null}\n//             </TableSortLabel>\n//           </TableCell>\n//         ))}\n//       </TableRow>\n//     </TableHead>\n//   );\n// }\n// EnhancedTableHead.propTypes = {\n//   classes: PropTypes.object.isRequired,\n//   numSelected: PropTypes.number.isRequired,\n//   onRequestSort: PropTypes.func.isRequired,\n//   onSelectAllClick: PropTypes.func.isRequired,\n//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n//   orderBy: PropTypes.string.isRequired,\n//   rowCount: PropTypes.number.isRequired,\n// };\n// const useToolbarStyles = makeStyles((theme) => ({\n//   root: {\n//     paddingLeft: theme.spacing(2),\n//     paddingRight: theme.spacing(1),\n//   },\n//   highlight:\n//     theme.palette.type === 'light'\n//       ? {\n//           color: theme.palette.primary.light,\n//           // backgroundColor: lighten(theme.palette.primary.light, 0.85),\n//         }\n//       : {\n//           color: theme.palette.primary.light,\n//           // backgroundColor: theme.palette.primary.dark,\n//         },\n//   title: {\n//     flex: '1 1 100%',\n//   },\n// }));\n// const EnhancedTableToolbar = (props) => {\n//   const classes = useToolbarStyles();\n//   const { numSelected } = props;\n//   return (\n//     <Toolbar\n//       className={clsx(classes.root, {\n//         [classes.highlight]: numSelected > 0,\n//       })}\n//     >\n//       {numSelected > 0 ? (\n//         <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n//           {numSelected} selected\n//         </Typography>\n//       ) : (\n//         <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n//           Data Table\n//         </Typography>\n//       )}\n//       {numSelected > 0 ? (\n//         <Tooltip title=\"Delete\">\n//           <IconButton aria-label=\"delete\">\n//             <DeleteIcon />\n//           </IconButton>\n//         </Tooltip>\n//       ) : (\n//         <Tooltip title=\"Filter list\">\n//           <IconButton aria-label=\"filter list\">\n//             {/* <FilterListIcon /> */}\n//           </IconButton>\n//         </Tooltip>\n//       )}\n//     </Toolbar>\n//   );\n// };\n// EnhancedTableToolbar.propTypes = {\n//   numSelected: PropTypes.number.isRequired,\n// };\n// const useStyles = makeStyles((theme) => ({\n//   root: {\n//     width: '100%',\n//   },\n//   paper: {\n//     width: '100%',\n//     marginBottom: theme.spacing(2),\n//   },\n//   table: {\n//     minWidth: 750,\n//   },\n//   visuallyHidden: {\n//     border: 0,\n//     clip: 'rect(0 0 0 0)',\n//     height: 1,\n//     margin: -1,\n//     overflow: 'hidden',\n//     padding: 0,\n//     position: 'absolute',\n//     top: 20,\n//     width: 1,\n//   },\n// }));\n// function Home() {\n//   const classes = useStyles();\n//   const [order, setOrder] = React.useState('asc');\n//   const [orderBy, setOrderBy] = React.useState('calories');\n//   const [selected, setSelected] = React.useState([]);\n//   const [page, setPage] = React.useState(0);\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\n//   const handleRequestSort = (event, property) => {\n//     const isAsc = orderBy === property && order === 'asc';\n//     setOrder(isAsc ? 'desc' : 'asc');\n//     setOrderBy(property);\n//   };\n//   const handleSelectAllClick = (event) => {\n//     if (event.target.checked) {\n//       const newSelecteds = rows.map((n) => n.name);\n//       setSelected(newSelecteds);\n//       return;\n//     }\n//     setSelected([]);\n//   };\n//   const handleClick = (event, name) => {\n//     const selectedIndex = selected.indexOf(name);\n//     let newSelected = [];\n//     if (selectedIndex === -1) {\n//       newSelected = newSelected.concat(selected, name);\n//     } else if (selectedIndex === 0) {\n//       newSelected = newSelected.concat(selected.slice(1));\n//     } else if (selectedIndex === selected.length - 1) {\n//       newSelected = newSelected.concat(selected.slice(0, -1));\n//     } else if (selectedIndex > 0) {\n//       newSelected = newSelected.concat(\n//         selected.slice(0, selectedIndex),\n//         selected.slice(selectedIndex + 1),\n//       );\n//     }\n//     setSelected(newSelected);\n//   };\n//   const handleChangePage = (event, newPage) => {\n//     setPage(newPage);\n//   };\n//   const handleChangeRowsPerPage = (event) => {\n//     setRowsPerPage(parseInt(event.target.value, 10));\n//     setPage(0);\n//   };\n//   const isSelected = (name) => selected.indexOf(name) !== -1;\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n// // Drawer start here\n//   const [state, setState] = React.useState({\n//     top: false,\n//     left: false,\n//     bottom: false,\n//     right: false,\n//   });\n//   const toggleDrawer = (anchor, open) => (event) => {\n//     if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n//       return;\n//     }\n//     setState({ ...state, [anchor]: open });\n//   };\n//   const list = (anchor) => (\n//     <Box className=\"share-steps\" height=\"100%\">\n//     <Box   display=\"flex\"\n//         width=\"100%\"\n//         height=\"100%\"\n//         flexDirection=\"column\"\n//         bgcolor=\"primary.drawerBg\"\n//       className={clsx(classes.list, {\n//         [classes.fullList]: anchor === 'top' || anchor === 'bottom',\n//       })}\n//       role=\"presentation\"\n//     >\n//       <Box className=\"common-content\" position=\"relative\" height=\"100%\">\n//           <Box className=\"sidebar-header\" display=\"flex\" alignItems=\"center\" px={3} py={2.4}>\n//             <Box color=\"text.textBlue\">\n//               <Typography variant=\"h6\" gutterBottom color=\"inherit\">\n//                 Edit\n//               </Typography>\n//             </Box>\n//             <Box\n//               className=\"close-drawer cursor-pointer\"\n//               display=\"flex\"\n//               alignItems=\"center\"\n//               color=\"grey.500\"\n//               onClick={toggleDrawer(anchor, false)}>\n//               <CloseIcon color=\"inherit\" />\n//             </Box>\n//           </Box>\n//           <Divider />\n//           <Box className=\"share-sidebar-content share-mamber-content\" p={3}>\n//           <Grid container spacing={2}>\n//             <Grid item xs={4}>\n//               <TextField type=\"text\" label=\"First Name\" variant=\"outlined\" className=\"custom-textfield\" />\n//             </Grid>\n//             <Grid item xs={4}>\n//               <TextField type=\"text\" label=\"Last Name\" variant=\"outlined\" className=\"custom-textfield\" />\n//             </Grid>\n//             <Grid item xs={4}>\n//               <TextField type=\"text\" label=\"Email Address\" variant=\"outlined\" className=\"custom-textfield\" />\n//             </Grid>\n//           </Grid>\n//             <Box>\n//             </Box>\n//           </Box>\n//           <Box\n//           className=\"sidebar-footer\"\n//           position=\"absolute\"\n//           bottom=\"0\"\n//           left=\"0\"\n//           width=\"100%\"\n//           minHeight=\"82px\"\n//           px={3}\n//           py={1.5}\n//           display=\"flex\"\n//           alignItems=\"center\"\n//           boxSizing=\"border-box\"\n//           bgcolor=\"primary.drawerBg\">\n//           <Box  pr={1} width=\"150px\" boxSizing=\"border-box\">\n//             <Button variant=\"outlined\" className=\"cancel-button\" disableElevation size=\"large\" onClick={toggleDrawer(anchor, false)}>\n//               Cancel\n//             </Button>\n//           </Box>\n//           <Box width=\"150px\" boxSizing=\"border-box\">\n//             <Button variant=\"contained\" color=\"primary\" className=\"next-button\" disableElevation size=\"large\">\n//               Update\n//             </Button>\n//           </Box>\n//         </Box>\n//         </Box>\n//     </Box>\n//     </Box>\n//     // Drawer End here\n//     )\n//   return (\n//     <ThemeProvider theme={theme}>\n//     <Box className=\"container\" p={2.5}  bgcolor=\"primary.lightBgContainer\">\n//       <Paper className=\"content lead-page\" >\n//         {/* <Box className=\"page-heading\" mb={3}>\n//           <Box color=\"text.secondary\" pt={3} pr={2.7} pb={1.8} pl={3}>\n//             <Typography variant=\"h6\" gutterBottom color=\"inherit\">\n//               Dashboard\n//             </Typography>\n//           </Box>\n//           <Divider />\n//         </Box> */}\n// <div className=\"data-table\">\n// <div className={classes.root}>\n//       <Paper className={classes.paper} elevation={0}>\n//         <EnhancedTableToolbar numSelected={selected.length} />\n//         <TableContainer>\n//           <Table\n//             className={classes.table}\n//             aria-labelledby=\"tableTitle\"\n//             aria-label=\"enhanced table\"\n//           >\n//             <EnhancedTableHead\n//               classes={classes}\n//               numSelected={selected.length}\n//               order={order}\n//               orderBy={orderBy}\n//               onSelectAllClick={handleSelectAllClick}\n//               onRequestSort={handleRequestSort}\n//               rowCount={rows.length}\n//             />\n//             <TableBody>\n//               {stableSort(rows, getComparator(order, orderBy))\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n//                 .map((row, index) => {\n//                   const isItemSelected = isSelected(row.name);\n//                   const labelId = `enhanced-table-checkbox-${index}`;\n//                   return (\n//                     <TableRow\n//                       hover\n//                       onClick={(event) => handleClick(event, row.name)}\n//                       role=\"checkbox\"\n//                       aria-checked={isItemSelected}\n//                       tabIndex={-1}\n//                       key={row.name}\n//                       selected={isItemSelected}\n//                     >\n//                       <TableCell padding=\"checkbox\">\n//                         <Checkbox\n//                           checked={isItemSelected}\n//                           inputProps={{ 'aria-labelledby': labelId }}\n//                         />\n//                       </TableCell>\n//                       <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n//                         {row.name}\n//                       </TableCell>\n//                       <TableCell align=\"right\">{row.calories}</TableCell>\n//                       <TableCell align=\"right\">{row.fat}</TableCell>\n//                       <TableCell align=\"right\">{row.carbs}</TableCell>\n//                       <TableCell align=\"right\">\n// <Box display=\"inline-flex\" alignItems=\"center\" ml=\"auto\">\n//   <Box className=\"edit-icon cursor-pointer\" mr={1} bgcolor=\"primary.primaryIconBg\" color=\"text.textSecondary\"  width=\"27px\" height=\"27px\" borderRadius=\"5px\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n//     <EditIcon style={{ fontSize: 18 }} color=\"inherit\" />\n//     </Box>\n//     <Box className=\"edit-icon cursor-pointer\" bgcolor=\"error.lightIcon\" color=\"error.dark\"  width=\"27px\" height=\"27px\" borderRadius=\"5px\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\n//     <DeleteIcon style={{ fontSize: 18 }} color=\"inherit\" />\n//     </Box>\n// </Box>\n//                       </TableCell>\n//                     </TableRow>\n//                   );\n//                 })}\n//               {emptyRows > 0 && (\n//                 <TableRow >\n//                   <TableCell colSpan={6} />\n//                 </TableRow>\n//               )}\n//             </TableBody>\n//           </Table>\n//         </TableContainer>\n//         <TablePagination\n//           rowsPerPageOptions={[5, 10, 25]}\n//           component=\"div\"\n//           count={rows.length}\n//           rowsPerPage={rowsPerPage}\n//           page={page}\n//           onPageChange={handleChangePage}\n//           onRowsPerPageChange={handleChangeRowsPerPage}\n//         />\n//       </Paper>\n//     </div>\n// </div>\n// {/* Drawer Map here */}\n// <div>\n//       {['right'].map((anchor) => (\n//         <React.Fragment key={anchor}>\n//           <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\n//           <Drawer className=\"common-sidebar \" anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\n//             {list(anchor)}\n//           </Drawer>\n//         </React.Fragment>\n//       ))}\n//     </div>\n//     {/* Drawer Map here */}\n//       </Paper>\n//     </Box>\n//   </ThemeProvider>\n//   );\n// }\n// export default Home;","map":{"version":3,"sources":["/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/pages/Home/index.js"],"names":["React","Paper","Box","Typography","Divider","Container","InputLabel","Select","FormControl","FormHelperText","MenuItem","Grid","Button","ThemeProvider","theme","withStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","useStyles","root","width","paper","marginBottom","spacing","table","minWidth","visuallyHidden","border","clip","height","margin","overflow","padding","position","top","formControl","selectEmpty","marginTop","Home","PureComponent","constructor","props","handleChange","event","setState","age","target","value","handleDateChange","date","startDate","endDate","handleEndDateChange","state","Date","render","classes","e"],"mappings":"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CA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React from \"react\";\r\nimport \"date-fns\";\r\nimport {\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Divider,\r\n  Container,\r\n  InputLabel,\r\n  Select,\r\n  FormControl,\r\n  FormHelperText,\r\n  MenuItem,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme } from \"../../theme/light\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: \"rect(0 0 0 0)\",\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: \"hidden\",\r\n    padding: 0,\r\n    position: \"absolute\",\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 400,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\nclass Home extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: \"\",\r\n      startDate: new Date(),\r\n      endDate: new Date() + 1,\r\n    };\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      age: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleDateChange = (date) => {\r\n    this.setState({\r\n      startDate: date,\r\n      endDate: date + 1,\r\n    });\r\n  };\r\n  handleEndDateChange = (date) => {\r\n    this.setState({\r\n      endDate: date,\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { age, startDate, endDate } = this.state;\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Box className=\"container\" p={2.5} bgcolor=\"primary.lightBgContainer\">\r\n          <Paper className=\"content lead-page\">\r\n            <Box className=\"page-heading\" mb={3}>\r\n              <Box color=\"text.secondary\" pt={3} pr={2.7} pb={1.8} pl={3}>\r\n                <Typography variant=\"h6\" gutterBottom color=\"inherit\">\r\n                  Dashboard\r\n                </Typography>\r\n              </Box>\r\n              <Divider />\r\n            </Box>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container justifyContent=\"space-around\">\r\n                <FormControl variant=\"outlined\" className={classes.formControl}>\r\n                  <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                    Age\r\n                  </InputLabel>\r\n                  <Select\r\n                    labelId=\"demo-simple-select-outlined-label\"\r\n                    id=\"demo-simple-select-outlined\"\r\n                    value={age}\r\n                    onChange={(e) => this.handleChange(e)}\r\n                    label=\"Age\"\r\n                  >\r\n                    <MenuItem value=\"\">\r\n                      <em>None</em>\r\n                    </MenuItem>\r\n                    <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"Start Date\"\r\n                  value={startDate}\r\n                  onChange={(date) => this.handleDateChange(date)}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"End Date\"\r\n                  minDate={startDate}\r\n                  value={endDate}\r\n                  onChange={(date) => this.handleEndDateChange(date)}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n\r\n                <Button size=\"small\" color=\"primary\">\r\n                  Primary\r\n                </Button>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n          </Paper>\r\n        </Box>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(useStyles)(Home);\r\n// import React from \"react\";\r\n// import {\r\n//   Paper, Box, Typography\r\n// } from \"@material-ui/core\";\r\n// import { ThemeProvider } from \"@material-ui/core/styles\";\r\n// import { theme } from '../../theme/light';\r\n\r\n// import PropTypes from 'prop-types';\r\n// import clsx from 'clsx';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import {Table, Grid, TextField} from '@material-ui/core';\r\n// import TableBody from '@material-ui/core/TableBody';\r\n// import TableCell from '@material-ui/core/TableCell';\r\n// import TableContainer from '@material-ui/core/TableContainer';\r\n// import TableHead from '@material-ui/core/TableHead';\r\n// import TablePagination from '@material-ui/core/TablePagination';\r\n// import TableRow from '@material-ui/core/TableRow';\r\n// import TableSortLabel from '@material-ui/core/TableSortLabel';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import Checkbox from '@material-ui/core/Checkbox';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import Tooltip from '@material-ui/core/Tooltip';\r\n// import DeleteIcon from '@material-ui/icons/Delete';\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import Drawer from '@material-ui/core/Drawer';\r\n// import Button from '@material-ui/core/Button';\r\n// import Divider from '@material-ui/core/Divider';\r\n// import CloseIcon from '@material-ui/icons/Close';\r\n\r\n// function createData(name, calories, fat, carbs, protein) {\r\n//   return { name, calories, fat, carbs, protein };\r\n// }\r\n\r\n// const rows = [\r\n//   createData('Cupcake', 305, 3.7, 67, 4.3),\r\n//   createData('Donut', 452, 25.0, 51, 4.9),\r\n//   createData('Eclair', 262, 16.0, 24, 6.0),\r\n//   createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n//   createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n//   createData('Honeycomb', 408, 3.2, 87, 6.5),\r\n//   createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n//   createData('Jelly Bean', 375, 0.0, 94, 0.0),\r\n//   createData('KitKat', 518, 26.0, 65, 7.0),\r\n//   createData('Lollipop', 392, 0.2, 98, 0.0),\r\n//   createData('Marshmallow', 318, 0, 81, 2.0),\r\n//   createData('Nougat', 360, 19.0, 9, 37.0),\r\n//   createData('Oreo', 437, 18.0, 63, 4.0),\r\n// ];\r\n\r\n// function descendingComparator(a, b, orderBy) {\r\n//   if (b[orderBy] < a[orderBy]) {\r\n//     return -1;\r\n//   }\r\n//   if (b[orderBy] > a[orderBy]) {\r\n//     return 1;\r\n//   }\r\n//   return 0;\r\n// }\r\n\r\n// function getComparator(order, orderBy) {\r\n//   return order === 'desc'\r\n//     ? (a, b) => descendingComparator(a, b, orderBy)\r\n//     : (a, b) => -descendingComparator(a, b, orderBy);\r\n// }\r\n\r\n// function stableSort(array, comparator) {\r\n//   const stabilizedThis = array.map((el, index) => [el, index]);\r\n//   stabilizedThis.sort((a, b) => {\r\n//     const order = comparator(a[0], b[0]);\r\n//     if (order !== 0) return order;\r\n//     return a[1] - b[1];\r\n//   });\r\n//   return stabilizedThis.map((el) => el[0]);\r\n// }\r\n\r\n// const headCells = [\r\n//   { id: 'name', numeric: false, disablePadding: true, label: 'Dessert (100g serving)' },\r\n//   { id: 'calories', numeric: true, disablePadding: false, label: 'Calories' },\r\n//   { id: 'fat', numeric: true, disablePadding: false, label: 'Fat (g)' },\r\n//   { id: 'carbs', numeric: true, disablePadding: false, label: 'Carbs (g)' },\r\n//   { id: 'protein', numeric: true, disablePadding: false, label: 'Action' },\r\n// ];\r\n\r\n// function EnhancedTableHead(props) {\r\n//   const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n//   const createSortHandler = (property) => (event) => {\r\n//     onRequestSort(event, property);\r\n//   };\r\n\r\n//   return (\r\n//     <TableHead>\r\n//       <TableRow>\r\n//         <TableCell padding=\"checkbox\">\r\n//           <Checkbox\r\n//             indeterminate={numSelected > 0 && numSelected < rowCount}\r\n//             checked={rowCount > 0 && numSelected === rowCount}\r\n//             onChange={onSelectAllClick}\r\n//             inputProps={{ 'aria-label': 'select all desserts' }}\r\n//           />\r\n//         </TableCell>\r\n//         {headCells.map((headCell) => (\r\n//           <TableCell\r\n//             key={headCell.id}\r\n//             align={headCell.numeric ? 'right' : 'left'}\r\n//             padding={headCell.disablePadding ? 'none' : 'normal'}\r\n//             sortDirection={orderBy === headCell.id ? order : false}\r\n//           >\r\n//             <TableSortLabel\r\n//               active={orderBy === headCell.id}\r\n//               direction={orderBy === headCell.id ? order : 'asc'}\r\n//               onClick={createSortHandler(headCell.id)}\r\n//             >\r\n//               {headCell.label}\r\n//               {orderBy === headCell.id ? (\r\n//                 <span className={classes.visuallyHidden}>\r\n//                   {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\r\n//                 </span>\r\n//               ) : null}\r\n//             </TableSortLabel>\r\n//           </TableCell>\r\n//         ))}\r\n//       </TableRow>\r\n//     </TableHead>\r\n//   );\r\n// }\r\n\r\n// EnhancedTableHead.propTypes = {\r\n//   classes: PropTypes.object.isRequired,\r\n//   numSelected: PropTypes.number.isRequired,\r\n//   onRequestSort: PropTypes.func.isRequired,\r\n//   onSelectAllClick: PropTypes.func.isRequired,\r\n//   order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n//   orderBy: PropTypes.string.isRequired,\r\n//   rowCount: PropTypes.number.isRequired,\r\n// };\r\n\r\n// const useToolbarStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     paddingLeft: theme.spacing(2),\r\n//     paddingRight: theme.spacing(1),\r\n//   },\r\n//   highlight:\r\n//     theme.palette.type === 'light'\r\n//       ? {\r\n//           color: theme.palette.primary.light,\r\n//           // backgroundColor: lighten(theme.palette.primary.light, 0.85),\r\n//         }\r\n//       : {\r\n//           color: theme.palette.primary.light,\r\n//           // backgroundColor: theme.palette.primary.dark,\r\n//         },\r\n//   title: {\r\n//     flex: '1 1 100%',\r\n//   },\r\n// }));\r\n\r\n// const EnhancedTableToolbar = (props) => {\r\n//   const classes = useToolbarStyles();\r\n//   const { numSelected } = props;\r\n\r\n//   return (\r\n//     <Toolbar\r\n//       className={clsx(classes.root, {\r\n//         [classes.highlight]: numSelected > 0,\r\n//       })}\r\n//     >\r\n//       {numSelected > 0 ? (\r\n//         <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n//           {numSelected} selected\r\n//         </Typography>\r\n//       ) : (\r\n//         <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n//           Data Table\r\n//         </Typography>\r\n//       )}\r\n\r\n//       {numSelected > 0 ? (\r\n//         <Tooltip title=\"Delete\">\r\n//           <IconButton aria-label=\"delete\">\r\n//             <DeleteIcon />\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       ) : (\r\n//         <Tooltip title=\"Filter list\">\r\n//           <IconButton aria-label=\"filter list\">\r\n//             {/* <FilterListIcon /> */}\r\n//           </IconButton>\r\n//         </Tooltip>\r\n//       )}\r\n//     </Toolbar>\r\n//   );\r\n// };\r\n\r\n// EnhancedTableToolbar.propTypes = {\r\n//   numSelected: PropTypes.number.isRequired,\r\n// };\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   root: {\r\n//     width: '100%',\r\n//   },\r\n//   paper: {\r\n//     width: '100%',\r\n//     marginBottom: theme.spacing(2),\r\n//   },\r\n//   table: {\r\n//     minWidth: 750,\r\n//   },\r\n//   visuallyHidden: {\r\n//     border: 0,\r\n//     clip: 'rect(0 0 0 0)',\r\n//     height: 1,\r\n//     margin: -1,\r\n//     overflow: 'hidden',\r\n//     padding: 0,\r\n//     position: 'absolute',\r\n//     top: 20,\r\n//     width: 1,\r\n//   },\r\n// }));\r\n\r\n// function Home() {\r\n//   const classes = useStyles();\r\n//   const [order, setOrder] = React.useState('asc');\r\n//   const [orderBy, setOrderBy] = React.useState('calories');\r\n//   const [selected, setSelected] = React.useState([]);\r\n//   const [page, setPage] = React.useState(0);\r\n//   const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n//   const handleRequestSort = (event, property) => {\r\n//     const isAsc = orderBy === property && order === 'asc';\r\n//     setOrder(isAsc ? 'desc' : 'asc');\r\n//     setOrderBy(property);\r\n//   };\r\n\r\n//   const handleSelectAllClick = (event) => {\r\n//     if (event.target.checked) {\r\n//       const newSelecteds = rows.map((n) => n.name);\r\n//       setSelected(newSelecteds);\r\n//       return;\r\n//     }\r\n//     setSelected([]);\r\n//   };\r\n\r\n//   const handleClick = (event, name) => {\r\n//     const selectedIndex = selected.indexOf(name);\r\n//     let newSelected = [];\r\n\r\n//     if (selectedIndex === -1) {\r\n//       newSelected = newSelected.concat(selected, name);\r\n//     } else if (selectedIndex === 0) {\r\n//       newSelected = newSelected.concat(selected.slice(1));\r\n//     } else if (selectedIndex === selected.length - 1) {\r\n//       newSelected = newSelected.concat(selected.slice(0, -1));\r\n//     } else if (selectedIndex > 0) {\r\n//       newSelected = newSelected.concat(\r\n//         selected.slice(0, selectedIndex),\r\n//         selected.slice(selectedIndex + 1),\r\n//       );\r\n//     }\r\n\r\n//     setSelected(newSelected);\r\n//   };\r\n\r\n//   const handleChangePage = (event, newPage) => {\r\n//     setPage(newPage);\r\n//   };\r\n\r\n//   const handleChangeRowsPerPage = (event) => {\r\n//     setRowsPerPage(parseInt(event.target.value, 10));\r\n//     setPage(0);\r\n//   };\r\n\r\n//   const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n//   const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n// // Drawer start here\r\n\r\n//   const [state, setState] = React.useState({\r\n//     top: false,\r\n//     left: false,\r\n//     bottom: false,\r\n//     right: false,\r\n//   });\r\n\r\n//   const toggleDrawer = (anchor, open) => (event) => {\r\n//     if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n//       return;\r\n//     }\r\n\r\n//     setState({ ...state, [anchor]: open });\r\n//   };\r\n\r\n//   const list = (anchor) => (\r\n//     <Box className=\"share-steps\" height=\"100%\">\r\n//     <Box   display=\"flex\"\r\n//         width=\"100%\"\r\n//         height=\"100%\"\r\n//         flexDirection=\"column\"\r\n//         bgcolor=\"primary.drawerBg\"\r\n//       className={clsx(classes.list, {\r\n//         [classes.fullList]: anchor === 'top' || anchor === 'bottom',\r\n//       })}\r\n//       role=\"presentation\"\r\n\r\n//     >\r\n//       <Box className=\"common-content\" position=\"relative\" height=\"100%\">\r\n//           <Box className=\"sidebar-header\" display=\"flex\" alignItems=\"center\" px={3} py={2.4}>\r\n//             <Box color=\"text.textBlue\">\r\n//               <Typography variant=\"h6\" gutterBottom color=\"inherit\">\r\n//                 Edit\r\n//               </Typography>\r\n//             </Box>\r\n//             <Box\r\n//               className=\"close-drawer cursor-pointer\"\r\n//               display=\"flex\"\r\n//               alignItems=\"center\"\r\n//               color=\"grey.500\"\r\n//               onClick={toggleDrawer(anchor, false)}>\r\n//               <CloseIcon color=\"inherit\" />\r\n//             </Box>\r\n//           </Box>\r\n//           <Divider />\r\n\r\n//           <Box className=\"share-sidebar-content share-mamber-content\" p={3}>\r\n//           <Grid container spacing={2}>\r\n//             <Grid item xs={4}>\r\n//               <TextField type=\"text\" label=\"First Name\" variant=\"outlined\" className=\"custom-textfield\" />\r\n//             </Grid>\r\n//             <Grid item xs={4}>\r\n//               <TextField type=\"text\" label=\"Last Name\" variant=\"outlined\" className=\"custom-textfield\" />\r\n//             </Grid>\r\n//             <Grid item xs={4}>\r\n//               <TextField type=\"text\" label=\"Email Address\" variant=\"outlined\" className=\"custom-textfield\" />\r\n//             </Grid>\r\n//           </Grid>\r\n\r\n//             <Box>\r\n\r\n//             </Box>\r\n//           </Box>\r\n\r\n//           <Box\r\n//           className=\"sidebar-footer\"\r\n//           position=\"absolute\"\r\n//           bottom=\"0\"\r\n//           left=\"0\"\r\n//           width=\"100%\"\r\n//           minHeight=\"82px\"\r\n//           px={3}\r\n//           py={1.5}\r\n//           display=\"flex\"\r\n//           alignItems=\"center\"\r\n//           boxSizing=\"border-box\"\r\n//           bgcolor=\"primary.drawerBg\">\r\n//           <Box  pr={1} width=\"150px\" boxSizing=\"border-box\">\r\n//             <Button variant=\"outlined\" className=\"cancel-button\" disableElevation size=\"large\" onClick={toggleDrawer(anchor, false)}>\r\n//               Cancel\r\n//             </Button>\r\n//           </Box>\r\n//           <Box width=\"150px\" boxSizing=\"border-box\">\r\n//             <Button variant=\"contained\" color=\"primary\" className=\"next-button\" disableElevation size=\"large\">\r\n//               Update\r\n//             </Button>\r\n//           </Box>\r\n//         </Box>\r\n//         </Box>\r\n//     </Box>\r\n//     </Box>\r\n\r\n//     // Drawer End here\r\n//     )\r\n//   return (\r\n//     <ThemeProvider theme={theme}>\r\n//     <Box className=\"container\" p={2.5}  bgcolor=\"primary.lightBgContainer\">\r\n//       <Paper className=\"content lead-page\" >\r\n//         {/* <Box className=\"page-heading\" mb={3}>\r\n//           <Box color=\"text.secondary\" pt={3} pr={2.7} pb={1.8} pl={3}>\r\n//             <Typography variant=\"h6\" gutterBottom color=\"inherit\">\r\n//               Dashboard\r\n//             </Typography>\r\n//           </Box>\r\n//           <Divider />\r\n//         </Box> */}\r\n\r\n// <div className=\"data-table\">\r\n// <div className={classes.root}>\r\n//       <Paper className={classes.paper} elevation={0}>\r\n//         <EnhancedTableToolbar numSelected={selected.length} />\r\n//         <TableContainer>\r\n//           <Table\r\n//             className={classes.table}\r\n//             aria-labelledby=\"tableTitle\"\r\n//             aria-label=\"enhanced table\"\r\n//           >\r\n//             <EnhancedTableHead\r\n//               classes={classes}\r\n//               numSelected={selected.length}\r\n//               order={order}\r\n//               orderBy={orderBy}\r\n//               onSelectAllClick={handleSelectAllClick}\r\n//               onRequestSort={handleRequestSort}\r\n//               rowCount={rows.length}\r\n//             />\r\n//             <TableBody>\r\n//               {stableSort(rows, getComparator(order, orderBy))\r\n//                 .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n//                 .map((row, index) => {\r\n//                   const isItemSelected = isSelected(row.name);\r\n//                   const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n//                   return (\r\n//                     <TableRow\r\n//                       hover\r\n//                       onClick={(event) => handleClick(event, row.name)}\r\n//                       role=\"checkbox\"\r\n//                       aria-checked={isItemSelected}\r\n//                       tabIndex={-1}\r\n//                       key={row.name}\r\n//                       selected={isItemSelected}\r\n//                     >\r\n//                       <TableCell padding=\"checkbox\">\r\n//                         <Checkbox\r\n//                           checked={isItemSelected}\r\n//                           inputProps={{ 'aria-labelledby': labelId }}\r\n//                         />\r\n//                       </TableCell>\r\n//                       <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\r\n//                         {row.name}\r\n//                       </TableCell>\r\n//                       <TableCell align=\"right\">{row.calories}</TableCell>\r\n//                       <TableCell align=\"right\">{row.fat}</TableCell>\r\n//                       <TableCell align=\"right\">{row.carbs}</TableCell>\r\n//                       <TableCell align=\"right\">\r\n// <Box display=\"inline-flex\" alignItems=\"center\" ml=\"auto\">\r\n//   <Box className=\"edit-icon cursor-pointer\" mr={1} bgcolor=\"primary.primaryIconBg\" color=\"text.textSecondary\"  width=\"27px\" height=\"27px\" borderRadius=\"5px\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n//     <EditIcon style={{ fontSize: 18 }} color=\"inherit\" />\r\n//     </Box>\r\n//     <Box className=\"edit-icon cursor-pointer\" bgcolor=\"error.lightIcon\" color=\"error.dark\"  width=\"27px\" height=\"27px\" borderRadius=\"5px\" display=\"flex\" alignItems=\"center\" justifyContent=\"center\">\r\n//     <DeleteIcon style={{ fontSize: 18 }} color=\"inherit\" />\r\n//     </Box>\r\n// </Box>\r\n//                       </TableCell>\r\n//                     </TableRow>\r\n//                   );\r\n//                 })}\r\n//               {emptyRows > 0 && (\r\n//                 <TableRow >\r\n//                   <TableCell colSpan={6} />\r\n//                 </TableRow>\r\n//               )}\r\n//             </TableBody>\r\n//           </Table>\r\n//         </TableContainer>\r\n//         <TablePagination\r\n//           rowsPerPageOptions={[5, 10, 25]}\r\n//           component=\"div\"\r\n//           count={rows.length}\r\n//           rowsPerPage={rowsPerPage}\r\n//           page={page}\r\n//           onPageChange={handleChangePage}\r\n//           onRowsPerPageChange={handleChangeRowsPerPage}\r\n//         />\r\n//       </Paper>\r\n\r\n//     </div>\r\n// </div>\r\n\r\n// {/* Drawer Map here */}\r\n// <div>\r\n//       {['right'].map((anchor) => (\r\n//         <React.Fragment key={anchor}>\r\n//           <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button>\r\n//           <Drawer className=\"common-sidebar \" anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n//             {list(anchor)}\r\n//           </Drawer>\r\n//         </React.Fragment>\r\n//       ))}\r\n//     </div>\r\n\r\n//     {/* Drawer Map here */}\r\n//       </Paper>\r\n//     </Box>\r\n//   </ThemeProvider>\r\n//   );\r\n// }\r\n\r\n// export default Home;\r\n"]},"metadata":{},"sourceType":"module"}