{"ast":null,"code":"var _jsxFileName = \"/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/pages/Home/index.js\";\nimport React from \"react\";\nimport \"date-fns\";\nimport { Paper, Box, Typography, Divider, Container, InputLabel, Select, FormControl, FormHelperText, MenuItem, Grid, Button } from \"@material-ui/core\";\nimport { Table, TextField, CircularProgress } from \"@material-ui/core\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { connect } from \"react-redux\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"../../theme/light\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport UserService from \"../../services/user.service\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  root: {\n    \"& > *\": {\n      marginTop: theme.spacing(4)\n    }\n  },\n  paper: {\n    width: \"100%\"\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 300\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nconst headCells = [{\n  id: \"vehicleName\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Vehicle Name\"\n}, {\n  id: \"checkin\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Total Check In\"\n}, {\n  id: \"checkout\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Total Check Out\"\n} // { id: \"city\", numeric: false, disablePadding: false, label: \"Email\" },\n// {\n//   id: \"description\",\n//   numeric: false,\n//   disablePadding: false,\n//   label: \"Description\",\n// },\n];\nlet rows = [];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? \"right\" : \"left\",\n        padding: headCell.disablePadding ? \"none\" : \"normal\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : \"asc\",\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  console.log(\"getComparator\", order);\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nclass Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.getRefreshMapping = async () => {\n      const {\n        deviceuniqueid,\n        token\n      } = this.state;\n\n      try {\n        const response = await UserService.mapping(deviceuniqueid, token);\n        const {\n          status,\n          data\n        } = response;\n        const {\n          groupmapping\n        } = data;\n        const {\n          data: list\n        } = groupmapping;\n        console.log(\"response after getRefreshMapping --> \", response);\n\n        if (data && list.length > 0) {\n          let id = [];\n          list.map((item, index) => {\n            id.push(item.instanceid);\n          });\n          id = id.join(\",\");\n          this.setState({\n            mappingList: list,\n            consolidates: id\n          });\n        }\n      } catch (error) {\n        console.log(\"error getRefreshMapping\", error);\n      }\n    };\n\n    this.getDailyAdminParkingStatusReport = async inputdate => {\n      const {\n        token,\n        facilityid\n      } = this.state;\n      let inputdatetime = moment(inputdate).format(\"DD-MMM-YYYY\"); // 01-Oct-2022\n\n      try {\n        const response = await UserService.AdminParkingStatusReport(facilityid, token, \"01-Oct-2022\");\n        console.log(\"response after getDailyAdminParkingStatusReport \", response);\n        const {\n          data: res\n        } = response;\n\n        if (res.respCode === 1 && res) {\n          const {\n            checkin,\n            checkout,\n            payment\n          } = res;\n          let totalcheckin = 0;\n          let totalcheckout = 0;\n          let totalPayment = 0;\n          let totalVehicle = 0;\n          let carIn = 0;\n          let carOut = 0;\n          let bikeIn = 0;\n          let bikeOut = 0;\n          let bicycleIn = 0;\n          let bicycleOut = 0;\n          let autoIn = 0;\n          let autoOut = 0;\n          let cashCount = 0;\n          let onlineCount = 0;\n          let noCashCount = 0;\n          let vehicleArray = [];\n          const vechicles = {\n            1: \"Bike\",\n            2: \"Car\",\n            3: \"Auto\",\n            4: \"Bicycle\"\n          };\n\n          if (checkin) {\n            for (let i = 0; i < checkin.length; i++) {\n              const {\n                vehicletype,\n                vehiclecount\n              } = checkin[i];\n              const vehicleName = vechicles[vehicletype];\n              const ifExist = vehicleArray.findIndex((value, index) => value === vehicleName);\n\n              if (ifExist == -1) {\n                vehicleArray.push(vehicleName);\n              }\n\n              carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\n              bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\n              bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\n              autoIn = vehicleName == \"Auto\" ? vehiclecount : autoIn;\n              totalcheckin = totalcheckin + vehiclecount;\n            }\n\n            console.log(\"checkin data\", carIn);\n          }\n\n          let finalArray = [];\n          let objCar = {\n            name: \"Car\",\n            total: carIn\n          };\n          finalArray.push(objCar);\n          let objBike = {\n            name: \"Bike\",\n            total: bikeIn\n          };\n          finalArray.push(objBike);\n          let objBicycle = {\n            name: \"Bicycle\",\n            total: bicycleIn\n          };\n          finalArray.push(objBicycle);\n          this.setState({\n            dailyReport: finalArray\n          });\n        }\n      } catch (error) {\n        console.log(\"error getDailyAdminParkingStatusReport\", error);\n      }\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        age: event.target.value\n      });\n    };\n\n    this.handleTypeChange = event => {\n      this.setState({\n        type: event.target.value\n      });\n    };\n\n    this.handleDateChange = date => {\n      console.log(date);\n      this.setState({\n        startDate: date,\n        endDate: date + 1\n      });\n    };\n\n    this.handleEndDateChange = date => {\n      this.setState({\n        endDate: date\n      });\n    };\n\n    this.state = {\n      age: \"\",\n      startDate: new Date(),\n      endDate: new Date() + 1,\n      deviceuniqueid: \"Web\",\n      token: \"339CFB64EDC6E94C5577CD68319E72AB6732C711AE661427AC83931B33F05CC4\",\n      mappingList: [],\n      consolidates: \"\",\n      type: \"\",\n      facilityid: \"\",\n      dailyReport: [],\n      selected: [],\n      order: \"asc\",\n      orderBy: \"calories\",\n      selected: [],\n      page: 0,\n      rowsPerPage: 10\n    };\n  }\n\n  componentDidMount() {\n    const {\n      userDetails\n    } = this.props;\n    const {\n      loginToken\n    } = userDetails;\n    this.setState({\n      token: loginToken,\n      facilityid: \"34\"\n    }, () => {\n      this.getRefreshMapping();\n      this.getDailyAdminParkingStatusReport(new Date());\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      age,\n      startDate,\n      endDate,\n      mappingList,\n      type,\n      rowsPerPage,\n      page,\n      selected,\n      orderBy,\n      order,\n      dailyReport\n    } = this.state;\n    const rows = [];\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, dailyReport.length - page * rowsPerPage);\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    console.log(\"mappingList\", mappingList, \" type\", type);\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"container\",\n        p: 2.5,\n        bgcolor: \"primary.lightBgContainer\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"content lead-page\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"page-heading\",\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              color: \"text.secondary\",\n              pt: 3,\n              pr: 2.7,\n              pb: 1.8,\n              pl: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                color: \"inherit\",\n                children: \"Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: DateFnsUtils,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-evenly\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"standard\",\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"age-native-simple\",\n                  children: \"Select Faciliy\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  native: true,\n                  value: age,\n                  placeholder: \"Age\",\n                  onChange: e => this.handleChange(e),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"0\",\n                    children: \"Consolidated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 21\n                  }, this), mappingList.map((data, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: data.instanceid,\n                      children: data.name\n                    }, index.toString(), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 389,\n                      columnNumber: 25\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"standard\",\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"age-native-simple\",\n                  children: \"Select Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  native: true,\n                  value: type,\n                  placeholder: \"Age\",\n                  onChange: e => this.handleTypeChange(e),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    \"aria-label\": \"None\",\n                    value: \"NA\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Daily\",\n                    children: \"Daily\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Monthly\",\n                    children: \"Monthly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                variant: \"inline\",\n                format: \"dd/MM/yyyy\",\n                margin: \"normal\",\n                id: \"date-picker-inline\",\n                label: \"Date\",\n                value: \"Sat Oct 01 2022 00:37:00 GMT+0530 (India Standard Time)\",\n                onChange: date => this.handleDateChange(date),\n                KeyboardButtonProps: {\n                  \"aria-label\": \"change date\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.root,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  size: \"small\",\n                  color: \"primary\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 441,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-table\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.root,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                className: classes.paper,\n                elevation: 0,\n                children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    className: classes.table,\n                    \"aria-labelledby\": \"tableTitle\",\n                    \"aria-label\": \"enhanced table\",\n                    children: [/*#__PURE__*/_jsxDEV(EnhancedTableHead, {\n                      classes: classes,\n                      numSelected: selected.length,\n                      order: order,\n                      orderBy: orderBy,\n                      onSelectAllClick: this.handleSelectAllClick,\n                      onRequestSort: this.handleRequestSort,\n                      rowCount: rows.length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 458,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      children: [stableSort(rows, getComparator(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((Lead, index) => {\n                        const isItemSelected = isSelected(Lead.id);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n                        return /*#__PURE__*/_jsxDEV(TableRow, {\n                          hover: true // onClick={(event) =>\n                          //   this.handleClick(event, Lead.id)\n                          // }\n                          //role=\"checkbox\"\n                          //aria-checked={isItemSelected}\n                          ,\n                          tabIndex: -1,\n                          selected: isItemSelected,\n                          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                            component: \"th\",\n                            id: labelId,\n                            scope: \"row\",\n                            padding: \"none\",\n                            children: Lead.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 495,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            align: \"left\",\n                            children: Lead.emailAddress\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 503,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            align: \"left\",\n                            children: Lead.mobileNumber\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 506,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            align: \"left\",\n                            children: Lead.city\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 509,\n                            columnNumber: 33\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            align: \"left\",\n                            children: Lead.description\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 510,\n                            columnNumber: 33\n                          }, this)]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 478,\n                          columnNumber: 31\n                        }, this);\n                      }), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: /*#__PURE__*/_jsxDEV(TableCell, {\n                          colSpan: 6\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 518,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 517,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 467,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 452,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n                  rowsPerPageOptions: [10, 50, 100],\n                  component: \"div\",\n                  count: dailyReport.length,\n                  rowsPerPage: rowsPerPage,\n                  page: page,\n                  onPageChange: this.handleChangePage,\n                  onRowsPerPageChange: this.handleChangeRowsPerPage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userDetails: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(useStyles)(Home));\n\nvar _c;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");","map":{"version":3,"sources":["/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/pages/Home/index.js"],"names":["React","Paper","Box","Typography","Divider","Container","InputLabel","Select","FormControl","FormHelperText","MenuItem","Grid","Button","Table","TextField","CircularProgress","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","connect","ThemeProvider","theme","withStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","UserService","moment","useStyles","root","marginTop","spacing","paper","width","formControl","minWidth","selectEmpty","headCells","id","numeric","disablePadding","label","rows","EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","createSortHandler","property","event","map","headCell","visuallyHidden","descendingComparator","a","b","getComparator","console","log","stableSort","array","comparator","stabilizedThis","el","index","sort","Home","PureComponent","constructor","getRefreshMapping","deviceuniqueid","token","state","response","mapping","status","data","groupmapping","list","length","item","push","instanceid","join","setState","mappingList","consolidates","error","getDailyAdminParkingStatusReport","inputdate","facilityid","inputdatetime","format","AdminParkingStatusReport","res","respCode","checkin","checkout","payment","totalcheckin","totalcheckout","totalPayment","totalVehicle","carIn","carOut","bikeIn","bikeOut","bicycleIn","bicycleOut","autoIn","autoOut","cashCount","onlineCount","noCashCount","vehicleArray","vechicles","i","vehicletype","vehiclecount","vehicleName","ifExist","findIndex","value","finalArray","objCar","name","total","objBike","objBicycle","dailyReport","handleChange","age","target","handleTypeChange","type","handleDateChange","date","startDate","endDate","handleEndDateChange","Date","selected","page","rowsPerPage","componentDidMount","userDetails","loginToken","render","emptyRows","Math","min","isSelected","indexOf","e","toString","table","handleSelectAllClick","handleRequestSort","slice","Lead","isItemSelected","labelId","emailAddress","mobileNumber","city","description","handleChangePage","handleChangeRowsPerPage","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"date-fns\";\r\nimport {\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Divider,\r\n  Container,\r\n  InputLabel,\r\n  Select,\r\n  FormControl,\r\n  FormHelperText,\r\n  MenuItem,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Table, TextField, CircularProgress } from \"@material-ui/core\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme } from \"../../theme/light\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport UserService from \"../../services/user.service\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 300,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"vehicleName\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Vehicle Name\",\r\n  },\r\n  {\r\n    id: \"checkin\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Total Check In\",\r\n  },\r\n  {\r\n    id: \"checkout\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Total Check Out\",\r\n  },\r\n  // { id: \"city\", numeric: false, disablePadding: false, label: \"Email\" },\r\n  // {\r\n  //   id: \"description\",\r\n  //   numeric: false,\r\n  //   disablePadding: false,\r\n  //   label: \"Description\",\r\n  // },\r\n];\r\nlet rows = [];\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell> */}\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  console.log(\"getComparator\", order);\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nclass Home extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: \"\",\r\n      startDate: new Date(),\r\n      endDate: new Date() + 1,\r\n      deviceuniqueid: \"Web\",\r\n      token: \"339CFB64EDC6E94C5577CD68319E72AB6732C711AE661427AC83931B33F05CC4\",\r\n      mappingList: [],\r\n      consolidates: \"\",\r\n      type: \"\",\r\n      facilityid: \"\",\r\n      dailyReport: [],\r\n      selected: [],\r\n      order: \"asc\",\r\n      orderBy: \"calories\",\r\n      selected: [],\r\n      page: 0,\r\n      rowsPerPage: 10,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { userDetails } = this.props;\r\n    const { loginToken } = userDetails;\r\n    this.setState(\r\n      {\r\n        token: loginToken,\r\n        facilityid: \"34\",\r\n      },\r\n      () => {\r\n        this.getRefreshMapping();\r\n        this.getDailyAdminParkingStatusReport(new Date());\r\n      }\r\n    );\r\n  }\r\n\r\n  getRefreshMapping = async () => {\r\n    const { deviceuniqueid, token } = this.state;\r\n\r\n    try {\r\n      const response = await UserService.mapping(deviceuniqueid, token);\r\n      const { status, data } = response;\r\n      const { groupmapping } = data;\r\n      const { data: list } = groupmapping;\r\n      console.log(\"response after getRefreshMapping --> \", response);\r\n      if (data && list.length > 0) {\r\n        let id = [];\r\n        list.map((item, index) => {\r\n          id.push(item.instanceid);\r\n        });\r\n        id = id.join(\",\");\r\n        this.setState({\r\n          mappingList: list,\r\n          consolidates: id,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error getRefreshMapping\", error);\r\n    }\r\n  };\r\n\r\n  getDailyAdminParkingStatusReport = async (inputdate) => {\r\n    const { token, facilityid } = this.state;\r\n    let inputdatetime = moment(inputdate).format(\"DD-MMM-YYYY\"); // 01-Oct-2022\r\n\r\n    try {\r\n      const response = await UserService.AdminParkingStatusReport(\r\n        facilityid,\r\n        token,\r\n        \"01-Oct-2022\"\r\n      );\r\n\r\n      console.log(\"response after getDailyAdminParkingStatusReport \", response);\r\n      const { data: res } = response;\r\n      if (res.respCode === 1 && res) {\r\n        const { checkin, checkout, payment } = res;\r\n\r\n        let totalcheckin = 0;\r\n        let totalcheckout = 0;\r\n        let totalPayment = 0;\r\n        let totalVehicle = 0;\r\n        let carIn = 0;\r\n        let carOut = 0;\r\n        let bikeIn = 0;\r\n        let bikeOut = 0;\r\n        let bicycleIn = 0;\r\n        let bicycleOut = 0;\r\n        let autoIn = 0;\r\n        let autoOut = 0;\r\n        let cashCount = 0;\r\n        let onlineCount = 0;\r\n        let noCashCount = 0;\r\n\r\n        let vehicleArray = [];\r\n        const vechicles = {\r\n          1: \"Bike\",\r\n          2: \"Car\",\r\n          3: \"Auto\",\r\n          4: \"Bicycle\",\r\n        };\r\n        if (checkin) {\r\n          for (let i = 0; i < checkin.length; i++) {\r\n            const { vehicletype, vehiclecount } = checkin[i];\r\n            const vehicleName = vechicles[vehicletype];\r\n            const ifExist = vehicleArray.findIndex(\r\n              (value, index) => value === vehicleName\r\n            );\r\n            if (ifExist == -1) {\r\n              vehicleArray.push(vehicleName);\r\n            }\r\n\r\n            carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\r\n            bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\r\n            bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\r\n            autoIn = vehicleName == \"Auto\" ? vehiclecount : autoIn;\r\n\r\n            totalcheckin = totalcheckin + vehiclecount;\r\n          }\r\n          console.log(\"checkin data\", carIn);\r\n        }\r\n\r\n        let finalArray = [];\r\n\r\n        let objCar = {\r\n          name: \"Car\",\r\n          total: carIn,\r\n        };\r\n        finalArray.push(objCar);\r\n        let objBike = {\r\n          name: \"Bike\",\r\n          total: bikeIn,\r\n        };\r\n        finalArray.push(objBike);\r\n        let objBicycle = {\r\n          name: \"Bicycle\",\r\n          total: bicycleIn,\r\n        };\r\n        finalArray.push(objBicycle);\r\n\r\n        this.setState({\r\n          dailyReport: finalArray,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error getDailyAdminParkingStatusReport\", error);\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    this.setState({\r\n      age: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState({\r\n      type: event.target.value,\r\n    });\r\n  };\r\n\r\n  handleDateChange = (date) => {\r\n    console.log(date);\r\n    this.setState({\r\n      startDate: date,\r\n      endDate: date + 1,\r\n    });\r\n  };\r\n  handleEndDateChange = (date) => {\r\n    this.setState({\r\n      endDate: date,\r\n    });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      age,\r\n      startDate,\r\n      endDate,\r\n      mappingList,\r\n      type,\r\n      rowsPerPage,\r\n      page,\r\n      selected,\r\n      orderBy,\r\n      order,\r\n      dailyReport,\r\n    } = this.state;\r\n    const rows = [];\r\n    const emptyRows =\r\n      rowsPerPage -\r\n      Math.min(rowsPerPage, dailyReport.length - page * rowsPerPage);\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    console.log(\"mappingList\", mappingList, \" type\", type);\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Box className=\"container\" p={2.5} bgcolor=\"primary.lightBgContainer\">\r\n          <Paper className=\"content lead-page\">\r\n            <Box className=\"page-heading\" mb={3}>\r\n              <Box color=\"text.secondary\" pt={3} pr={2.7} pb={1.8} pl={3}>\r\n                <Typography variant=\"h6\" gutterBottom color=\"inherit\">\r\n                  Dashboard\r\n                </Typography>\r\n              </Box>\r\n              <Divider />\r\n            </Box>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container justifyContent=\"space-evenly\">\r\n                <FormControl variant=\"standard\" className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"age-native-simple\">\r\n                    Select Faciliy\r\n                  </InputLabel>\r\n                  <Select\r\n                    native\r\n                    value={age}\r\n                    placeholder={\"Age\"}\r\n                    onChange={(e) => this.handleChange(e)}\r\n                  >\r\n                    <option value=\"0\">Consolidated</option>\r\n\r\n                    {mappingList.map((data, index) => {\r\n                      return (\r\n                        <option key={index.toString()} value={data.instanceid}>\r\n                          {data.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"standard\" className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"age-native-simple\">\r\n                    Select Type\r\n                  </InputLabel>\r\n                  <Select\r\n                    native\r\n                    value={type}\r\n                    placeholder={\"Age\"}\r\n                    onChange={(e) => this.handleTypeChange(e)}\r\n                  >\r\n                    <option aria-label=\"None\" value=\"NA\" />\r\n                    <option value={\"Daily\"}>Daily</option>\r\n                    <option value={\"Monthly\"}>Monthly</option>\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"Date\"\r\n                  value={\r\n                    \"Sat Oct 01 2022 00:37:00 GMT+0530 (India Standard Time)\"\r\n                  }\r\n                  onChange={(date) => this.handleDateChange(date)}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n                {/* <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"End Date\"\r\n                  minDate={startDate}\r\n                  value={endDate}\r\n                  onChange={(date) => this.handleEndDateChange(date)}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                /> */}\r\n                <div className={classes.root}>\r\n                  <Button variant=\"contained\" size=\"small\" color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <div className=\"data-table\">\r\n              <div className={classes.root}>\r\n                <Paper className={classes.paper} elevation={0}>\r\n                  <TableContainer>\r\n                    <Table\r\n                      className={classes.table}\r\n                      aria-labelledby=\"tableTitle\"\r\n                      aria-label=\"enhanced table\"\r\n                    >\r\n                      <EnhancedTableHead\r\n                        classes={classes}\r\n                        numSelected={selected.length}\r\n                        order={order}\r\n                        orderBy={orderBy}\r\n                        onSelectAllClick={this.handleSelectAllClick}\r\n                        onRequestSort={this.handleRequestSort}\r\n                        rowCount={rows.length}\r\n                      />\r\n                      <TableBody>\r\n                        {stableSort(rows, getComparator(order, orderBy))\r\n                          .slice(\r\n                            page * rowsPerPage,\r\n                            page * rowsPerPage + rowsPerPage\r\n                          )\r\n                          .map((Lead, index) => {\r\n                            const isItemSelected = isSelected(Lead.id);\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                            return (\r\n                              <TableRow\r\n                                hover\r\n                                // onClick={(event) =>\r\n                                //   this.handleClick(event, Lead.id)\r\n                                // }\r\n                                //role=\"checkbox\"\r\n                                //aria-checked={isItemSelected}\r\n                                tabIndex={-1}\r\n                                key={index}\r\n                                selected={isItemSelected}\r\n                              >\r\n                                {/* <TableCell padding=\"checkbox\">\r\n                                  <Checkbox\r\n                                    checked={isItemSelected}\r\n                                    inputProps={{ \"aria-labelledby\": labelId }}\r\n                                  />\r\n                                </TableCell> */}\r\n                                <TableCell\r\n                                  component=\"th\"\r\n                                  id={labelId}\r\n                                  scope=\"row\"\r\n                                  padding=\"none\"\r\n                                >\r\n                                  {Lead.name}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">\r\n                                  {Lead.emailAddress}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">\r\n                                  {Lead.mobileNumber}\r\n                                </TableCell>\r\n                                <TableCell align=\"left\">{Lead.city}</TableCell>\r\n                                <TableCell align=\"left\">\r\n                                  {Lead.description}\r\n                                </TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        {emptyRows > 0 && (\r\n                          <TableRow>\r\n                            <TableCell colSpan={6} />\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                  <TablePagination\r\n                    rowsPerPageOptions={[10, 50, 100]}\r\n                    component=\"div\"\r\n                    count={dailyReport.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={this.handleChangePage}\r\n                    onRowsPerPageChange={this.handleChangeRowsPerPage}\r\n                  />\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </Box>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userDetails: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(Home));\r\n"]},"metadata":{},"sourceType":"module"}