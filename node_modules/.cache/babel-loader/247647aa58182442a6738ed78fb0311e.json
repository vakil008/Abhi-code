{"ast":null,"code":"import Api from \"../utils/APICaller\";\nimport { endPoints, appConfig } from \"../config\";\n\nconst singin = async (userid, password) => {\n  try {\n    const {\n      LogInWeb\n    } = endPoints;\n    const method = \"POST\";\n    let body = {\n      userid,\n      password\n    };\n    const res = await Api(LogInWeb, false, method, body);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst mapping = async (deviceuniqueid, token) => {\n  try {\n    const {\n      RefreshMappingWeb\n    } = endPoints;\n    const method = \"POST\";\n    let body = {\n      deviceuniqueid,\n      token\n    };\n    const res = await Api(RefreshMappingWeb, false, method, body);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst AdminParkingStatusReport = async (facilityid, token, inputdatetime) => {\n  try {\n    const {\n      GetAdminParkingStatusReportWeb\n    } = endPoints;\n    const method = \"POST\";\n    let body = {\n      facilityid,\n      token,\n      inputdatetime\n    };\n    const res = await Api(GetAdminParkingStatusReportWeb, false, method, body);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c = AdminParkingStatusReport;\n\nconst AdminMonthlyParkingStatusReport = async (facilityid, token, inputdatetime) => {\n  try {\n    const {\n      GetAdminMonthlyParkingStatusReportWeb\n    } = endPoints;\n    const method = \"POST\";\n    let body = {\n      facilityid,\n      token,\n      inputdatetime\n    };\n    const res = await Api(GetAdminMonthlyParkingStatusReportWeb, false, method, body);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c2 = AdminMonthlyParkingStatusReport;\n\nconst AdminMISStatusReport = async (instanceid, facilityid, token, inputdatetime) => {\n  try {\n    const {\n      GetAdminMISReport\n    } = endPoints;\n    const method = \"POST\";\n    let body = {\n      instanceid,\n      facilityid,\n      token,\n      inputdatetime\n    };\n    const res = await Api(GetAdminMISReport, false, method, body);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c3 = AdminMISStatusReport;\n\nconst AdminMonthlyMISStatusReport = async (instanceid, facilityid, token, inputmonthyear) => {\n  try {\n    const {\n      GetAdminMonthlyMISReport\n    } = endPoints;\n    const method = \"POST\";\n    let body = {\n      instanceid,\n      facilityid,\n      token,\n      inputmonthyear\n    };\n    const res = await Api(GetAdminMonthlyMISReport, false, method, body);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c4 = AdminMonthlyMISStatusReport;\n\nconst GetAllQualification = async () => {\n  try {\n    const {\n      all_qualifications\n    } = endPoints;\n    const res = await Api(all_qualifications, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c5 = GetAllQualification;\n\nconst GetAllCountry = async () => {\n  try {\n    const {\n      all_countries\n    } = endPoints;\n    const res = await Api(all_countries, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c6 = GetAllCountry;\n\nconst GetAllVisaTypes = async () => {\n  try {\n    const {\n      all_visa_type\n    } = endPoints;\n    const res = await Api(all_visa_type, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c7 = GetAllVisaTypes;\n\nconst GetAllLeadSource = async () => {\n  try {\n    const {\n      all_lead_source\n    } = endPoints;\n    const res = await Api(all_lead_source, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c8 = GetAllLeadSource;\n\nconst GetAllBranch = async () => {\n  try {\n    const {\n      all_branches\n    } = endPoints;\n    const res = await Api(all_branches, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c9 = GetAllBranch;\n\nconst GetAllLeadsStatus = async () => {\n  try {\n    const {\n      all_leads_status\n    } = endPoints;\n    const res = await Api(all_leads_status, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c10 = GetAllLeadsStatus;\n\nconst GetAllLead = async () => {\n  try {\n    const {\n      all_leads\n    } = endPoints;\n    const res = await Api(all_leads, true);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c11 = GetAllLead;\n\nconst GetAllUniversity = async () => {\n  try {\n    const {\n      all_universities\n    } = endPoints;\n    const res = await Api(all_universities, true);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c12 = GetAllUniversity;\n\nconst SaveBranch = async (name, emailAddress, mobileNumber, city, address, description) => {\n  const method = \"POST\";\n  let body = {\n    name,\n    emailAddress,\n    mobileNumber,\n    city,\n    address,\n    description\n  };\n\n  try {\n    const {\n      save_branch\n    } = endPoints;\n    const res = await Api(save_branch, true, method, body);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c13 = SaveBranch;\n\nconst SaveUser = async (firstName, lastName, userName, email, password, confirmPassword, roles, branchId) => {\n  const method = \"POST\";\n  let body = {\n    branchId,\n    firstName,\n    lastName,\n    userName,\n    email,\n    password,\n    confirmPassword,\n    roles\n  };\n\n  try {\n    const {\n      register\n    } = endPoints;\n    const res = await Api(register, true, method, body);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c14 = SaveUser;\n\nconst GetAllUser = async () => {\n  try {\n    const {\n      all_user\n    } = endPoints;\n    const res = await Api(all_user, true);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c15 = GetAllUser;\nconst UserService = {\n  singin,\n  GetAllQualification,\n  GetAllCountry,\n  GetAllVisaTypes,\n  GetAllLeadSource,\n  GetAllBranch,\n  GetAllLeadsStatus,\n  GetAllLead,\n  SaveBranch,\n  GetAllUniversity,\n  SaveUser,\n  GetAllUser,\n  mapping,\n  AdminParkingStatusReport,\n  AdminMonthlyParkingStatusReport,\n  AdminMISStatusReport\n};\nexport default UserService;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14, _c15;\n\n$RefreshReg$(_c, \"AdminParkingStatusReport\");\n$RefreshReg$(_c2, \"AdminMonthlyParkingStatusReport\");\n$RefreshReg$(_c3, \"AdminMISStatusReport\");\n$RefreshReg$(_c4, \"AdminMonthlyMISStatusReport\");\n$RefreshReg$(_c5, \"GetAllQualification\");\n$RefreshReg$(_c6, \"GetAllCountry\");\n$RefreshReg$(_c7, \"GetAllVisaTypes\");\n$RefreshReg$(_c8, \"GetAllLeadSource\");\n$RefreshReg$(_c9, \"GetAllBranch\");\n$RefreshReg$(_c10, \"GetAllLeadsStatus\");\n$RefreshReg$(_c11, \"GetAllLead\");\n$RefreshReg$(_c12, \"GetAllUniversity\");\n$RefreshReg$(_c13, \"SaveBranch\");\n$RefreshReg$(_c14, \"SaveUser\");\n$RefreshReg$(_c15, \"GetAllUser\");","map":{"version":3,"sources":["/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/services/user.service.js"],"names":["Api","endPoints","appConfig","singin","userid","password","LogInWeb","method","body","res","error","mapping","deviceuniqueid","token","RefreshMappingWeb","AdminParkingStatusReport","facilityid","inputdatetime","GetAdminParkingStatusReportWeb","AdminMonthlyParkingStatusReport","GetAdminMonthlyParkingStatusReportWeb","AdminMISStatusReport","instanceid","GetAdminMISReport","AdminMonthlyMISStatusReport","inputmonthyear","GetAdminMonthlyMISReport","GetAllQualification","all_qualifications","GetAllCountry","all_countries","GetAllVisaTypes","all_visa_type","GetAllLeadSource","all_lead_source","GetAllBranch","all_branches","GetAllLeadsStatus","all_leads_status","GetAllLead","all_leads","GetAllUniversity","all_universities","SaveBranch","name","emailAddress","mobileNumber","city","address","description","save_branch","SaveUser","firstName","lastName","userName","email","confirmPassword","roles","branchId","register","GetAllUser","all_user","UserService"],"mappings":"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","sourcesContent":["import Api from \"../utils/APICaller\";\r\nimport { endPoints, appConfig } from \"../config\";\r\nconst singin = async (userid, password) => {\r\n  try {\r\n    const { LogInWeb } = endPoints;\r\n    const method = \"POST\";\r\n    let body = {\r\n      userid,\r\n      password,\r\n    };\r\n    const res = await Api(LogInWeb, false, method, body);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst mapping = async (deviceuniqueid, token) => {\r\n  try {\r\n    const { RefreshMappingWeb } = endPoints;\r\n    const method = \"POST\";\r\n    let body = {\r\n      deviceuniqueid,\r\n      token,\r\n    };\r\n    const res = await Api(RefreshMappingWeb, false, method, body);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst AdminParkingStatusReport = async (facilityid, token, inputdatetime) => {\r\n  try {\r\n    const { GetAdminParkingStatusReportWeb } = endPoints;\r\n    const method = \"POST\";\r\n    let body = {\r\n      facilityid,\r\n      token,\r\n      inputdatetime,\r\n    };\r\n    const res = await Api(GetAdminParkingStatusReportWeb, false, method, body);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst AdminMonthlyParkingStatusReport = async (\r\n  facilityid,\r\n  token,\r\n  inputdatetime\r\n) => {\r\n  try {\r\n    const { GetAdminMonthlyParkingStatusReportWeb } = endPoints;\r\n    const method = \"POST\";\r\n    let body = {\r\n      facilityid,\r\n      token,\r\n      inputdatetime,\r\n    };\r\n    const res = await Api(\r\n      GetAdminMonthlyParkingStatusReportWeb,\r\n      false,\r\n      method,\r\n      body\r\n    );\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst AdminMISStatusReport = async (\r\n  instanceid,\r\n  facilityid,\r\n  token,\r\n  inputdatetime\r\n) => {\r\n  try {\r\n    const { GetAdminMISReport } = endPoints;\r\n    const method = \"POST\";\r\n    let body = {\r\n      instanceid,\r\n      facilityid,\r\n      token,\r\n      inputdatetime,\r\n    };\r\n    const res = await Api(GetAdminMISReport, false, method, body);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst AdminMonthlyMISStatusReport = async (\r\n  instanceid,\r\n  facilityid,\r\n  token,\r\n  inputmonthyear\r\n) => {\r\n  try {\r\n    const { GetAdminMonthlyMISReport } = endPoints;\r\n    const method = \"POST\";\r\n    let body = {\r\n      instanceid,\r\n      facilityid,\r\n      token,\r\n      inputmonthyear,\r\n    };\r\n    const res = await Api(GetAdminMonthlyMISReport, false, method, body);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllQualification = async () => {\r\n  try {\r\n    const { all_qualifications } = endPoints;\r\n\r\n    const res = await Api(all_qualifications, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllCountry = async () => {\r\n  try {\r\n    const { all_countries } = endPoints;\r\n\r\n    const res = await Api(all_countries, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllVisaTypes = async () => {\r\n  try {\r\n    const { all_visa_type } = endPoints;\r\n\r\n    const res = await Api(all_visa_type, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllLeadSource = async () => {\r\n  try {\r\n    const { all_lead_source } = endPoints;\r\n\r\n    const res = await Api(all_lead_source, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllBranch = async () => {\r\n  try {\r\n    const { all_branches } = endPoints;\r\n\r\n    const res = await Api(all_branches, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllLeadsStatus = async () => {\r\n  try {\r\n    const { all_leads_status } = endPoints;\r\n\r\n    const res = await Api(all_leads_status, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllLead = async () => {\r\n  try {\r\n    const { all_leads } = endPoints;\r\n\r\n    const res = await Api(all_leads, true);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllUniversity = async () => {\r\n  try {\r\n    const { all_universities } = endPoints;\r\n\r\n    const res = await Api(all_universities, true);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst SaveBranch = async (\r\n  name,\r\n  emailAddress,\r\n  mobileNumber,\r\n  city,\r\n  address,\r\n  description\r\n) => {\r\n  const method = \"POST\";\r\n  let body = {\r\n    name,\r\n    emailAddress,\r\n    mobileNumber,\r\n    city,\r\n    address,\r\n    description,\r\n  };\r\n  try {\r\n    const { save_branch } = endPoints;\r\n\r\n    const res = await Api(save_branch, true, method, body);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst SaveUser = async (\r\n  firstName,\r\n  lastName,\r\n  userName,\r\n  email,\r\n  password,\r\n  confirmPassword,\r\n  roles,\r\n  branchId\r\n) => {\r\n  const method = \"POST\";\r\n  let body = {\r\n    branchId,\r\n    firstName,\r\n    lastName,\r\n    userName,\r\n    email,\r\n    password,\r\n    confirmPassword,\r\n    roles,\r\n  };\r\n  try {\r\n    const { register } = endPoints;\r\n\r\n    const res = await Api(register, true, method, body);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllUser = async () => {\r\n  try {\r\n    const { all_user } = endPoints;\r\n\r\n    const res = await Api(all_user, true);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst UserService = {\r\n  singin,\r\n  GetAllQualification,\r\n  GetAllCountry,\r\n  GetAllVisaTypes,\r\n  GetAllLeadSource,\r\n  GetAllBranch,\r\n  GetAllLeadsStatus,\r\n  GetAllLead,\r\n  SaveBranch,\r\n  GetAllUniversity,\r\n  SaveUser,\r\n  GetAllUser,\r\n  mapping,\r\n  AdminParkingStatusReport,\r\n  AdminMonthlyParkingStatusReport,\r\n  AdminMISStatusReport,\r\n};\r\nexport default UserService;\r\n"]},"metadata":{},"sourceType":"module"}