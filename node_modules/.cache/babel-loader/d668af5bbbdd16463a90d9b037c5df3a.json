{"ast":null,"code":"import Api from \"../utils/APICaller\";\nimport { endPoints, appConfig } from \"../config\";\n\nconst singin = async (email, password) => {\n  try {\n    const {\n      login\n    } = endPoints;\n    const method = \"POST\";\n    let body = {\n      email,\n      password\n    };\n    const res = await Api(login, false, method, body);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\nconst GetAllQualification = async () => {\n  try {\n    const {\n      all_qualifications\n    } = endPoints;\n    const res = await Api(all_qualifications, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c = GetAllQualification;\n\nconst GetAllCountry = async () => {\n  try {\n    const {\n      all_countries\n    } = endPoints;\n    const res = await Api(all_countries, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c2 = GetAllCountry;\n\nconst GetAllVisaTypes = async () => {\n  try {\n    const {\n      all_visa_type\n    } = endPoints;\n    const res = await Api(all_visa_type, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c3 = GetAllVisaTypes;\n\nconst GetAllLeadSource = async () => {\n  try {\n    const {\n      all_lead_source\n    } = endPoints;\n    const res = await Api(all_lead_source, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c4 = GetAllLeadSource;\n\nconst GetAllBranch = async () => {\n  try {\n    const {\n      all_branches\n    } = endPoints;\n    const res = await Api(all_branches, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c5 = GetAllBranch;\n\nconst GetAllLeadsStatus = async () => {\n  try {\n    const {\n      all_leads_status\n    } = endPoints;\n    const res = await Api(all_leads_status, false);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c6 = GetAllLeadsStatus;\n\nconst GetAllLead = async () => {\n  try {\n    const {\n      all_leads\n    } = endPoints;\n    const res = await Api(all_leads, true);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c7 = GetAllLead;\n\nconst GetAllUniversity = async () => {\n  try {\n    const {\n      all_universities\n    } = endPoints;\n    const res = await Api(all_universities, true);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c8 = GetAllUniversity;\n\nconst SaveBranch = async (name, emailAddress, mobileNumber, city, address, description) => {\n  const method = \"POST\";\n  let body = {\n    name,\n    emailAddress,\n    mobileNumber,\n    city,\n    address,\n    description\n  };\n\n  try {\n    const {\n      save_branch\n    } = endPoints;\n    const res = await Api(save_branch, true, method, body);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c9 = SaveBranch;\n\nconst SaveUser = async (firstName, lastName, userName, email, password, confirmPassword, roles, branchId) => {\n  const method = \"POST\";\n  let body = {\n    branchId,\n    firstName,\n    lastName,\n    userName,\n    email,\n    password,\n    confirmPassword,\n    roles\n  };\n\n  try {\n    const {\n      register\n    } = endPoints;\n    const res = await Api(register, true, method, body);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c10 = SaveUser;\n\nconst GetAllUser = async () => {\n  try {\n    const {\n      all_user\n    } = endPoints;\n    const res = await Api(all_user, true);\n    return res;\n  } catch (error) {\n    return error;\n  }\n};\n\n_c11 = GetAllUser;\nconst UserService = {\n  singin,\n  GetAllQualification,\n  GetAllCountry,\n  GetAllVisaTypes,\n  GetAllLeadSource,\n  GetAllBranch,\n  GetAllLeadsStatus,\n  GetAllLead,\n  SaveBranch,\n  GetAllUniversity,\n  SaveUser,\n  GetAllUser\n};\nexport default UserService;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n\n$RefreshReg$(_c, \"GetAllQualification\");\n$RefreshReg$(_c2, \"GetAllCountry\");\n$RefreshReg$(_c3, \"GetAllVisaTypes\");\n$RefreshReg$(_c4, \"GetAllLeadSource\");\n$RefreshReg$(_c5, \"GetAllBranch\");\n$RefreshReg$(_c6, \"GetAllLeadsStatus\");\n$RefreshReg$(_c7, \"GetAllLead\");\n$RefreshReg$(_c8, \"GetAllUniversity\");\n$RefreshReg$(_c9, \"SaveBranch\");\n$RefreshReg$(_c10, \"SaveUser\");\n$RefreshReg$(_c11, \"GetAllUser\");","map":{"version":3,"sources":["/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/services/user.service.js"],"names":["Api","endPoints","appConfig","singin","email","password","login","method","body","res","error","GetAllQualification","all_qualifications","GetAllCountry","all_countries","GetAllVisaTypes","all_visa_type","GetAllLeadSource","all_lead_source","GetAllBranch","all_branches","GetAllLeadsStatus","all_leads_status","GetAllLead","all_leads","GetAllUniversity","all_universities","SaveBranch","name","emailAddress","mobileNumber","city","address","description","save_branch","SaveUser","firstName","lastName","userName","confirmPassword","roles","branchId","register","GetAllUser","all_user","UserService"],"mappings":"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","sourcesContent":["import Api from \"../utils/APICaller\";\r\nimport { endPoints, appConfig } from \"../config\";\r\nconst singin = async (email, password) => {\r\n  try {\r\n    const { login } = endPoints;\r\n    const method = \"POST\";\r\n    let body = {\r\n      email,\r\n      password,\r\n    };\r\n    const res = await Api(login, false, method, body);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllQualification = async () => {\r\n  try {\r\n    const { all_qualifications } = endPoints;\r\n\r\n    const res = await Api(all_qualifications, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllCountry = async () => {\r\n  try {\r\n    const { all_countries } = endPoints;\r\n\r\n    const res = await Api(all_countries, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllVisaTypes = async () => {\r\n  try {\r\n    const { all_visa_type } = endPoints;\r\n\r\n    const res = await Api(all_visa_type, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllLeadSource = async () => {\r\n  try {\r\n    const { all_lead_source } = endPoints;\r\n\r\n    const res = await Api(all_lead_source, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllBranch = async () => {\r\n  try {\r\n    const { all_branches } = endPoints;\r\n\r\n    const res = await Api(all_branches, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllLeadsStatus = async () => {\r\n  try {\r\n    const { all_leads_status } = endPoints;\r\n\r\n    const res = await Api(all_leads_status, false);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllLead = async () => {\r\n  try {\r\n    const { all_leads } = endPoints;\r\n\r\n    const res = await Api(all_leads, true);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllUniversity = async () => {\r\n  try {\r\n    const { all_universities } = endPoints;\r\n\r\n    const res = await Api(all_universities, true);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst SaveBranch = async (\r\n  name,\r\n  emailAddress,\r\n  mobileNumber,\r\n  city,\r\n  address,\r\n  description\r\n) => {\r\n  const method = \"POST\";\r\n  let body = {\r\n    name,\r\n    emailAddress,\r\n    mobileNumber,\r\n    city,\r\n    address,\r\n    description,\r\n  };\r\n  try {\r\n    const { save_branch } = endPoints;\r\n\r\n    const res = await Api(save_branch, true, method, body);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst SaveUser = async (\r\n  firstName,\r\n  lastName,\r\n  userName,\r\n  email,\r\n  password,\r\n  confirmPassword,\r\n  roles,\r\n  branchId\r\n) => {\r\n  const method = \"POST\";\r\n  let body = {\r\n    branchId,\r\n    firstName,\r\n    lastName,\r\n    userName,\r\n    email,\r\n    password,\r\n    confirmPassword,\r\n    roles,\r\n  };\r\n  try {\r\n    const { register } = endPoints;\r\n\r\n    const res = await Api(register, true, method, body);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst GetAllUser = async () => {\r\n  try {\r\n    const { all_user } = endPoints;\r\n\r\n    const res = await Api(all_user, true);\r\n    return res;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nconst UserService = {\r\n  singin,\r\n  GetAllQualification,\r\n  GetAllCountry,\r\n  GetAllVisaTypes,\r\n  GetAllLeadSource,\r\n  GetAllBranch,\r\n  GetAllLeadsStatus,\r\n  GetAllLead,\r\n  SaveBranch,\r\n  GetAllUniversity,\r\n  SaveUser,\r\n  GetAllUser,\r\n};\r\nexport default UserService;\r\n"]},"metadata":{},"sourceType":"module"}