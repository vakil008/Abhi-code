{"ast":null,"code":"var _jsxFileName = \"/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/pages/Login/index.js\";\nimport * as React from \"react\";\nimport { Link, Typography, Box, Paper, Grid, TextField, FormControl, InputLabel, OutlinedInput, InputAdornment, IconButton, Button } from \"@material-ui/core\";\nimport logo from \"../../theme/assets/images/logo.png\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"../../theme/light\";\nimport UserService from \"../../services/user.service\";\nimport { setUserToken } from \"../../store/actions/user\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Login extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleClickShowPassword = () => {\n      const {\n        showPassword\n      } = this.state;\n      this.setState({\n        showPassword: !showPassword\n      });\n    };\n\n    this.handleMouseDownPassword = event => {\n      event.preventDefault();\n    };\n\n    this.preventDefaults = event => event.preventDefault();\n\n    this.handleSubmit = async () => {\n      const {\n        dispatch\n      } = this.props;\n      const {\n        email,\n        password\n      } = this.state;\n      console.log(\"ssss\"); // eslint-disable-next-line no-console\n      // if (values.email && values.password) {\n\n      try {\n        const response = await UserService.singin(email, password);\n        const {\n          status,\n          data\n        } = response;\n        const {\n          respCode\n        } = data;\n        console.log(\"response after login call --> \", response);\n\n        if (status && respCode == 1) {\n          access, defaultstatecode, facilityid, facilityname, forcepasswordchange, gstnumber, message, role, token, username, relogin;\n          dispatch(setUserToken(jwToken));\n        }\n      } catch (error) {\n        console.log(\"status error\", error);\n      }\n    };\n\n    this.state = {\n      email: \"34_adminvaibhav1\",\n      password: \"\",\n      weight: \"\",\n      weightRange: \"\",\n      showPassword: false\n    };\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      showPassword\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        className: \"register-page\",\n        elevation: 0,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          bgcolor: \"primary.white\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            flexDirection: \"column\",\n            className: \"outer-container\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: \"register-container\",\n              display: \"flex\",\n              justifyContent: \"center\",\n              flexDirection: \"column\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                color: \"text.primary\",\n                mb: 2.7,\n                textAlign: \"center\",\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h6\",\n                  gutterBottom: true,\n                  color: \"inherit\",\n                  children: \"Please fill the fields below\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(TextField, {\n                    type: \"text\",\n                    onChange: event => {\n                      this.setState({\n                        email: event.target.value\n                      });\n                    },\n                    label: \"User Id\",\n                    value: email,\n                    variant: \"outlined\",\n                    className: \"custom-textfield\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormControl, {\n                    variant: \"outlined\",\n                    children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                      htmlFor: \"outlined-adornment-password\",\n                      children: \"Password\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(OutlinedInput, {\n                      id: \"outlined-adornment-password\",\n                      type: showPassword ? \"text\" : \"password\",\n                      value: password,\n                      onChange: event => {\n                        this.setState({\n                          password: event.target.value\n                        });\n                      },\n                      className: \"custom-textfield\",\n                      endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                        position: \"end\",\n                        children: /*#__PURE__*/_jsxDEV(IconButton, {\n                          \"aria-label\": \"toggle password visibility\",\n                          onClick: this.handleClickShowPassword,\n                          onMouseDown: this.handleMouseDownPassword,\n                          edge: \"end\",\n                          children: showPassword ? /*#__PURE__*/_jsxDEV(Visibility, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 152,\n                            columnNumber: 33\n                          }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {\n                            fontSize: \"small\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 154,\n                            columnNumber: 33\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 145,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 27\n                      }, this),\n                      labelWidth: 70\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mt: 3,\n                mb: 2.5,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: this.handleSubmit,\n                  variant: \"contained\",\n                  color: \"primary\",\n                  disableElevation: true,\n                  size: \"large\",\n                  className: \"custom-button\",\n                  fullWidth: true,\n                  children: \"Login\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps)(Login);","map":{"version":3,"sources":["/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/pages/Login/index.js"],"names":["React","Link","Typography","Box","Paper","Grid","TextField","FormControl","InputLabel","OutlinedInput","InputAdornment","IconButton","Button","logo","Visibility","VisibilityOff","ThemeProvider","theme","UserService","setUserToken","connect","Login","PureComponent","constructor","props","handleClickShowPassword","showPassword","state","setState","handleMouseDownPassword","event","preventDefault","preventDefaults","handleSubmit","dispatch","email","password","console","log","response","singin","status","data","respCode","access","defaultstatecode","facilityid","facilityname","forcepasswordchange","gstnumber","message","role","token","username","relogin","jwToken","error","weight","weightRange","render","target","value","mapStateToProps"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Link,\r\n  Typography,\r\n  Box,\r\n  Paper,\r\n  Grid,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport logo from \"../../theme/assets/images/logo.png\";\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme } from \"../../theme/light\";\r\nimport UserService from \"../../services/user.service\";\r\nimport { setUserToken } from \"../../store/actions/user\";\r\nimport { connect } from \"react-redux\";\r\nclass Login extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"34_adminvaibhav1\",\r\n      password: \"\",\r\n      weight: \"\",\r\n      weightRange: \"\",\r\n      showPassword: false,\r\n    };\r\n  }\r\n\r\n  handleClickShowPassword = () => {\r\n    const { showPassword } = this.state;\r\n    this.setState({\r\n      showPassword: !showPassword,\r\n    });\r\n  };\r\n\r\n  handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n  preventDefaults = (event) => event.preventDefault();\r\n\r\n  handleSubmit = async () => {\r\n    const { dispatch } = this.props;\r\n    const { email, password } = this.state;\r\n    console.log(\"ssss\");\r\n    // eslint-disable-next-line no-console\r\n    // if (values.email && values.password) {\r\n\r\n    try {\r\n      const response = await UserService.singin(email, password);\r\n      const { status, data } = response;\r\n      const { respCode } = data;\r\n      console.log(\"response after login call --> \", response);\r\n      if (status && respCode == 1) {\r\n        access,\r\n          defaultstatecode,\r\n          facilityid,\r\n          facilityname,\r\n          forcepasswordchange,\r\n          gstnumber,\r\n          message,\r\n          role,\r\n          token,\r\n          username,\r\n          relogin;\r\n\r\n        dispatch(setUserToken(jwToken));\r\n      }\r\n    } catch (error) {\r\n      console.log(\"status error\", error);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { email, password, showPassword } = this.state;\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Paper className=\"register-page\" elevation={0}>\r\n          <Box bgcolor=\"primary.white\">\r\n            <Box\r\n              display=\"flex\"\r\n              justifyContent=\"center\"\r\n              alignItems=\"center\"\r\n              flexDirection=\"column\"\r\n              className=\"outer-container\"\r\n            >\r\n              <Box\r\n                className=\"register-container\"\r\n                display=\"flex\"\r\n                justifyContent=\"center\"\r\n                flexDirection=\"column\"\r\n              >\r\n                {/* <Box\r\n                  className=\"logo\"\r\n                  mb={2}\r\n                  textAlign=\"center\"\r\n                  maxWidth=\"250px\"\r\n                  mx=\"auto\"\r\n                >\r\n                  <img src={logo} alt=\"img\" className=\"login-logo\" />\r\n                </Box> */}\r\n                <Box color=\"text.primary\" mb={2.7} textAlign=\"center\">\r\n                  <Typography variant=\"h6\" gutterBottom color=\"inherit\">\r\n                    Please fill the fields below\r\n                  </Typography>\r\n                </Box>\r\n                <Grid container spacing={3}>\r\n                  <Grid item xs={12}>\r\n                    <TextField\r\n                      type=\"text\"\r\n                      onChange={(event) => {\r\n                        this.setState({\r\n                          email: event.target.value,\r\n                        });\r\n                      }}\r\n                      label=\"User Id\"\r\n                      value={email}\r\n                      variant=\"outlined\"\r\n                      className=\"custom-textfield\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <FormControl variant=\"outlined\">\r\n                      <InputLabel htmlFor=\"outlined-adornment-password\">\r\n                        Password\r\n                      </InputLabel>\r\n                      <OutlinedInput\r\n                        id=\"outlined-adornment-password\"\r\n                        type={showPassword ? \"text\" : \"password\"}\r\n                        value={password}\r\n                        onChange={(event) => {\r\n                          this.setState({\r\n                            password: event.target.value,\r\n                          });\r\n                        }}\r\n                        className=\"custom-textfield\"\r\n                        endAdornment={\r\n                          <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                              aria-label=\"toggle password visibility\"\r\n                              onClick={this.handleClickShowPassword}\r\n                              onMouseDown={this.handleMouseDownPassword}\r\n                              edge=\"end\"\r\n                            >\r\n                              {showPassword ? (\r\n                                <Visibility fontSize=\"small\" />\r\n                              ) : (\r\n                                <VisibilityOff fontSize=\"small\" />\r\n                              )}\r\n                            </IconButton>\r\n                          </InputAdornment>\r\n                        }\r\n                        labelWidth={70}\r\n                      />\r\n                    </FormControl>\r\n                  </Grid>\r\n                </Grid>\r\n                <Box mt={3} mb={2.5}>\r\n                  <Button\r\n                    onClick={this.handleSubmit}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    disableElevation\r\n                    size=\"large\"\r\n                    className=\"custom-button\"\r\n                    fullWidth={true}\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                </Box>\r\n                {/* <Box color=\"text.primary\" textAlign=\"center\">\r\n                  <Typography variant=\"body1\" gutterBottom>\r\n                    Create a new account?\r\n                    <Box component=\"span\" ml={1}>\r\n                      <Link\r\n                        href=\"#\"\r\n                        className=\"font-weight-bold policy-lick\"\r\n                        underline=\"always\"\r\n                        onClick={this.preventDefaults}\r\n                        color=\"inherit\"\r\n                      >\r\n                        Register\r\n                      </Link>\r\n                    </Box>\r\n                  </Typography>\r\n                </Box> */}\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Paper>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({});\r\nexport default connect(mapStateToProps)(Login);\r\n"]},"metadata":{},"sourceType":"module"}