{"ast":null,"code":"var _jsxFileName = \"/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/pages/Home/index.js\";\nimport React from \"react\";\nimport \"date-fns\";\nimport { Paper, Box, Typography, Divider, Container, InputLabel, Select, FormControl, FormHelperText, MenuItem, Grid, Button } from \"@material-ui/core\";\nimport { Table, TextField, CircularProgress } from \"@material-ui/core\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { connect } from \"react-redux\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"../../theme/light\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport UserService from \"../../services/user.service\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  root: {\n    \"& > *\": {\n      marginTop: theme.spacing(4)\n    }\n  },\n  roots: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\"\n  },\n  papers: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 300\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nconst headCells = [{\n  id: \"facilityName\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Facility Name\"\n}, // {\n//   id: \"vehicleType\",\n//   numeric: false,\n//   disablePadding: false,\n//   label: \"Vehicle Type\",\n// },\n{\n  id: \"checkin\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Total Check In\"\n}, {\n  id: \"checkout\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Total Check Out\"\n}, {\n  id: \"total\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Total\"\n}];\nconst paymentHeadCells = [{\n  id: \"online\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Online\"\n}, {\n  id: \"cash\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Cash\"\n}, {\n  id: \"exempt\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Exempt\"\n}, {\n  id: \"total\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Total\"\n}];\nlet rows = [];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? \"right\" : \"left\",\n        padding: headCell.disablePadding ? \"none\" : \"normal\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : \"asc\",\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  console.log(\"getComparator\", order);\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nclass Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.getRefreshMapping = async () => {\n      const {\n        deviceuniqueid,\n        token\n      } = this.state;\n\n      try {\n        const response = await UserService.mapping(deviceuniqueid, token);\n        const {\n          status,\n          data\n        } = response;\n        const {\n          groupmapping\n        } = data;\n        const {\n          data: list\n        } = groupmapping;\n        console.log(\"response after getRefreshMapping --> \", response);\n\n        if (data && list.length > 0) {\n          let id = [];\n          let names = [];\n          list.map((item, index) => {\n            id.push(item.instanceid);\n            names.push(item.name);\n          });\n          id = id.join(\",\");\n          this.setState({\n            mappingList: list,\n            consolidates: id,\n            names\n          });\n        }\n      } catch (error) {\n        console.log(\"error getRefreshMapping\", error);\n      }\n    };\n\n    this.getDailyMISAdminReport = async () => {\n      const {\n        token,\n        facilityid,\n        startDate,\n        instanceId,\n        consolidates\n      } = this.state; // let startD = moment(\"01/01/2021\", \"DD/MM/YYYY\");\n      // let currenDate = moment(startDate).format(\"DD/MM/YYYY\");\n      // let endDate = moment(currenDate, \"DD/MM/YYYY\");\n      // let inputdate = endDate.diff(startD, \"days\");\n\n      let instanceIdToSend = \"\";\n\n      if (instanceId === \"0\") {\n        instanceIdToSend = consolidates;\n      } else {\n        instanceIdToSend = instanceId;\n      }\n\n      let inputdate = moment(startDate).format(\"DD-MMM-YYYY\"); // 01-Oct-2022\n\n      try {\n        const response = await UserService.AdminMISStatusReport(instanceIdToSend, facilityid, token, inputdate);\n        console.log(\"response after getDailyMISAdminReport \", response);\n        const {\n          data: res\n        } = response;\n        const {\n          data\n        } = res;\n\n        if (res.respCode === 1 && data.length > 0) {\n          let totalcheckin = 0;\n          let totalcheckout = 0;\n          let totalPayment = 0;\n          let totalVehicle = 0;\n          let carIn = 0;\n          let carOut = 0;\n          let bikeIn = 0;\n          let bikeOut = 0;\n          let bicycleIn = 0;\n          let bicycleOut = 0;\n          let vehicleArray = [];\n          const paymentValue = {\n            2: \"Cash\",\n            3: \"Online\",\n            5: \"Exempt\"\n          };\n          let paymentArray = [];\n          let amountArray = [];\n          let cashCount = 0;\n          let onlineCount = 0;\n          let noCashCount = 0;\n          const vechicles = {\n            1: \"Bike\",\n            2: \"Car\",\n            3: \"Bicycle\"\n          };\n          let finalArray = [];\n\n          for (let a = 0; a < data.length; a++) {\n            totalcheckin = 0;\n            totalcheckout = 0;\n            totalPayment = 0;\n            totalVehicle = 0;\n            carIn = 0;\n            carOut = 0;\n            bikeIn = 0;\n            bikeOut = 0;\n            bicycleIn = 0;\n            bicycleOut = 0;\n            const {\n              checkin,\n              checkout,\n              payment,\n              facilityname\n            } = data[a];\n\n            if (checkin) {\n              for (let i = 0; i < checkin.length; i++) {\n                const {\n                  vehicletype,\n                  vehiclecount\n                } = checkin[i];\n                const vehicleName = vechicles[vehicletype];\n                const ifExist = vehicleArray.findIndex((value, index) => value === vehicleName);\n\n                if (ifExist == -1) {\n                  vehicleArray.push(vehicleName);\n                }\n\n                carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\n                bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\n                bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\n                totalcheckin = totalcheckin + vehiclecount;\n              }\n\n              console.log(\"checkin data\", carIn);\n            }\n\n            if (checkout) {\n              for (let i = 0; i < checkout.length; i++) {\n                const {\n                  vehicletype,\n                  vehiclecount\n                } = checkout[i];\n                const vehicleName = vechicles[vehicletype];\n                const ifExist = vehicleArray.findIndex((value, index) => value === vehicleName);\n\n                if (ifExist == -1) {\n                  vehicleArray.push(vehicleName);\n                }\n\n                carOut = vehicleName == \"Car\" ? vehiclecount : carOut;\n                bikeOut = vehicleName == \"Bike\" ? vehiclecount : bikeOut;\n                bicycleOut = vehicleName == \"Bicycle\" ? vehiclecount : bicycleOut;\n                totalcheckout = totalcheckout + vehiclecount;\n              }\n            }\n\n            if (payment) {\n              for (let i = 0; i < payment.length; i++) {\n                const {\n                  paymentmode,\n                  amountcollected\n                } = payment[i];\n                const paymentName = paymentValue[paymentmode];\n                const ifExist = paymentArray.findIndex((value, index) => value === paymentName);\n\n                if (ifExist == -1) {\n                  paymentArray.push(paymentName);\n                }\n\n                cashCount = paymentName == \"Cash\" ? amountcollected / 100 : cashCount;\n                onlineCount = paymentName == \"Online\" ? amountcollected / 100 : onlineCount;\n                noCashCount = paymentName == \"Exempt\" ? amountcollected / 100 : noCashCount;\n\n                if (cashCount !== 0) {\n                  amountArray.push(cashCount);\n                } else if (onlineCount !== 0) {\n                  amountArray.push(onlineCount);\n                } else if (noCashCount !== 0) {\n                  amountArray.push(noCashCount);\n                }\n\n                if (paymentmode !== 5) {\n                  totalPayment = totalPayment + amountcollected / 100;\n                }\n              }\n            }\n\n            let objCar = {\n              name: \"Car\",\n              totalin: carIn,\n              totalout: carOut\n            };\n            finalArray.push(objCar);\n            let objBike = {\n              name: \"Bike\",\n              totalin: bikeIn,\n              totalout: bikeOut\n            };\n            finalArray.push(objBike);\n            let objBicycle = {\n              name: \"Bicycle\",\n              totalin: bicycleIn,\n              totalout: bicycleOut\n            };\n            finalArray.push(objBicycle);\n          }\n\n          this.setState({\n            dailyReport: finalArray,\n            totalCheckIn: totalcheckin,\n            totalCheckOut: totalcheckout,\n            totalCash: cashCount,\n            totalOnline: onlineCount,\n            totalNoCash: noCashCount,\n            totalAmount: totalPayment\n          });\n        }\n      } catch (error) {\n        console.log(\"error getDailyMISAdminReport\", error);\n      }\n    };\n\n    this.getMonthlyMISAdminReport = async () => {\n      const {\n        token,\n        facilityid,\n        startDate,\n        instanceId,\n        consolidates\n      } = this.state; // let startD = moment(\"01/01/2021\", \"DD/MM/YYYY\");\n      // let currenDate = moment(startDate).format(\"DD/MM/YYYY\");\n      // let endDate = moment(currenDate, \"DD/MM/YYYY\");\n      // let inputdate = endDate.diff(startD, \"days\");\n\n      let instanceIdToSend = \"\";\n\n      if (instanceId === \"0\") {\n        instanceIdToSend = consolidates;\n      } else {\n        instanceIdToSend = instanceId;\n      }\n\n      let inputdate = moment(startDate).format(\"MMM-YYYY\"); // 01-Oct-2022\n\n      try {\n        const response = await UserService.AdminMonthlyMISStatusReport(instanceIdToSend, facilityid, token, inputdate);\n        console.log(\"response after getMonthlyMISAdminReport \", response);\n        const {\n          data: res\n        } = response;\n        const {\n          data\n        } = res; // if (data && data.length > 0) {\n        //   const reports = [];\n        //   for (let i = 0; i < data.length; i++) {\n        //     const { amountcollected, facilityname, totalcheckin, totalcheckout } =\n        //       data[i];\n        //     const devidedAmount = (amountcollected / 100).toString();\n        //     const checkin = totalcheckin.toString();\n        //     const checkout = totalcheckout.toString();\n        //     let reportArray = [facilityname, checkin, checkout, devidedAmount];\n        //     reports.push(reportArray);\n        //   }\n        //   this.setState({\n        //     reports,\n        //   });\n        // } else {\n        //   this.setState({\n        //     reports: [],\n        //   });\n        // }\n      } catch (error) {\n        console.log(\"error getMonthlyMISAdminReport\", error);\n      }\n    };\n\n    this.getDailyAdminParkingStatusReport = async () => {\n      const {\n        token,\n        facilityid,\n        startDate\n      } = this.state;\n      let inputdatetime = moment(startDate).format(\"DD-MMM-YYYY\"); // 01-Oct-2022\n\n      try {\n        const response = await UserService.AdminParkingStatusReport(facilityid, token, inputdatetime);\n        console.log(\"response after getDailyAdminParkingStatusReport \", response);\n        const {\n          data: res\n        } = response;\n\n        if (res.respCode === 1 && res) {\n          const {\n            checkin,\n            checkout,\n            payment\n          } = res;\n          let totalcheckin = 0;\n          let totalcheckout = 0;\n          let totalPayment = 0;\n          let totalVehicle = 0;\n          let carIn = 0;\n          let carOut = 0;\n          let bikeIn = 0;\n          let bikeOut = 0;\n          let bicycleIn = 0;\n          let bicycleOut = 0;\n          let autoIn = 0;\n          let autoOut = 0;\n          let vehicleArray = [];\n          const vechicles = {\n            1: \"Bike\",\n            2: \"Car\",\n            3: \"Auto\",\n            4: \"Bicycle\"\n          };\n\n          if (checkin) {\n            for (let i = 0; i < checkin.length; i++) {\n              const {\n                vehicletype,\n                vehiclecount\n              } = checkin[i];\n              const vehicleName = vechicles[vehicletype];\n              const ifExist = vehicleArray.findIndex((value, index) => value === vehicleName);\n\n              if (ifExist == -1) {\n                vehicleArray.push(vehicleName);\n              }\n\n              carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\n              bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\n              bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\n              autoIn = vehicleName == \"Auto\" ? vehiclecount : autoIn;\n              totalcheckin = totalcheckin + vehiclecount;\n            }\n\n            console.log(\"checkin data\", carIn);\n          }\n\n          if (checkout) {\n            for (let i = 0; i < checkout.length; i++) {\n              const {\n                vehicletype,\n                vehiclecount\n              } = checkout[i];\n              const vehicleName = vechicles[vehicletype];\n              const ifExist = vehicleArray.findIndex((value, index) => value === vehicleName);\n\n              if (ifExist == -1) {\n                vehicleArray.push(vehicleName);\n              }\n\n              carOut = vehicleName == \"Car\" ? vehiclecount : carOut;\n              bikeOut = vehicleName == \"Bike\" ? vehiclecount : bikeOut;\n              bicycleOut = vehicleName == \"Bicycle\" ? vehiclecount : bicycleOut;\n              autoOut = vehicleName == \"Auto\" ? vehiclecount : autoOut;\n              totalcheckout = totalcheckout + vehiclecount;\n            }\n          }\n\n          const paymentValue = {\n            2: \"Cash\",\n            3: \"Online\",\n            5: \"Exempt\"\n          };\n          let paymentArray = []; // let colorArray = [(opacity = 1) => `#2E7D32`,(opacity = 1) => `#FD0002`,(opacity = 1) => `#00266B`];\n\n          let colorArray = [];\n          let amountArray = [];\n          let cashCount = 0;\n          let onlineCount = 0;\n          let noCashCount = 0;\n\n          if (payment) {\n            for (let i = 0; i < payment.length; i++) {\n              const {\n                paymentmode,\n                amountcollected\n              } = payment[i];\n              const paymentName = paymentValue[paymentmode];\n              const ifExist = paymentArray.findIndex((value, index) => value === paymentName);\n\n              if (ifExist == -1) {\n                paymentArray.push(paymentName);\n              }\n\n              cashCount = paymentName == \"Cash\" ? amountcollected / 100 : cashCount;\n              onlineCount = paymentName == \"Online\" ? amountcollected / 100 : onlineCount;\n              noCashCount = paymentName == \"Exempt\" ? amountcollected / 100 : noCashCount;\n\n              if (cashCount !== 0) {\n                amountArray.push(cashCount);\n              } else if (onlineCount !== 0) {\n                amountArray.push(onlineCount);\n              } else if (noCashCount !== 0) {\n                amountArray.push(noCashCount);\n              }\n\n              if (paymentmode === 2) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#2E7D32`;\n                });\n              } else if (paymentmode === 3) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#FD0002`;\n                });\n              } else if (paymentmode === 5) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#00266B`;\n                });\n              }\n\n              if (paymentmode !== 5) {\n                totalPayment = totalPayment + amountcollected / 100;\n              }\n            }\n          }\n\n          let finalArray = [];\n          let objCar = {\n            name: \"Car\",\n            totalin: carIn,\n            totalout: carOut\n          };\n          finalArray.push(objCar);\n          let objBike = {\n            name: \"Bike\",\n            totalin: bikeIn,\n            totalout: bikeOut\n          };\n          finalArray.push(objBike);\n          let objBicycle = {\n            name: \"Bicycle\",\n            totalin: bicycleIn,\n            totalout: bicycleOut\n          };\n          finalArray.push(objBicycle);\n          this.setState({\n            dailyReport: finalArray,\n            totalCheckIn: totalcheckin,\n            totalCheckOut: totalcheckout,\n            totalCash: cashCount,\n            totalOnline: onlineCount,\n            totalNoCash: noCashCount,\n            totalAmount: totalPayment\n          });\n        }\n      } catch (error) {\n        console.log(\"error getDailyAdminParkingStatusReport\", error);\n      }\n    };\n\n    this.getMonthlyAdminParkingStatusReport = async inputdate => {\n      const {\n        token,\n        facilityid,\n        startDate\n      } = this.state;\n      let inputdatetime = moment(inputdate).format(\"MMM-YYYY\"); // 01-Oct-2022\n\n      try {\n        const response = await UserService.AdminMonthlyParkingStatusReport(facilityid, token, inputdatetime);\n        console.log(\"response after getMonthlyAdminParkingStatusReport \", response);\n        const {\n          data: res\n        } = response;\n\n        if (res.respCode === 1 && res) {\n          const {\n            checkin,\n            checkout,\n            payment\n          } = res;\n          let totalcheckin = 0;\n          let totalcheckout = 0;\n          let totalPayment = 0;\n          let totalVehicle = 0;\n          let carIn = 0;\n          let carOut = 0;\n          let bikeIn = 0;\n          let bikeOut = 0;\n          let bicycleIn = 0;\n          let bicycleOut = 0;\n          let autoIn = 0;\n          let autoOut = 0;\n          let vehicleArray = [];\n          const vechicles = {\n            1: \"Bike\",\n            2: \"Car\",\n            3: \"Auto\",\n            4: \"Bicycle\"\n          };\n\n          if (checkin) {\n            for (let i = 0; i < checkin.length; i++) {\n              const {\n                vehicletype,\n                vehiclecount\n              } = checkin[i];\n              const vehicleName = vechicles[vehicletype];\n              const ifExist = vehicleArray.findIndex((value, index) => value === vehicleName);\n\n              if (ifExist == -1) {\n                vehicleArray.push(vehicleName);\n              }\n\n              carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\n              bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\n              bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\n              autoIn = vehicleName == \"Auto\" ? vehiclecount : autoIn;\n              totalcheckin = totalcheckin + vehiclecount;\n            }\n\n            console.log(\"checkin data\", carIn);\n          }\n\n          if (checkout) {\n            for (let i = 0; i < checkout.length; i++) {\n              const {\n                vehicletype,\n                vehiclecount\n              } = checkout[i];\n              const vehicleName = vechicles[vehicletype];\n              const ifExist = vehicleArray.findIndex((value, index) => value === vehicleName);\n\n              if (ifExist == -1) {\n                vehicleArray.push(vehicleName);\n              }\n\n              carOut = vehicleName == \"Car\" ? vehiclecount : carOut;\n              bikeOut = vehicleName == \"Bike\" ? vehiclecount : bikeOut;\n              bicycleOut = vehicleName == \"Bicycle\" ? vehiclecount : bicycleOut;\n              autoOut = vehicleName == \"Auto\" ? vehiclecount : autoOut;\n              totalcheckout = totalcheckout + vehiclecount;\n            }\n          }\n\n          const paymentValue = {\n            2: \"Cash\",\n            3: \"Online\",\n            5: \"Exempt\"\n          };\n          let paymentArray = []; // let colorArray = [(opacity = 1) => `#2E7D32`,(opacity = 1) => `#FD0002`,(opacity = 1) => `#00266B`];\n\n          let colorArray = [];\n          let amountArray = [];\n          let cashCount = 0;\n          let onlineCount = 0;\n          let noCashCount = 0;\n\n          if (payment) {\n            for (let i = 0; i < payment.length; i++) {\n              const {\n                paymentmode,\n                amountcollected\n              } = payment[i];\n              const paymentName = paymentValue[paymentmode];\n              const ifExist = paymentArray.findIndex((value, index) => value === paymentName);\n\n              if (ifExist == -1) {\n                paymentArray.push(paymentName);\n              }\n\n              cashCount = paymentName == \"Cash\" ? amountcollected / 100 : cashCount;\n              onlineCount = paymentName == \"Online\" ? amountcollected / 100 : onlineCount;\n              noCashCount = paymentName == \"Exempt\" ? amountcollected / 100 : noCashCount;\n\n              if (cashCount !== 0) {\n                amountArray.push(cashCount);\n              } else if (onlineCount !== 0) {\n                amountArray.push(onlineCount);\n              } else if (noCashCount !== 0) {\n                amountArray.push(noCashCount);\n              }\n\n              if (paymentmode === 2) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#2E7D32`;\n                });\n              } else if (paymentmode === 3) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#FD0002`;\n                });\n              } else if (paymentmode === 5) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#00266B`;\n                });\n              }\n\n              if (paymentmode !== 5) {\n                totalPayment = totalPayment + amountcollected / 100;\n              }\n            }\n          }\n\n          let finalArray = [];\n          let objCar = {\n            name: \"Car\",\n            totalin: carIn,\n            totalout: carOut\n          };\n          finalArray.push(objCar);\n          let objBike = {\n            name: \"Bike\",\n            totalin: bikeIn,\n            totalout: bikeOut\n          };\n          finalArray.push(objBike);\n          let objBicycle = {\n            name: \"Bicycle\",\n            totalin: bicycleIn,\n            totalout: bicycleOut\n          };\n          finalArray.push(objBicycle);\n          this.setState({\n            dailyReport: finalArray,\n            totalCheckIn: totalcheckin,\n            totalCheckOut: totalcheckout,\n            totalCash: cashCount,\n            totalOnline: onlineCount,\n            totalNoCash: noCashCount,\n            totalAmount: totalPayment\n          });\n        }\n      } catch (error) {\n        console.log(\"error getMonthlyAdminParkingStatusReport\", error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        mappingList,\n        type\n      } = this.state;\n      let name = \"\";\n\n      for (let i = 0; i < mappingList.length; i++) {\n        if (event.target.value === mappingList[i][\"instanceid\"]) {\n          name = mappingList[i][\"name\"];\n        }\n      }\n\n      if (!name) {\n        name = \"Consolidate\";\n      }\n\n      console.log(\"name\", name);\n      this.setState({\n        instanceId: event.target.value,\n        facilityName: name,\n        dailyReport: [],\n        totalCheckIn: 0,\n        totalCheckOut: 0,\n        totalCash: 0,\n        totalOnline: 0,\n        totalNoCash: 0,\n        totalAmount: 0\n      }, () => {\n        if (type === \"Daily\") {\n          this.getDailyMISAdminReport(); // this.getDailyAdminParkingStatusReport();\n        } else {\n          // this.getMonthlyAdminParkingStatusReport();\n          this.getMonthlyMISAdminReport();\n        }\n      });\n    };\n\n    this.handleTypeChange = event => {\n      this.setState({\n        type: event.target.value,\n        dailyReport: [],\n        totalCheckIn: 0,\n        totalCheckOut: 0,\n        totalCash: 0,\n        totalOnline: 0,\n        totalNoCash: 0,\n        totalAmount: 0\n      }, () => {\n        if (event.target.value === \"Daily\") {\n          this.getDailyAdminParkingStatusReport();\n          this.getDailyMISAdminReport();\n        } else {\n          this.getMonthlyAdminParkingStatusReport();\n          this.getMonthlyMISAdminReport();\n        }\n      });\n    };\n\n    this.handleDateChange = date => {\n      const {\n        type\n      } = this.state;\n      console.log(date);\n      this.setState({\n        startDate: date,\n        dailyReport: [],\n        totalCheckIn: 0,\n        totalCheckOut: 0,\n        totalCash: 0,\n        totalOnline: 0,\n        totalNoCash: 0,\n        totalAmount: 0 //endDate: date + 1,\n\n      }, () => {\n        if (type === \"Daily\") {\n          this.getDailyAdminParkingStatusReport();\n          this.getDailyMISAdminReport();\n        } else {\n          this.getMonthlyAdminParkingStatusReport();\n          this.getMonthlyMISAdminReport();\n        }\n      });\n    };\n\n    this.handleEndDateChange = date => {\n      this.setState({\n        endDate: date\n      });\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const {\n        orderBy,\n        order\n      } = this.state;\n      const isAsc = orderBy === property && order === \"asc\";\n      this.setState({\n        order: isAsc ? \"desc\" : \"asc\"\n      });\n      this.setState({\n        orderBy: property\n      });\n    };\n\n    this.handleSelectAllClick = event => {\n      const {\n        allBranch\n      } = this.state;\n\n      if (event.target.checked) {\n        const newSelecteds = allBranch.map(n => n.id);\n        this.setState({\n          selected: newSelecteds\n        });\n        return;\n      }\n\n      this.setState({\n        selected: []\n      });\n    };\n\n    this.handleClick = (event, name) => {\n      const {\n        selected\n      } = this.state;\n      console.log(selected);\n      const selectedIndex = selected.indexOf(name);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, name);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      this.setState({\n        selected: newSelected\n      });\n    };\n\n    this.handleChangePage = (event, newPage) => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: parseInt(event.target.value, 10)\n      });\n      this.setState({\n        page: 0\n      });\n    };\n\n    this.state = {\n      age: \"\",\n      startDate: \"Sat Oct 01 2022 00:37:00 GMT+0530 (India Standard Time)\",\n      endDate: new Date() + 1,\n      deviceuniqueid: \"Web\",\n      token: \"339CFB64EDC6E94C5577CD68319E72AB6732C711AE661427AC83931B33F05CC4\",\n      mappingList: [],\n      consolidates: \"\",\n      type: \"Daily\",\n      facilityid: \"\",\n      dailyReport: [],\n      selected: [],\n      order: \"asc\",\n      orderBy: \"calories\",\n      selected: [],\n      page: 0,\n      rowsPerPage: 10,\n      names: [],\n      instanceId: \"0\",\n      facilityName: \"Consolidate\",\n      totalCheckIn: 0,\n      totalCheckOut: 0,\n      totalCash: 0,\n      totalOnline: 0,\n      totalNoCash: 0,\n      totalAmount: 0,\n      mISReport: []\n    };\n  }\n\n  componentDidMount() {\n    const {\n      userDetails\n    } = this.props;\n    const {\n      loginToken,\n      facilityid\n    } = userDetails;\n    console.log(\"facilityid\", facilityid);\n    this.setState({\n      token: loginToken,\n      facilityid: facilityid\n    }, () => {\n      this.getRefreshMapping();\n      this.getDailyMISAdminReport();\n      this.getDailyAdminParkingStatusReport();\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      instanceId,\n      startDate,\n      endDate,\n      mappingList,\n      type,\n      rowsPerPage,\n      page,\n      selected,\n      orderBy,\n      order,\n      dailyReport,\n      facilityName,\n      totalCheckIn,\n      totalCheckOut,\n      totalCash,\n      totalOnline,\n      totalNoCash,\n      totalAmount\n    } = this.state;\n    const rows = dailyReport;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, dailyReport.length - page * rowsPerPage);\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    console.log(\"mappingList\", mappingList, \" type\", type);\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"container\",\n        p: 2.5,\n        bgcolor: \"primary.lightBgContainer\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"content lead-page\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"page-heading\",\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              color: \"text.secondary\",\n              pt: 3,\n              pr: 2.7,\n              pb: 1.8,\n              pl: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                color: \"inherit\",\n                children: \"Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1031,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1030,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1035,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1029,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: DateFnsUtils,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-evenly\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"standard\",\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"age-native-simple\",\n                  children: \"Select Facility\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1040,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  native: true,\n                  value: instanceId,\n                  placeholder: \"Facility Name\",\n                  onChange: (e, index) => {\n                    this.handleChange(e);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"0\",\n                    children: \"Consolidated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1051,\n                    columnNumber: 21\n                  }, this), mappingList.map((data, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: data.instanceid,\n                      children: data.name\n                    }, index.toString(), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 1055,\n                      columnNumber: 25\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1043,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1039,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"standard\",\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"age-native-simple\",\n                  children: \"Select Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1063,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  native: true,\n                  value: type,\n                  placeholder: \"Age\",\n                  onChange: e => this.handleTypeChange(e),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Daily\",\n                    children: \"Daily\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1073,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Monthly\",\n                    children: \"Monthly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1074,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1066,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                variant: \"inline\",\n                format: \"dd/MM/yyyy\",\n                margin: \"normal\",\n                id: \"date-picker-inline\",\n                label: \"Date\",\n                value: startDate,\n                onChange: date => this.handleDateChange(date),\n                KeyboardButtonProps: {\n                  \"aria-label\": \"change date\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1078,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.root,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  size: \"small\",\n                  color: \"primary\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1106,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1038,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1037,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(ReactHTMLTableToExcel, {\n              id: \"test-table-xls-button\",\n              className: \"download-table-xls-button\",\n              table: \"emp\",\n              filename: \"tablexls\",\n              sheet: \"tablexls\",\n              buttonText: \"Download as XLS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1205,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              id: \"emp\",\n              className: \"table all_domain_table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                className: \"text-white bg-gray-700\",\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"above-column\",\n                    children: \"Facility Name\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1217,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    colspan: \"3\",\n                    className: \"above-column\",\n                    children: \"Total Check In\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1219,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    colspan: \"3\",\n                    className: \"above-column\",\n                    children: \"Total Check Out\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1223,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"above-column\",\n                    children: \"Payment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1227,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1216,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1215,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  rowspan: \"2\",\n                  children: \"Rani Kamlapati Station\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1232,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  colspan: \"3\",\n                  children: \"525\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1233,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  colspan: \"3\",\n                  children: \"250\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  rowspan: \"2\",\n                  children: \"Rs. 2500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1235,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Car: 200\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1239,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Bike: 225\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Bicycle: 100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1241,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Car: 100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1242,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Bike: 100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1243,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Bicycle: 25\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1244,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  rowspan: \"2\",\n                  children: \"Dummy Location\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1248,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  colspan: \"3\",\n                  children: \"525\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1249,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  colspan: \"3\",\n                  children: \"250\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1250,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  rowspan: \"2\",\n                  children: \"Rs. 2500\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1251,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1247,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Car: 200\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1255,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Bike: 225\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1256,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Bicycle: 100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1257,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Car: 100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1258,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Bike: 100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1259,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Bicycle: 25\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1260,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1254,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"align-middle \",\n                    colSpan: 1,\n                    children: \"Total:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1264,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    colspan: \"3\",\n                    className: \"align-middle\",\n                    children: \"1050\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1268,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    colspan: \"3\",\n                    className: \"align-middle\",\n                    children: \"500\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1272,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: \"align-middle\",\n                    children: \"Rs. 5000.00\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1276,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1263,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1262,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1028,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1027,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1026,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userDetails: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(useStyles)(Home));\n\nvar _c;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");","map":{"version":3,"sources":["/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/pages/Home/index.js"],"names":["React","Paper","Box","Typography","Divider","Container","InputLabel","Select","FormControl","FormHelperText","MenuItem","Grid","Button","Table","TextField","CircularProgress","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","connect","ThemeProvider","theme","withStyles","DateFnsUtils","ReactHTMLTableToExcel","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","UserService","moment","useStyles","root","marginTop","spacing","roots","width","paper","papers","marginBottom","formControl","minWidth","selectEmpty","headCells","id","numeric","disablePadding","label","paymentHeadCells","rows","EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","createSortHandler","property","event","map","headCell","visuallyHidden","descendingComparator","a","b","getComparator","console","log","stableSort","array","comparator","stabilizedThis","el","index","sort","Home","PureComponent","constructor","getRefreshMapping","deviceuniqueid","token","state","response","mapping","status","data","groupmapping","list","length","names","item","push","instanceid","name","join","setState","mappingList","consolidates","error","getDailyMISAdminReport","facilityid","startDate","instanceId","instanceIdToSend","inputdate","format","AdminMISStatusReport","res","respCode","totalcheckin","totalcheckout","totalPayment","totalVehicle","carIn","carOut","bikeIn","bikeOut","bicycleIn","bicycleOut","vehicleArray","paymentValue","paymentArray","amountArray","cashCount","onlineCount","noCashCount","vechicles","finalArray","checkin","checkout","payment","facilityname","i","vehicletype","vehiclecount","vehicleName","ifExist","findIndex","value","paymentmode","amountcollected","paymentName","objCar","totalin","totalout","objBike","objBicycle","dailyReport","totalCheckIn","totalCheckOut","totalCash","totalOnline","totalNoCash","totalAmount","getMonthlyMISAdminReport","AdminMonthlyMISStatusReport","getDailyAdminParkingStatusReport","inputdatetime","AdminParkingStatusReport","autoIn","autoOut","colorArray","opacity","getMonthlyAdminParkingStatusReport","AdminMonthlyParkingStatusReport","handleChange","type","target","facilityName","handleTypeChange","handleDateChange","date","handleEndDateChange","endDate","handleRequestSort","isAsc","handleSelectAllClick","allBranch","checked","newSelecteds","n","selected","handleClick","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","parseInt","age","Date","mISReport","componentDidMount","userDetails","loginToken","render","emptyRows","Math","min","isSelected","e","toString","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"date-fns\";\r\nimport {\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Divider,\r\n  Container,\r\n  InputLabel,\r\n  Select,\r\n  FormControl,\r\n  FormHelperText,\r\n  MenuItem,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Table, TextField, CircularProgress } from \"@material-ui/core\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme } from \"../../theme/light\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport ReactHTMLTableToExcel from \"react-html-table-to-excel\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport UserService from \"../../services/user.service\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n  roots: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n  papers: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 300,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"facilityName\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Facility Name\",\r\n  },\r\n  // {\r\n  //   id: \"vehicleType\",\r\n  //   numeric: false,\r\n  //   disablePadding: false,\r\n  //   label: \"Vehicle Type\",\r\n  // },\r\n  {\r\n    id: \"checkin\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Total Check In\",\r\n  },\r\n  {\r\n    id: \"checkout\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Total Check Out\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Total\",\r\n  },\r\n];\r\n\r\nconst paymentHeadCells = [\r\n  {\r\n    id: \"online\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Online\",\r\n  },\r\n  {\r\n    id: \"cash\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Cash\",\r\n  },\r\n  {\r\n    id: \"exempt\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Exempt\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Total\",\r\n  },\r\n];\r\nlet rows = [];\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell> */}\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  console.log(\"getComparator\", order);\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nclass Home extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: \"\",\r\n      startDate: \"Sat Oct 01 2022 00:37:00 GMT+0530 (India Standard Time)\",\r\n      endDate: new Date() + 1,\r\n      deviceuniqueid: \"Web\",\r\n      token: \"339CFB64EDC6E94C5577CD68319E72AB6732C711AE661427AC83931B33F05CC4\",\r\n      mappingList: [],\r\n      consolidates: \"\",\r\n      type: \"Daily\",\r\n      facilityid: \"\",\r\n      dailyReport: [],\r\n      selected: [],\r\n      order: \"asc\",\r\n      orderBy: \"calories\",\r\n      selected: [],\r\n      page: 0,\r\n      rowsPerPage: 10,\r\n      names: [],\r\n      instanceId: \"0\",\r\n      facilityName: \"Consolidate\",\r\n      totalCheckIn: 0,\r\n      totalCheckOut: 0,\r\n      totalCash: 0,\r\n      totalOnline: 0,\r\n      totalNoCash: 0,\r\n      totalAmount: 0,\r\n      mISReport: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { userDetails } = this.props;\r\n    const { loginToken, facilityid } = userDetails;\r\n    console.log(\"facilityid\", facilityid);\r\n    this.setState(\r\n      {\r\n        token: loginToken,\r\n        facilityid: facilityid,\r\n      },\r\n      () => {\r\n        this.getRefreshMapping();\r\n        this.getDailyMISAdminReport();\r\n        this.getDailyAdminParkingStatusReport();\r\n      }\r\n    );\r\n  }\r\n\r\n  getRefreshMapping = async () => {\r\n    const { deviceuniqueid, token } = this.state;\r\n\r\n    try {\r\n      const response = await UserService.mapping(deviceuniqueid, token);\r\n      const { status, data } = response;\r\n      const { groupmapping } = data;\r\n      const { data: list } = groupmapping;\r\n      console.log(\"response after getRefreshMapping --> \", response);\r\n      if (data && list.length > 0) {\r\n        let id = [];\r\n        let names = [];\r\n        list.map((item, index) => {\r\n          id.push(item.instanceid);\r\n          names.push(item.name);\r\n        });\r\n        id = id.join(\",\");\r\n        this.setState({\r\n          mappingList: list,\r\n          consolidates: id,\r\n          names,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error getRefreshMapping\", error);\r\n    }\r\n  };\r\n\r\n  getDailyMISAdminReport = async () => {\r\n    const { token, facilityid, startDate, instanceId, consolidates } =\r\n      this.state;\r\n\r\n    // let startD = moment(\"01/01/2021\", \"DD/MM/YYYY\");\r\n    // let currenDate = moment(startDate).format(\"DD/MM/YYYY\");\r\n    // let endDate = moment(currenDate, \"DD/MM/YYYY\");\r\n    // let inputdate = endDate.diff(startD, \"days\");\r\n\r\n    let instanceIdToSend = \"\";\r\n    if (instanceId === \"0\") {\r\n      instanceIdToSend = consolidates;\r\n    } else {\r\n      instanceIdToSend = instanceId;\r\n    }\r\n    let inputdate = moment(startDate).format(\"DD-MMM-YYYY\"); // 01-Oct-2022\r\n\r\n    try {\r\n      const response = await UserService.AdminMISStatusReport(\r\n        instanceIdToSend,\r\n        facilityid,\r\n        token,\r\n        inputdate\r\n      );\r\n\r\n      console.log(\"response after getDailyMISAdminReport \", response);\r\n      const { data: res } = response;\r\n      const { data } = res;\r\n      if (res.respCode === 1 && data.length > 0) {\r\n        let totalcheckin = 0;\r\n        let totalcheckout = 0;\r\n        let totalPayment = 0;\r\n        let totalVehicle = 0;\r\n        let carIn = 0;\r\n        let carOut = 0;\r\n        let bikeIn = 0;\r\n        let bikeOut = 0;\r\n        let bicycleIn = 0;\r\n        let bicycleOut = 0;\r\n\r\n        let vehicleArray = [];\r\n\r\n        const paymentValue = {\r\n          2: \"Cash\",\r\n          3: \"Online\",\r\n          5: \"Exempt\",\r\n        };\r\n        let paymentArray = [];\r\n\r\n        let amountArray = [];\r\n        let cashCount = 0;\r\n        let onlineCount = 0;\r\n        let noCashCount = 0;\r\n        const vechicles = {\r\n          1: \"Bike\",\r\n          2: \"Car\",\r\n          3: \"Bicycle\",\r\n        };\r\n\r\n        let finalArray = [];\r\n        for (let a = 0; a < data.length; a++) {\r\n          totalcheckin = 0;\r\n          totalcheckout = 0;\r\n          totalPayment = 0;\r\n          totalVehicle = 0;\r\n          carIn = 0;\r\n          carOut = 0;\r\n          bikeIn = 0;\r\n          bikeOut = 0;\r\n          bicycleIn = 0;\r\n          bicycleOut = 0;\r\n\r\n          const { checkin, checkout, payment, facilityname } = data[a];\r\n          if (checkin) {\r\n            for (let i = 0; i < checkin.length; i++) {\r\n              const { vehicletype, vehiclecount } = checkin[i];\r\n              const vehicleName = vechicles[vehicletype];\r\n              const ifExist = vehicleArray.findIndex(\r\n                (value, index) => value === vehicleName\r\n              );\r\n              if (ifExist == -1) {\r\n                vehicleArray.push(vehicleName);\r\n              }\r\n\r\n              carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\r\n              bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\r\n              bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\r\n\r\n              totalcheckin = totalcheckin + vehiclecount;\r\n            }\r\n            console.log(\"checkin data\", carIn);\r\n          }\r\n          if (checkout) {\r\n            for (let i = 0; i < checkout.length; i++) {\r\n              const { vehicletype, vehiclecount } = checkout[i];\r\n              const vehicleName = vechicles[vehicletype];\r\n              const ifExist = vehicleArray.findIndex(\r\n                (value, index) => value === vehicleName\r\n              );\r\n              if (ifExist == -1) {\r\n                vehicleArray.push(vehicleName);\r\n              }\r\n\r\n              carOut = vehicleName == \"Car\" ? vehiclecount : carOut;\r\n              bikeOut = vehicleName == \"Bike\" ? vehiclecount : bikeOut;\r\n              bicycleOut = vehicleName == \"Bicycle\" ? vehiclecount : bicycleOut;\r\n\r\n              totalcheckout = totalcheckout + vehiclecount;\r\n            }\r\n          }\r\n\r\n          if (payment) {\r\n            for (let i = 0; i < payment.length; i++) {\r\n              const { paymentmode, amountcollected } = payment[i];\r\n              const paymentName = paymentValue[paymentmode];\r\n              const ifExist = paymentArray.findIndex(\r\n                (value, index) => value === paymentName\r\n              );\r\n              if (ifExist == -1) {\r\n                paymentArray.push(paymentName);\r\n              }\r\n\r\n              cashCount =\r\n                paymentName == \"Cash\" ? amountcollected / 100 : cashCount;\r\n              onlineCount =\r\n                paymentName == \"Online\" ? amountcollected / 100 : onlineCount;\r\n              noCashCount =\r\n                paymentName == \"Exempt\" ? amountcollected / 100 : noCashCount;\r\n\r\n              if (cashCount !== 0) {\r\n                amountArray.push(cashCount);\r\n              } else if (onlineCount !== 0) {\r\n                amountArray.push(onlineCount);\r\n              } else if (noCashCount !== 0) {\r\n                amountArray.push(noCashCount);\r\n              }\r\n\r\n              if (paymentmode !== 5) {\r\n                totalPayment = totalPayment + amountcollected / 100;\r\n              }\r\n            }\r\n          }\r\n\r\n          let objCar = {\r\n            name: \"Car\",\r\n            totalin: carIn,\r\n            totalout: carOut,\r\n          };\r\n          finalArray.push(objCar);\r\n          let objBike = {\r\n            name: \"Bike\",\r\n            totalin: bikeIn,\r\n            totalout: bikeOut,\r\n          };\r\n          finalArray.push(objBike);\r\n          let objBicycle = {\r\n            name: \"Bicycle\",\r\n            totalin: bicycleIn,\r\n            totalout: bicycleOut,\r\n          };\r\n          finalArray.push(objBicycle);\r\n        }\r\n\r\n        this.setState({\r\n          dailyReport: finalArray,\r\n          totalCheckIn: totalcheckin,\r\n          totalCheckOut: totalcheckout,\r\n          totalCash: cashCount,\r\n          totalOnline: onlineCount,\r\n          totalNoCash: noCashCount,\r\n          totalAmount: totalPayment,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error getDailyMISAdminReport\", error);\r\n    }\r\n  };\r\n\r\n  getMonthlyMISAdminReport = async () => {\r\n    const { token, facilityid, startDate, instanceId, consolidates } =\r\n      this.state;\r\n\r\n    // let startD = moment(\"01/01/2021\", \"DD/MM/YYYY\");\r\n    // let currenDate = moment(startDate).format(\"DD/MM/YYYY\");\r\n    // let endDate = moment(currenDate, \"DD/MM/YYYY\");\r\n    // let inputdate = endDate.diff(startD, \"days\");\r\n\r\n    let instanceIdToSend = \"\";\r\n    if (instanceId === \"0\") {\r\n      instanceIdToSend = consolidates;\r\n    } else {\r\n      instanceIdToSend = instanceId;\r\n    }\r\n    let inputdate = moment(startDate).format(\"MMM-YYYY\"); // 01-Oct-2022\r\n\r\n    try {\r\n      const response = await UserService.AdminMonthlyMISStatusReport(\r\n        instanceIdToSend,\r\n        facilityid,\r\n        token,\r\n        inputdate\r\n      );\r\n\r\n      console.log(\"response after getMonthlyMISAdminReport \", response);\r\n      const { data: res } = response;\r\n      const { data } = res;\r\n      // if (data && data.length > 0) {\r\n      //   const reports = [];\r\n\r\n      //   for (let i = 0; i < data.length; i++) {\r\n      //     const { amountcollected, facilityname, totalcheckin, totalcheckout } =\r\n      //       data[i];\r\n      //     const devidedAmount = (amountcollected / 100).toString();\r\n      //     const checkin = totalcheckin.toString();\r\n      //     const checkout = totalcheckout.toString();\r\n      //     let reportArray = [facilityname, checkin, checkout, devidedAmount];\r\n      //     reports.push(reportArray);\r\n      //   }\r\n      //   this.setState({\r\n      //     reports,\r\n      //   });\r\n      // } else {\r\n      //   this.setState({\r\n      //     reports: [],\r\n      //   });\r\n      // }\r\n    } catch (error) {\r\n      console.log(\"error getMonthlyMISAdminReport\", error);\r\n    }\r\n  };\r\n\r\n  getDailyAdminParkingStatusReport = async () => {\r\n    const { token, facilityid, startDate } = this.state;\r\n\r\n    let inputdatetime = moment(startDate).format(\"DD-MMM-YYYY\"); // 01-Oct-2022\r\n\r\n    try {\r\n      const response = await UserService.AdminParkingStatusReport(\r\n        facilityid,\r\n        token,\r\n        inputdatetime\r\n      );\r\n\r\n      console.log(\"response after getDailyAdminParkingStatusReport \", response);\r\n      const { data: res } = response;\r\n      if (res.respCode === 1 && res) {\r\n        const { checkin, checkout, payment } = res;\r\n\r\n        let totalcheckin = 0;\r\n        let totalcheckout = 0;\r\n        let totalPayment = 0;\r\n        let totalVehicle = 0;\r\n        let carIn = 0;\r\n        let carOut = 0;\r\n        let bikeIn = 0;\r\n        let bikeOut = 0;\r\n        let bicycleIn = 0;\r\n        let bicycleOut = 0;\r\n        let autoIn = 0;\r\n        let autoOut = 0;\r\n\r\n        let vehicleArray = [];\r\n        const vechicles = {\r\n          1: \"Bike\",\r\n          2: \"Car\",\r\n          3: \"Auto\",\r\n          4: \"Bicycle\",\r\n        };\r\n        if (checkin) {\r\n          for (let i = 0; i < checkin.length; i++) {\r\n            const { vehicletype, vehiclecount } = checkin[i];\r\n            const vehicleName = vechicles[vehicletype];\r\n            const ifExist = vehicleArray.findIndex(\r\n              (value, index) => value === vehicleName\r\n            );\r\n            if (ifExist == -1) {\r\n              vehicleArray.push(vehicleName);\r\n            }\r\n\r\n            carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\r\n            bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\r\n            bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\r\n            autoIn = vehicleName == \"Auto\" ? vehiclecount : autoIn;\r\n\r\n            totalcheckin = totalcheckin + vehiclecount;\r\n          }\r\n          console.log(\"checkin data\", carIn);\r\n        }\r\n        if (checkout) {\r\n          for (let i = 0; i < checkout.length; i++) {\r\n            const { vehicletype, vehiclecount } = checkout[i];\r\n            const vehicleName = vechicles[vehicletype];\r\n            const ifExist = vehicleArray.findIndex(\r\n              (value, index) => value === vehicleName\r\n            );\r\n            if (ifExist == -1) {\r\n              vehicleArray.push(vehicleName);\r\n            }\r\n\r\n            carOut = vehicleName == \"Car\" ? vehiclecount : carOut;\r\n            bikeOut = vehicleName == \"Bike\" ? vehiclecount : bikeOut;\r\n            bicycleOut = vehicleName == \"Bicycle\" ? vehiclecount : bicycleOut;\r\n            autoOut = vehicleName == \"Auto\" ? vehiclecount : autoOut;\r\n\r\n            totalcheckout = totalcheckout + vehiclecount;\r\n          }\r\n        }\r\n\r\n        const paymentValue = {\r\n          2: \"Cash\",\r\n          3: \"Online\",\r\n          5: \"Exempt\",\r\n        };\r\n        let paymentArray = [];\r\n        // let colorArray = [(opacity = 1) => `#2E7D32`,(opacity = 1) => `#FD0002`,(opacity = 1) => `#00266B`];\r\n        let colorArray = [];\r\n\r\n        let amountArray = [];\r\n        let cashCount = 0;\r\n        let onlineCount = 0;\r\n        let noCashCount = 0;\r\n\r\n        if (payment) {\r\n          for (let i = 0; i < payment.length; i++) {\r\n            const { paymentmode, amountcollected } = payment[i];\r\n            const paymentName = paymentValue[paymentmode];\r\n            const ifExist = paymentArray.findIndex(\r\n              (value, index) => value === paymentName\r\n            );\r\n            if (ifExist == -1) {\r\n              paymentArray.push(paymentName);\r\n            }\r\n\r\n            cashCount =\r\n              paymentName == \"Cash\" ? amountcollected / 100 : cashCount;\r\n            onlineCount =\r\n              paymentName == \"Online\" ? amountcollected / 100 : onlineCount;\r\n            noCashCount =\r\n              paymentName == \"Exempt\" ? amountcollected / 100 : noCashCount;\r\n\r\n            if (cashCount !== 0) {\r\n              amountArray.push(cashCount);\r\n            } else if (onlineCount !== 0) {\r\n              amountArray.push(onlineCount);\r\n            } else if (noCashCount !== 0) {\r\n              amountArray.push(noCashCount);\r\n            }\r\n            if (paymentmode === 2) {\r\n              colorArray.push((opacity = 1) => `#2E7D32`);\r\n            } else if (paymentmode === 3) {\r\n              colorArray.push((opacity = 1) => `#FD0002`);\r\n            } else if (paymentmode === 5) {\r\n              colorArray.push((opacity = 1) => `#00266B`);\r\n            }\r\n            if (paymentmode !== 5) {\r\n              totalPayment = totalPayment + amountcollected / 100;\r\n            }\r\n          }\r\n        }\r\n\r\n        let finalArray = [];\r\n\r\n        let objCar = {\r\n          name: \"Car\",\r\n          totalin: carIn,\r\n          totalout: carOut,\r\n        };\r\n        finalArray.push(objCar);\r\n        let objBike = {\r\n          name: \"Bike\",\r\n          totalin: bikeIn,\r\n          totalout: bikeOut,\r\n        };\r\n        finalArray.push(objBike);\r\n        let objBicycle = {\r\n          name: \"Bicycle\",\r\n          totalin: bicycleIn,\r\n          totalout: bicycleOut,\r\n        };\r\n        finalArray.push(objBicycle);\r\n\r\n        this.setState({\r\n          dailyReport: finalArray,\r\n          totalCheckIn: totalcheckin,\r\n          totalCheckOut: totalcheckout,\r\n          totalCash: cashCount,\r\n          totalOnline: onlineCount,\r\n          totalNoCash: noCashCount,\r\n          totalAmount: totalPayment,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error getDailyAdminParkingStatusReport\", error);\r\n    }\r\n  };\r\n\r\n  getMonthlyAdminParkingStatusReport = async (inputdate) => {\r\n    const { token, facilityid, startDate } = this.state;\r\n    let inputdatetime = moment(inputdate).format(\"MMM-YYYY\"); // 01-Oct-2022\r\n\r\n    try {\r\n      const response = await UserService.AdminMonthlyParkingStatusReport(\r\n        facilityid,\r\n        token,\r\n        inputdatetime\r\n      );\r\n\r\n      console.log(\r\n        \"response after getMonthlyAdminParkingStatusReport \",\r\n        response\r\n      );\r\n      const { data: res } = response;\r\n      if (res.respCode === 1 && res) {\r\n        const { checkin, checkout, payment } = res;\r\n\r\n        let totalcheckin = 0;\r\n        let totalcheckout = 0;\r\n        let totalPayment = 0;\r\n        let totalVehicle = 0;\r\n        let carIn = 0;\r\n        let carOut = 0;\r\n        let bikeIn = 0;\r\n        let bikeOut = 0;\r\n        let bicycleIn = 0;\r\n        let bicycleOut = 0;\r\n        let autoIn = 0;\r\n        let autoOut = 0;\r\n\r\n        let vehicleArray = [];\r\n        const vechicles = {\r\n          1: \"Bike\",\r\n          2: \"Car\",\r\n          3: \"Auto\",\r\n          4: \"Bicycle\",\r\n        };\r\n        if (checkin) {\r\n          for (let i = 0; i < checkin.length; i++) {\r\n            const { vehicletype, vehiclecount } = checkin[i];\r\n            const vehicleName = vechicles[vehicletype];\r\n            const ifExist = vehicleArray.findIndex(\r\n              (value, index) => value === vehicleName\r\n            );\r\n            if (ifExist == -1) {\r\n              vehicleArray.push(vehicleName);\r\n            }\r\n\r\n            carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\r\n            bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\r\n            bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\r\n            autoIn = vehicleName == \"Auto\" ? vehiclecount : autoIn;\r\n\r\n            totalcheckin = totalcheckin + vehiclecount;\r\n          }\r\n          console.log(\"checkin data\", carIn);\r\n        }\r\n        if (checkout) {\r\n          for (let i = 0; i < checkout.length; i++) {\r\n            const { vehicletype, vehiclecount } = checkout[i];\r\n            const vehicleName = vechicles[vehicletype];\r\n            const ifExist = vehicleArray.findIndex(\r\n              (value, index) => value === vehicleName\r\n            );\r\n            if (ifExist == -1) {\r\n              vehicleArray.push(vehicleName);\r\n            }\r\n\r\n            carOut = vehicleName == \"Car\" ? vehiclecount : carOut;\r\n            bikeOut = vehicleName == \"Bike\" ? vehiclecount : bikeOut;\r\n            bicycleOut = vehicleName == \"Bicycle\" ? vehiclecount : bicycleOut;\r\n            autoOut = vehicleName == \"Auto\" ? vehiclecount : autoOut;\r\n\r\n            totalcheckout = totalcheckout + vehiclecount;\r\n          }\r\n        }\r\n\r\n        const paymentValue = {\r\n          2: \"Cash\",\r\n          3: \"Online\",\r\n          5: \"Exempt\",\r\n        };\r\n        let paymentArray = [];\r\n        // let colorArray = [(opacity = 1) => `#2E7D32`,(opacity = 1) => `#FD0002`,(opacity = 1) => `#00266B`];\r\n        let colorArray = [];\r\n\r\n        let amountArray = [];\r\n        let cashCount = 0;\r\n        let onlineCount = 0;\r\n        let noCashCount = 0;\r\n\r\n        if (payment) {\r\n          for (let i = 0; i < payment.length; i++) {\r\n            const { paymentmode, amountcollected } = payment[i];\r\n            const paymentName = paymentValue[paymentmode];\r\n            const ifExist = paymentArray.findIndex(\r\n              (value, index) => value === paymentName\r\n            );\r\n            if (ifExist == -1) {\r\n              paymentArray.push(paymentName);\r\n            }\r\n\r\n            cashCount =\r\n              paymentName == \"Cash\" ? amountcollected / 100 : cashCount;\r\n            onlineCount =\r\n              paymentName == \"Online\" ? amountcollected / 100 : onlineCount;\r\n            noCashCount =\r\n              paymentName == \"Exempt\" ? amountcollected / 100 : noCashCount;\r\n\r\n            if (cashCount !== 0) {\r\n              amountArray.push(cashCount);\r\n            } else if (onlineCount !== 0) {\r\n              amountArray.push(onlineCount);\r\n            } else if (noCashCount !== 0) {\r\n              amountArray.push(noCashCount);\r\n            }\r\n            if (paymentmode === 2) {\r\n              colorArray.push((opacity = 1) => `#2E7D32`);\r\n            } else if (paymentmode === 3) {\r\n              colorArray.push((opacity = 1) => `#FD0002`);\r\n            } else if (paymentmode === 5) {\r\n              colorArray.push((opacity = 1) => `#00266B`);\r\n            }\r\n            if (paymentmode !== 5) {\r\n              totalPayment = totalPayment + amountcollected / 100;\r\n            }\r\n          }\r\n        }\r\n\r\n        let finalArray = [];\r\n\r\n        let objCar = {\r\n          name: \"Car\",\r\n          totalin: carIn,\r\n          totalout: carOut,\r\n        };\r\n        finalArray.push(objCar);\r\n        let objBike = {\r\n          name: \"Bike\",\r\n          totalin: bikeIn,\r\n          totalout: bikeOut,\r\n        };\r\n        finalArray.push(objBike);\r\n        let objBicycle = {\r\n          name: \"Bicycle\",\r\n          totalin: bicycleIn,\r\n          totalout: bicycleOut,\r\n        };\r\n        finalArray.push(objBicycle);\r\n\r\n        this.setState({\r\n          dailyReport: finalArray,\r\n          totalCheckIn: totalcheckin,\r\n          totalCheckOut: totalcheckout,\r\n          totalCash: cashCount,\r\n          totalOnline: onlineCount,\r\n          totalNoCash: noCashCount,\r\n          totalAmount: totalPayment,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error getMonthlyAdminParkingStatusReport\", error);\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { mappingList, type } = this.state;\r\n    let name = \"\";\r\n    for (let i = 0; i < mappingList.length; i++) {\r\n      if (event.target.value === mappingList[i][\"instanceid\"]) {\r\n        name = mappingList[i][\"name\"];\r\n      }\r\n    }\r\n    if (!name) {\r\n      name = \"Consolidate\";\r\n    }\r\n    console.log(\"name\", name);\r\n    this.setState(\r\n      {\r\n        instanceId: event.target.value,\r\n        facilityName: name,\r\n        dailyReport: [],\r\n        totalCheckIn: 0,\r\n        totalCheckOut: 0,\r\n        totalCash: 0,\r\n        totalOnline: 0,\r\n        totalNoCash: 0,\r\n        totalAmount: 0,\r\n      },\r\n      () => {\r\n        if (type === \"Daily\") {\r\n          this.getDailyMISAdminReport();\r\n          // this.getDailyAdminParkingStatusReport();\r\n        } else {\r\n          // this.getMonthlyAdminParkingStatusReport();\r\n          this.getMonthlyMISAdminReport();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleTypeChange = (event) => {\r\n    this.setState(\r\n      {\r\n        type: event.target.value,\r\n        dailyReport: [],\r\n        totalCheckIn: 0,\r\n        totalCheckOut: 0,\r\n        totalCash: 0,\r\n        totalOnline: 0,\r\n        totalNoCash: 0,\r\n        totalAmount: 0,\r\n      },\r\n      () => {\r\n        if (event.target.value === \"Daily\") {\r\n          this.getDailyAdminParkingStatusReport();\r\n          this.getDailyMISAdminReport();\r\n        } else {\r\n          this.getMonthlyAdminParkingStatusReport();\r\n          this.getMonthlyMISAdminReport();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleDateChange = (date) => {\r\n    const { type } = this.state;\r\n    console.log(date);\r\n    this.setState(\r\n      {\r\n        startDate: date,\r\n        dailyReport: [],\r\n        totalCheckIn: 0,\r\n        totalCheckOut: 0,\r\n        totalCash: 0,\r\n        totalOnline: 0,\r\n        totalNoCash: 0,\r\n        totalAmount: 0,\r\n        //endDate: date + 1,\r\n      },\r\n      () => {\r\n        if (type === \"Daily\") {\r\n          this.getDailyAdminParkingStatusReport();\r\n          this.getDailyMISAdminReport();\r\n        } else {\r\n          this.getMonthlyAdminParkingStatusReport();\r\n          this.getMonthlyMISAdminReport();\r\n        }\r\n      }\r\n    );\r\n  };\r\n  handleEndDateChange = (date) => {\r\n    this.setState({\r\n      endDate: date,\r\n    });\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const { orderBy, order } = this.state;\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    this.setState({\r\n      order: isAsc ? \"desc\" : \"asc\",\r\n    });\r\n    this.setState({\r\n      orderBy: property,\r\n    });\r\n  };\r\n\r\n  handleSelectAllClick = (event) => {\r\n    const { allBranch } = this.state;\r\n    if (event.target.checked) {\r\n      const newSelecteds = allBranch.map((n) => n.id);\r\n\r\n      this.setState({\r\n        selected: newSelecteds,\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, name) => {\r\n    const { selected } = this.state;\r\n    console.log(selected);\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    this.setState({\r\n      selected: newSelected,\r\n    });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({ page: newPage });\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({ rowsPerPage: parseInt(event.target.value, 10) });\r\n\r\n    this.setState({ page: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      instanceId,\r\n      startDate,\r\n      endDate,\r\n      mappingList,\r\n      type,\r\n      rowsPerPage,\r\n      page,\r\n      selected,\r\n      orderBy,\r\n      order,\r\n      dailyReport,\r\n      facilityName,\r\n      totalCheckIn,\r\n      totalCheckOut,\r\n      totalCash,\r\n      totalOnline,\r\n      totalNoCash,\r\n      totalAmount,\r\n    } = this.state;\r\n    const rows = dailyReport;\r\n    const emptyRows =\r\n      rowsPerPage -\r\n      Math.min(rowsPerPage, dailyReport.length - page * rowsPerPage);\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    console.log(\"mappingList\", mappingList, \" type\", type);\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Box className=\"container\" p={2.5} bgcolor=\"primary.lightBgContainer\">\r\n          <Paper className=\"content lead-page\">\r\n            <Box className=\"page-heading\" mb={3}>\r\n              <Box color=\"text.secondary\" pt={3} pr={2.7} pb={1.8} pl={3}>\r\n                <Typography variant=\"h6\" gutterBottom color=\"inherit\">\r\n                  Dashboard\r\n                </Typography>\r\n              </Box>\r\n              <Divider />\r\n            </Box>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container justifyContent=\"space-evenly\">\r\n                <FormControl variant=\"standard\" className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"age-native-simple\">\r\n                    Select Facility\r\n                  </InputLabel>\r\n                  <Select\r\n                    native\r\n                    value={instanceId}\r\n                    placeholder={\"Facility Name\"}\r\n                    onChange={(e, index) => {\r\n                      this.handleChange(e);\r\n                    }}\r\n                  >\r\n                    <option value=\"0\">Consolidated</option>\r\n\r\n                    {mappingList.map((data, index) => {\r\n                      return (\r\n                        <option key={index.toString()} value={data.instanceid}>\r\n                          {data.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"standard\" className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"age-native-simple\">\r\n                    Select Type\r\n                  </InputLabel>\r\n                  <Select\r\n                    native\r\n                    value={type}\r\n                    placeholder={\"Age\"}\r\n                    onChange={(e) => this.handleTypeChange(e)}\r\n                  >\r\n                    {/* <option aria-label=\"None\" value=\"NA\" /> */}\r\n                    <option value={\"Daily\"}>Daily</option>\r\n                    <option value={\"Monthly\"}>Monthly</option>\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"Date\"\r\n                  value={startDate}\r\n                  onChange={(date) => this.handleDateChange(date)}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n                {/* <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"End Date\"\r\n                  minDate={startDate}\r\n                  value={endDate}\r\n                  onChange={(date) => this.handleEndDateChange(date)}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                /> */}\r\n                <div className={classes.root}>\r\n                  <Button variant=\"contained\" size=\"small\" color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n\r\n            {/* <div className=\"data-table\">\r\n              <div className={classes.roots}>\r\n                <Paper className={classes.papers} elevation={0}>\r\n                  <TableContainer>\r\n                    <Table\r\n                      className={classes.table}\r\n                      aria-labelledby=\"tableTitle\"\r\n                      aria-label=\"enhanced table\"\r\n                    >\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          {headCells.map((headCell) => (\r\n                            <TableCell\r\n                              key={headCell.id}\r\n                              align={\"left\"}\r\n                              padding={\"none\"}\r\n                            >\r\n                              <TableSortLabel>{headCell.label}</TableSortLabel>\r\n                            </TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {rows.map((Lead, index) => {\r\n                          console.log(\"first\", Lead);\r\n                          const isItemSelected = isSelected(Lead.id);\r\n                          const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={index}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell\r\n                                component=\"th\"\r\n                                id={labelId}\r\n                                scope=\"row\"\r\n                                padding=\"none\"\r\n                                align=\"left\"\r\n                                color=\"green\"\r\n                              >\r\n                                {facilityName}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                component=\"th\"\r\n                                id={labelId}\r\n                                scope=\"row\"\r\n                                padding=\"none\"\r\n                                align=\"left\"\r\n                                color=\"green\"\r\n                              >\r\n                                {Lead.name}\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">{Lead.totalin}</TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {Lead.totalout}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                        {instanceId ? null : (\r\n                          <TableRow>\r\n                            <TableCell colSpan={1}>Total</TableCell>\r\n                            <TableCell align=\"left\">{totalCheckIn}</TableCell>\r\n                            <TableCell align=\"left\">{totalCheckOut}</TableCell>\r\n                            <TableCell align=\"left\">{totalAmount}</TableCell>\r\n                          </TableRow>\r\n                        )}\r\n\r\n                        <TableRow>\r\n                          <TableCell>Tax</TableCell>\r\n                          <TableCell align=\"right\">rate</TableCell>\r\n                          <TableCell align=\"right\">ohh</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell colSpan={2}>Total</TableCell>\r\n                          <TableCell align=\"right\">ok</TableCell>\r\n                        </TableRow>\r\n                        {emptyRows > 0 && (\r\n                          <TableRow>\r\n                            <TableCell colSpan={6} />\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Paper>\r\n              </div>\r\n            </div> */}\r\n            <div>\r\n              <ReactHTMLTableToExcel\r\n                id=\"test-table-xls-button\"\r\n                className=\"download-table-xls-button\"\r\n                table=\"emp\"\r\n                filename=\"tablexls\"\r\n                sheet=\"tablexls\"\r\n                buttonText=\"Download as XLS\"\r\n              />\r\n\r\n              <table id=\"emp\" className=\"table all_domain_table\">\r\n                <thead className=\"text-white bg-gray-700\">\r\n                  <tr>\r\n                    <th className=\"above-column\">Facility Name</th>\r\n\r\n                    <th colspan=\"3\" className=\"above-column\">\r\n                      Total Check In\r\n                    </th>\r\n\r\n                    <th colspan=\"3\" className=\"above-column\">\r\n                      Total Check Out\r\n                    </th>\r\n\r\n                    <th className=\"above-column\">Payment</th>\r\n                  </tr>\r\n                </thead>\r\n\r\n                <tr>\r\n                  <td rowspan=\"2\">Rani Kamlapati Station</td>\r\n                  <td colspan=\"3\">525</td>\r\n                  <td colspan=\"3\">250</td>\r\n                  <td rowspan=\"2\">Rs. 2500</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>Car: 200</td>\r\n                  <td>Bike: 225</td>\r\n                  <td>Bicycle: 100</td>\r\n                  <td>Car: 100</td>\r\n                  <td>Bike: 100</td>\r\n                  <td>Bicycle: 25</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td rowspan=\"2\">Dummy Location</td>\r\n                  <td colspan=\"3\">525</td>\r\n                  <td colspan=\"3\">250</td>\r\n                  <td rowspan=\"2\">Rs. 2500</td>\r\n                </tr>\r\n\r\n                <tr>\r\n                  <td>Car: 200</td>\r\n                  <td>Bike: 225</td>\r\n                  <td>Bicycle: 100</td>\r\n                  <td>Car: 100</td>\r\n                  <td>Bike: 100</td>\r\n                  <td>Bicycle: 25</td>\r\n                </tr>\r\n                <tfoot>\r\n                  <tr>\r\n                    <td className=\"align-middle \" colSpan={1}>\r\n                      Total:\r\n                    </td>\r\n\r\n                    <td colspan=\"3\" className=\"align-middle\">\r\n                      1050\r\n                    </td>\r\n\r\n                    <td colspan=\"3\" className=\"align-middle\">\r\n                      500\r\n                    </td>\r\n\r\n                    <td className=\"align-middle\">Rs. 5000.00</td>\r\n                  </tr>\r\n                </tfoot>\r\n              </table>\r\n            </div>\r\n          </Paper>\r\n        </Box>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userDetails: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(Home));\r\n"]},"metadata":{},"sourceType":"module"}