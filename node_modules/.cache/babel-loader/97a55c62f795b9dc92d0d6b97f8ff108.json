{"ast":null,"code":"import axios from \"axios\";\nimport { useSelector } from \"react-redux\";\nimport { appConfig } from \"../config\";\nimport { store } from \"../store\";\nconst {\n  baseUrl\n} = appConfig;\n\nconst Api = async (endpoint, isauthenticated, method, body, contentType) => {\n  try {\n    var newState = store.getState().user.loginToken;\n    let headers = {\n      Accept: \"application/json\",\n      \"Content-Type\": contentType || \"application/json\"\n    };\n\n    if (isauthenticated) {\n      headers = {\n        Authorization: `Bearer  ${newState}`,\n        Accept: \"application/json\",\n        \"Content-Type\": contentType || \"application/json\"\n      };\n    }\n\n    const response = await axios({\n      url: `${baseUrl}/${endpoint}`,\n      method: method || \"GET\",\n      data: body,\n      headers: headers,\n      responseType: \"json\"\n    });\n    return response;\n  } catch (error) {\n    if (error.response !== undefined) {\n      const errObj = error.response;\n      const {\n        status\n      } = error.response;\n\n      if (status == 401) {\n        localStorage.removeItem(\"persist:persist-root\");\n        window.location.assign(\"/\");\n      }\n\n      console.log(\"return success to frontend\", error.response);\n      return errObj; // return success to frontend\n    }\n\n    console.log(\"return success to sssss\", error);\n    return error;\n  }\n};\n\n_c = Api;\nstore.subscribe(Api);\nexport default Api;\n\nvar _c;\n\n$RefreshReg$(_c, \"Api\");","map":{"version":3,"sources":["/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/utils/APICaller.js"],"names":["axios","useSelector","appConfig","store","baseUrl","Api","endpoint","isauthenticated","method","body","contentType","newState","getState","user","loginToken","headers","Accept","Authorization","response","url","data","responseType","error","undefined","errObj","status","localStorage","removeItem","window","location","assign","console","log","subscribe"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,WAA1B;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAcF,SAApB;;AAEA,MAAMG,GAAG,GAAG,OAAOC,QAAP,EAAiBC,eAAjB,EAAkCC,MAAlC,EAA0CC,IAA1C,EAAgDC,WAAhD,KAAgE;AAC1E,MAAI;AACF,QAAIC,QAAQ,GAAGR,KAAK,CAACS,QAAN,GAAiBC,IAAjB,CAAsBC,UAArC;AACA,QAAIC,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,kBADI;AAEZ,sBAAgBN,WAAW,IAAI;AAFnB,KAAd;;AAIA,QAAIH,eAAJ,EAAqB;AACnBQ,MAAAA,OAAO,GAAG;AACRE,QAAAA,aAAa,EAAG,WAAUN,QAAS,EAD3B;AAERK,QAAAA,MAAM,EAAE,kBAFA;AAGR,wBAAgBN,WAAW,IAAI;AAHvB,OAAV;AAKD;;AAED,UAAMQ,QAAQ,GAAG,MAAMlB,KAAK,CAAC;AAC3BmB,MAAAA,GAAG,EAAG,GAAEf,OAAQ,IAAGE,QAAS,EADD;AAE3BE,MAAAA,MAAM,EAAEA,MAAM,IAAI,KAFS;AAG3BY,MAAAA,IAAI,EAAEX,IAHqB;AAI3BM,MAAAA,OAAO,EAAEA,OAJkB;AAK3BM,MAAAA,YAAY,EAAE;AALa,KAAD,CAA5B;AAQA,WAAOH,QAAP;AACD,GAvBD,CAuBE,OAAOI,KAAP,EAAc;AACd,QAAIA,KAAK,CAACJ,QAAN,KAAmBK,SAAvB,EAAkC;AAChC,YAAMC,MAAM,GAAGF,KAAK,CAACJ,QAArB;AACA,YAAM;AAAEO,QAAAA;AAAF,UAAaH,KAAK,CAACJ,QAAzB;;AACA,UAAIO,MAAM,IAAI,GAAd,EAAmB;AACjBC,QAAAA,YAAY,CAACC,UAAb,CAAwB,sBAAxB;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,GAAvB;AACD;;AACDC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CV,KAAK,CAACJ,QAAhD;AAEA,aAAOM,MAAP,CATgC,CASjB;AAChB;;AACDO,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCV,KAAvC;AACA,WAAOA,KAAP;AACD;AACF,CAvCD;;KAAMjB,G;AAyCNF,KAAK,CAAC8B,SAAN,CAAgB5B,GAAhB;AAEA,eAAeA,GAAf","sourcesContent":["import axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { appConfig } from \"../config\";\r\nimport { store } from \"../store\";\r\nconst { baseUrl } = appConfig;\r\n\r\nconst Api = async (endpoint, isauthenticated, method, body, contentType) => {\r\n  try {\r\n    var newState = store.getState().user.loginToken;\r\n    let headers = {\r\n      Accept: \"application/json\",\r\n      \"Content-Type\": contentType || \"application/json\",\r\n    };\r\n    if (isauthenticated) {\r\n      headers = {\r\n        Authorization: `Bearer  ${newState}`,\r\n        Accept: \"application/json\",\r\n        \"Content-Type\": contentType || \"application/json\",\r\n      };\r\n    }\r\n\r\n    const response = await axios({\r\n      url: `${baseUrl}/${endpoint}`,\r\n      method: method || \"GET\",\r\n      data: body,\r\n      headers: headers,\r\n      responseType: \"json\",\r\n    });\r\n\r\n    return response;\r\n  } catch (error) {\r\n    if (error.response !== undefined) {\r\n      const errObj = error.response;\r\n      const { status } = error.response;\r\n      if (status == 401) {\r\n        localStorage.removeItem(\"persist:persist-root\");\r\n        window.location.assign(\"/\");\r\n      }\r\n      console.log(\"return success to frontend\", error.response);\r\n\r\n      return errObj; // return success to frontend\r\n    }\r\n    console.log(\"return success to sssss\", error);\r\n    return error;\r\n  }\r\n};\r\n\r\nstore.subscribe(Api);\r\n\r\nexport default Api;\r\n"]},"metadata":{},"sourceType":"module"}