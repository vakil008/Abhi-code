{"ast":null,"code":"var _jsxFileName = \"/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/pages/Home/index.js\";\nimport React from \"react\";\nimport \"date-fns\";\nimport { Paper, Box, Typography, Divider, Container, InputLabel, Select, FormControl, FormHelperText, MenuItem, Grid, Button } from \"@material-ui/core\";\nimport { Table, TextField, CircularProgress } from \"@material-ui/core\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport { connect } from \"react-redux\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport { theme } from \"../../theme/light\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { MuiPickersUtilsProvider, KeyboardTimePicker, KeyboardDatePicker } from \"@material-ui/pickers\";\nimport UserService from \"../../services/user.service\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst useStyles = theme => ({\n  root: {\n    \"& > *\": {\n      marginTop: theme.spacing(4)\n    }\n  },\n  roots: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\"\n  },\n  papers: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  formControl: {\n    marginTop: theme.spacing(2),\n    minWidth: 300\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n});\n\nconst headCells = [{\n  id: \"facilityName\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Facility Name\"\n}, {\n  id: \"vehicleType\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Vehicle Type\"\n}, {\n  id: \"checkin\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Total Check In\"\n}, {\n  id: \"checkout\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Total Check Out\"\n} // {\n//   id: \"facilityName\",\n//   numeric: false,\n//   disablePadding: false,\n//   label: \"Facility Name\",\n// },\n// { id: \"city\", numeric: false, disablePadding: false, label: \"Email\" },\n// {\n//   id: \"description\",\n//   numeric: false,\n//   disablePadding: false,\n//   label: \"Description\",\n// },\n];\nconst paymentHeadCells = [{\n  id: \"online\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Online\"\n}, {\n  id: \"cash\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Cash\"\n}, {\n  id: \"exempt\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Exempt\"\n}, {\n  id: \"total\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Total\"\n}];\nlet rows = [];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n\n  const createSortHandler = property => event => {\n    onRequestSort(event, property);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableHead, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n        align: headCell.numeric ? \"right\" : \"left\",\n        padding: headCell.disablePadding ? \"none\" : \"normal\",\n        sortDirection: orderBy === headCell.id ? order : false,\n        children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n          active: orderBy === headCell.id,\n          direction: orderBy === headCell.id ? order : \"asc\",\n          onClick: createSortHandler(headCell.id),\n          children: [headCell.label, orderBy === headCell.id ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.visuallyHidden,\n            children: order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 17\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, headCell.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n\n_c = EnhancedTableHead;\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  console.log(\"getComparator\", order);\n  return order === \"desc\" ? (a, b) => descendingComparator(a, b, orderBy) : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nclass Home extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.getRefreshMapping = async () => {\n      const {\n        deviceuniqueid,\n        token\n      } = this.state;\n\n      try {\n        const response = await UserService.mapping(deviceuniqueid, token);\n        const {\n          status,\n          data\n        } = response;\n        const {\n          groupmapping\n        } = data;\n        const {\n          data: list\n        } = groupmapping;\n        console.log(\"response after getRefreshMapping --> \", response);\n\n        if (data && list.length > 0) {\n          let id = [];\n          let names = [];\n          list.map((item, index) => {\n            id.push(item.instanceid);\n            names.push(item.name);\n          });\n          id = id.join(\",\");\n          this.setState({\n            mappingList: list,\n            consolidates: id,\n            names\n          });\n        }\n      } catch (error) {\n        console.log(\"error getRefreshMapping\", error);\n      }\n    };\n\n    this.getDailyAdminParkingStatusReport = async inputdate => {\n      const {\n        token,\n        facilityid,\n        startDate\n      } = this.state;\n      let inputdatetime = moment(startDate).format(\"DD-MMM-YYYY\"); // 01-Oct-2022\n\n      try {\n        const response = await UserService.AdminParkingStatusReport(facilityid, token, inputdatetime);\n        console.log(\"response after getDailyAdminParkingStatusReport \", response);\n        const {\n          data: res\n        } = response;\n\n        if (res.respCode === 1 && res) {\n          const {\n            checkin,\n            checkout,\n            payment\n          } = res;\n          let totalcheckin = 0;\n          let totalcheckout = 0;\n          let totalPayment = 0;\n          let totalVehicle = 0;\n          let carIn = 0;\n          let carOut = 0;\n          let bikeIn = 0;\n          let bikeOut = 0;\n          let bicycleIn = 0;\n          let bicycleOut = 0;\n          let autoIn = 0;\n          let autoOut = 0;\n          let vehicleArray = [];\n          const vechicles = {\n            1: \"Bike\",\n            2: \"Car\",\n            3: \"Auto\",\n            4: \"Bicycle\"\n          };\n\n          if (checkin) {\n            for (let i = 0; i < checkin.length; i++) {\n              const {\n                vehicletype,\n                vehiclecount\n              } = checkin[i];\n              const vehicleName = vechicles[vehicletype];\n              const ifExist = vehicleArray.findIndex((value, index) => value === vehicleName);\n\n              if (ifExist == -1) {\n                vehicleArray.push(vehicleName);\n              }\n\n              carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\n              bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\n              bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\n              autoIn = vehicleName == \"Auto\" ? vehiclecount : autoIn;\n              totalcheckin = totalcheckin + vehiclecount;\n            }\n\n            console.log(\"checkin data\", carIn);\n          }\n\n          if (checkout) {\n            for (let i = 0; i < checkout.length; i++) {\n              const {\n                vehicletype,\n                vehiclecount\n              } = checkout[i];\n              const vehicleName = vechicles[vehicletype];\n              const ifExist = vehicleArray.findIndex((value, index) => value === vehicleName);\n\n              if (ifExist == -1) {\n                vehicleArray.push(vehicleName);\n              }\n\n              carOut = vehicleName == \"Car\" ? vehiclecount : carOut;\n              bikeOut = vehicleName == \"Bike\" ? vehiclecount : bikeOut;\n              bicycleOut = vehicleName == \"Bicycle\" ? vehiclecount : bicycleOut;\n              autoOut = vehicleName == \"Auto\" ? vehiclecount : autoOut;\n              totalcheckout = totalcheckout + vehiclecount;\n            }\n          }\n\n          const paymentValue = {\n            2: \"Cash\",\n            3: \"Online\",\n            5: \"Exempt\"\n          };\n          let paymentArray = []; // let colorArray = [(opacity = 1) => `#2E7D32`,(opacity = 1) => `#FD0002`,(opacity = 1) => `#00266B`];\n\n          let colorArray = [];\n          let amountArray = [];\n          let cashCount = 0;\n          let onlineCount = 0;\n          let noCashCount = 0;\n\n          if (payment) {\n            for (let i = 0; i < payment.length; i++) {\n              const {\n                paymentmode,\n                amountcollected\n              } = payment[i];\n              const paymentName = paymentValue[paymentmode];\n              const ifExist = paymentArray.findIndex((value, index) => value === paymentName);\n\n              if (ifExist == -1) {\n                paymentArray.push(paymentName);\n              }\n\n              cashCount = paymentName == \"Cash\" ? amountcollected / 100 : cashCount;\n              onlineCount = paymentName == \"Online\" ? amountcollected / 100 : onlineCount;\n              noCashCount = paymentName == \"Exempt\" ? amountcollected / 100 : noCashCount;\n\n              if (cashCount !== 0) {\n                amountArray.push(cashCount);\n              } else if (onlineCount !== 0) {\n                amountArray.push(onlineCount);\n              } else if (noCashCount !== 0) {\n                amountArray.push(noCashCount);\n              }\n\n              if (paymentmode === 2) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#2E7D32`;\n                });\n              } else if (paymentmode === 3) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#FD0002`;\n                });\n              } else if (paymentmode === 5) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#00266B`;\n                });\n              }\n\n              if (paymentmode !== 5) {\n                totalPayment = totalPayment + amountcollected / 100;\n              }\n            }\n          }\n\n          let finalArray = [];\n          let objCar = {\n            name: \"Car\",\n            totalin: carIn,\n            totalout: carOut\n          };\n          finalArray.push(objCar);\n          let objBike = {\n            name: \"Bike\",\n            totalin: bikeIn,\n            totalout: bikeOut\n          };\n          finalArray.push(objBike);\n          let objBicycle = {\n            name: \"Bicycle\",\n            totalin: bicycleIn,\n            totalout: bicycleOut\n          };\n          finalArray.push(objBicycle);\n          this.setState({\n            dailyReport: finalArray,\n            totalCheckIn: totalcheckin,\n            totalCheckOut: totalcheckout,\n            totalCash: cashCount,\n            totalOnline: onlineCount,\n            totalNoCash: noCashCount,\n            totalAmount: totalPayment\n          });\n        }\n      } catch (error) {\n        console.log(\"error getDailyAdminParkingStatusReport\", error);\n      }\n    };\n\n    this.getMonthlyAdminParkingStatusReport = async inputdate => {\n      const {\n        token,\n        facilityid\n      } = this.state;\n      let inputdatetime = moment(inputdate).format(\"MMM-YYYY\"); // 01-Oct-2022\n\n      try {\n        const response = await UserService.AdminParkingStatusReport(facilityid, token, \"Oct-2022\");\n        console.log(\"response after getMonthlyAdminParkingStatusReport \", response);\n        const {\n          data: res\n        } = response;\n\n        if (res.respCode === 1 && res) {\n          const {\n            checkin,\n            checkout,\n            payment\n          } = res;\n          let totalcheckin = 0;\n          let totalcheckout = 0;\n          let totalPayment = 0;\n          let totalVehicle = 0;\n          let carIn = 0;\n          let carOut = 0;\n          let bikeIn = 0;\n          let bikeOut = 0;\n          let bicycleIn = 0;\n          let bicycleOut = 0;\n          let autoIn = 0;\n          let autoOut = 0;\n          let vehicleArray = [];\n          const vechicles = {\n            1: \"Bike\",\n            2: \"Car\",\n            3: \"Auto\",\n            4: \"Bicycle\"\n          };\n\n          if (checkin) {\n            for (let i = 0; i < checkin.length; i++) {\n              const {\n                vehicletype,\n                vehiclecount\n              } = checkin[i];\n              const vehicleName = vechicles[vehicletype];\n              const ifExist = vehicleArray.findIndex((value, index) => value === vehicleName);\n\n              if (ifExist == -1) {\n                vehicleArray.push(vehicleName);\n              }\n\n              carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\n              bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\n              bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\n              autoIn = vehicleName == \"Auto\" ? vehiclecount : autoIn;\n              totalcheckin = totalcheckin + vehiclecount;\n            }\n\n            console.log(\"checkin data\", carIn);\n          }\n\n          if (checkout) {\n            for (let i = 0; i < checkout.length; i++) {\n              const {\n                vehicletype,\n                vehiclecount\n              } = checkout[i];\n              const vehicleName = vechicles[vehicletype];\n              const ifExist = vehicleArray.findIndex((value, index) => value === vehicleName);\n\n              if (ifExist == -1) {\n                vehicleArray.push(vehicleName);\n              }\n\n              carOut = vehicleName == \"Car\" ? vehiclecount : carOut;\n              bikeOut = vehicleName == \"Bike\" ? vehiclecount : bikeOut;\n              bicycleOut = vehicleName == \"Bicycle\" ? vehiclecount : bicycleOut;\n              autoOut = vehicleName == \"Auto\" ? vehiclecount : autoOut;\n              totalcheckout = totalcheckout + vehiclecount;\n            }\n          }\n\n          const paymentValue = {\n            2: \"Cash\",\n            3: \"Online\",\n            5: \"Exempt\"\n          };\n          let paymentArray = []; // let colorArray = [(opacity = 1) => `#2E7D32`,(opacity = 1) => `#FD0002`,(opacity = 1) => `#00266B`];\n\n          let colorArray = [];\n          let amountArray = [];\n          let cashCount = 0;\n          let onlineCount = 0;\n          let noCashCount = 0;\n\n          if (payment) {\n            for (let i = 0; i < payment.length; i++) {\n              const {\n                paymentmode,\n                amountcollected\n              } = payment[i];\n              const paymentName = paymentValue[paymentmode];\n              const ifExist = paymentArray.findIndex((value, index) => value === paymentName);\n\n              if (ifExist == -1) {\n                paymentArray.push(paymentName);\n              }\n\n              cashCount = paymentName == \"Cash\" ? amountcollected / 100 : cashCount;\n              onlineCount = paymentName == \"Online\" ? amountcollected / 100 : onlineCount;\n              noCashCount = paymentName == \"Exempt\" ? amountcollected / 100 : noCashCount;\n\n              if (cashCount !== 0) {\n                amountArray.push(cashCount);\n              } else if (onlineCount !== 0) {\n                amountArray.push(onlineCount);\n              } else if (noCashCount !== 0) {\n                amountArray.push(noCashCount);\n              }\n\n              if (paymentmode === 2) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#2E7D32`;\n                });\n              } else if (paymentmode === 3) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#FD0002`;\n                });\n              } else if (paymentmode === 5) {\n                colorArray.push(function () {\n                  let opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n                  return `#00266B`;\n                });\n              }\n\n              if (paymentmode !== 5) {\n                totalPayment = totalPayment + amountcollected / 100;\n              }\n            }\n          }\n\n          let finalArray = [];\n          let objCar = {\n            name: \"Car\",\n            totalin: carIn,\n            totalout: carOut\n          };\n          finalArray.push(objCar);\n          let objBike = {\n            name: \"Bike\",\n            totalin: bikeIn,\n            totalout: bikeOut\n          };\n          finalArray.push(objBike);\n          let objBicycle = {\n            name: \"Bicycle\",\n            totalin: bicycleIn,\n            totalout: bicycleOut\n          };\n          finalArray.push(objBicycle);\n          this.setState({\n            dailyReport: finalArray,\n            totalCheckIn: totalcheckin,\n            totalCheckOut: totalcheckout,\n            totalCash: cashCount,\n            totalOnline: onlineCount,\n            totalNoCash: noCashCount,\n            totalAmount: totalPayment\n          });\n        }\n      } catch (error) {\n        console.log(\"error getMonthlyAdminParkingStatusReport\", error);\n      }\n    };\n\n    this.handleChange = event => {\n      const {\n        mappingList,\n        type\n      } = this.state;\n      let name = \"\";\n\n      for (let i = 0; i < mappingList.length; i++) {\n        if (event.target.value === mappingList[i][\"instanceid\"]) {\n          name = mappingList[i][\"name\"];\n        }\n      }\n\n      if (!name) {\n        name = \"Consolidate\";\n      }\n\n      console.log(\"name\", name);\n      this.setState({\n        facility: event.target.value,\n        facilityName: name,\n        dailyReport: [],\n        totalCheckIn: 0,\n        totalCheckOut: 0,\n        totalCash: 0,\n        totalOnline: 0,\n        totalNoCash: 0,\n        totalAmount: 0\n      }, () => {\n        if (type === \"Daily\") {\n          this.getDailyAdminParkingStatusReport();\n        } else {\n          this.getMonthlyAdminParkingStatusReport();\n        }\n      });\n    };\n\n    this.handleTypeChange = event => {\n      const {\n        type\n      } = this.state;\n      this.setState({\n        type: event.target.value,\n        dailyReport: [],\n        totalCheckIn: 0,\n        totalCheckOut: 0,\n        totalCash: 0,\n        totalOnline: 0,\n        totalNoCash: 0,\n        totalAmount: 0\n      }, () => {\n        if (type === \"Daily\") {\n          this.getDailyAdminParkingStatusReport();\n        } else {\n          this.getMonthlyAdminParkingStatusReport();\n        }\n      });\n    };\n\n    this.handleDateChange = date => {\n      const {\n        type\n      } = this.state;\n      console.log(date);\n      this.setState({\n        startDate: date,\n        dailyReport: [],\n        totalCheckIn: 0,\n        totalCheckOut: 0,\n        totalCash: 0,\n        totalOnline: 0,\n        totalNoCash: 0,\n        totalAmount: 0 //endDate: date + 1,\n\n      }, () => {\n        if (type === \"Daily\") {\n          this.getDailyAdminParkingStatusReport();\n        } else {\n          this.getMonthlyAdminParkingStatusReport();\n        }\n      });\n    };\n\n    this.handleEndDateChange = date => {\n      this.setState({\n        endDate: date\n      });\n    };\n\n    this.handleRequestSort = (event, property) => {\n      const {\n        orderBy,\n        order\n      } = this.state;\n      const isAsc = orderBy === property && order === \"asc\";\n      this.setState({\n        order: isAsc ? \"desc\" : \"asc\"\n      });\n      this.setState({\n        orderBy: property\n      });\n    };\n\n    this.handleSelectAllClick = event => {\n      const {\n        allBranch\n      } = this.state;\n\n      if (event.target.checked) {\n        const newSelecteds = allBranch.map(n => n.id);\n        this.setState({\n          selected: newSelecteds\n        });\n        return;\n      }\n\n      this.setState({\n        selected: []\n      });\n    };\n\n    this.handleClick = (event, name) => {\n      const {\n        selected\n      } = this.state;\n      console.log(selected);\n      const selectedIndex = selected.indexOf(name);\n      let newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, name);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      this.setState({\n        selected: newSelected\n      });\n    };\n\n    this.handleChangePage = (event, newPage) => {\n      this.setState({\n        page: newPage\n      });\n    };\n\n    this.handleChangeRowsPerPage = event => {\n      this.setState({\n        rowsPerPage: parseInt(event.target.value, 10)\n      });\n      this.setState({\n        page: 0\n      });\n    };\n\n    this.state = {\n      age: \"\",\n      startDate: \"Sat Oct 01 2022 00:37:00 GMT+0530 (India Standard Time)\",\n      endDate: new Date() + 1,\n      deviceuniqueid: \"Web\",\n      token: \"339CFB64EDC6E94C5577CD68319E72AB6732C711AE661427AC83931B33F05CC4\",\n      mappingList: [],\n      consolidates: \"\",\n      type: \"Daily\",\n      facilityid: \"\",\n      dailyReport: [],\n      selected: [],\n      order: \"asc\",\n      orderBy: \"calories\",\n      selected: [],\n      page: 0,\n      rowsPerPage: 10,\n      names: [],\n      facility: \"\",\n      facilityName: \"Consolidate\",\n      totalCheckIn: 0,\n      totalCheckOut: 0,\n      totalCash: 0,\n      totalOnline: 0,\n      totalNoCash: 0,\n      totalAmount: 0\n    };\n  }\n\n  componentDidMount() {\n    const {\n      userDetails\n    } = this.props;\n    const {\n      loginToken\n    } = userDetails;\n    this.setState({\n      token: loginToken,\n      facilityid: \"34\"\n    }, () => {\n      this.getRefreshMapping();\n      this.getDailyAdminParkingStatusReport(new Date());\n    });\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    const {\n      facility,\n      startDate,\n      endDate,\n      mappingList,\n      type,\n      rowsPerPage,\n      page,\n      selected,\n      orderBy,\n      order,\n      dailyReport,\n      facilityName,\n      totalCheckIn,\n      totalCheckOut,\n      totalCash,\n      totalOnline,\n      totalNoCash,\n      totalAmount\n    } = this.state;\n    const rows = dailyReport;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, dailyReport.length - page * rowsPerPage);\n\n    const isSelected = id => selected.indexOf(id) !== -1;\n\n    console.log(\"mappingList\", mappingList, \" type\", type);\n    return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: theme,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: \"container\",\n        p: 2.5,\n        bgcolor: \"primary.lightBgContainer\",\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          className: \"content lead-page\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: \"page-heading\",\n            mb: 3,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              color: \"text.secondary\",\n              pt: 3,\n              pr: 2.7,\n              pb: 1.8,\n              pl: 3,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                color: \"inherit\",\n                children: \"Dashboard\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 798,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 797,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n            utils: DateFnsUtils,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justifyContent: \"space-evenly\",\n              children: [/*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"standard\",\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"age-native-simple\",\n                  children: \"Select Facility\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 807,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  native: true,\n                  value: facility,\n                  placeholder: \"Facility Name\",\n                  onChange: (e, index) => {\n                    this.handleChange(e);\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"0\",\n                    children: \"Consolidated\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 818,\n                    columnNumber: 21\n                  }, this), mappingList.map((data, index) => {\n                    return /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: data.instanceid,\n                      children: data.name\n                    }, index.toString(), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 822,\n                      columnNumber: 25\n                    }, this);\n                  })]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 810,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 806,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n                variant: \"standard\",\n                className: classes.formControl,\n                children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n                  htmlFor: \"age-native-simple\",\n                  children: \"Select Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 830,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Select, {\n                  native: true,\n                  value: type,\n                  placeholder: \"Age\",\n                  onChange: e => this.handleTypeChange(e),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Daily\",\n                    children: \"Daily\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 840,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"Monthly\",\n                    children: \"Monthly\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 841,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 833,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 829,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                disableToolbar: true,\n                variant: \"inline\",\n                format: \"dd/MM/yyyy\",\n                margin: \"normal\",\n                id: \"date-picker-inline\",\n                label: \"Date\",\n                value: startDate,\n                onChange: date => this.handleDateChange(date),\n                KeyboardButtonProps: {\n                  \"aria-label\": \"change date\"\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 845,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.root,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  size: \"small\",\n                  color: \"primary\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 873,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 805,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 804,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-table\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.roots,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                className: classes.papers,\n                elevation: 0,\n                children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    className: classes.table,\n                    \"aria-labelledby\": \"tableTitle\",\n                    \"aria-label\": \"enhanced table\",\n                    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                      children: /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: headCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"left\",\n                          padding: \"none\",\n                          children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                            children: headCell.label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 897,\n                            columnNumber: 31\n                          }, this)\n                        }, headCell.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 892,\n                          columnNumber: 29\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 890,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 889,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      children: [rows.map((Lead, index) => {\n                        console.log(\"first\", Lead);\n                        const isItemSelected = isSelected(Lead.id);\n                        const labelId = `enhanced-table-checkbox-${index}`;\n                        return /*#__PURE__*/_jsxDEV(TableRow, {\n                          hover: true,\n                          tabIndex: -1,\n                          selected: isItemSelected,\n                          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                            component: \"th\",\n                            id: labelId,\n                            scope: \"row\",\n                            padding: \"none\",\n                            align: \"left\",\n                            color: \"green\",\n                            children: facilityName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 915,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            component: \"th\",\n                            id: labelId,\n                            scope: \"row\",\n                            padding: \"none\",\n                            align: \"left\",\n                            color: \"green\",\n                            children: Lead.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 925,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            align: \"left\",\n                            children: Lead.totalin\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 935,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            align: \"left\",\n                            children: Lead.totalout\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 936,\n                            columnNumber: 31\n                          }, this)]\n                        }, index, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 909,\n                          columnNumber: 29\n                        }, this);\n                      }), /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          rowSpan: 3\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 944,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          colSpan: 1,\n                          children: \"Subtotal\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 945,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"left\",\n                          children: totalCheckIn\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 946,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"left\",\n                          children: totalCheckOut\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 947,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 943,\n                        columnNumber: 25\n                      }, this), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: /*#__PURE__*/_jsxDEV(TableCell, {\n                          colSpan: 6\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 960,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 959,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 902,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 884,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 883,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 882,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 881,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"data-table\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.roots,\n              children: /*#__PURE__*/_jsxDEV(Paper, {\n                className: classes.papers,\n                elevation: 0,\n                children: /*#__PURE__*/_jsxDEV(TableContainer, {\n                  children: /*#__PURE__*/_jsxDEV(Table, {\n                    className: classes.table,\n                    \"aria-labelledby\": \"tableTitle\",\n                    \"aria-label\": \"enhanced table\",\n                    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                      children: /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: paymentHeadCells.map(headCell => /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"left\",\n                          padding: \"none\",\n                          children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                            children: headCell.label\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 986,\n                            columnNumber: 31\n                          }, this)\n                        }, headCell.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 981,\n                          columnNumber: 29\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 979,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 978,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                      children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                        hover: true,\n                        tabIndex: -1,\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          component: \"th\",\n                          id: \"online\",\n                          scope: \"row\",\n                          padding: \"none\",\n                          align: \"left\",\n                          color: \"green\",\n                          children: totalOnline\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 993,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          component: \"th\",\n                          id: \"cash\",\n                          scope: \"row\",\n                          padding: \"none\",\n                          align: \"left\",\n                          color: \"green\",\n                          children: totalCash\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1003,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"left\",\n                          children: totalNoCash\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1013,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          align: \"left\",\n                          children: totalAmount\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1014,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 992,\n                        columnNumber: 25\n                      }, this), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: /*#__PURE__*/_jsxDEV(TableCell, {\n                          colSpan: 6\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 1028,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 1027,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 991,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 973,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 972,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 971,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 795,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  userDetails: state.user\n});\n\nexport default connect(mapStateToProps)(withStyles(useStyles)(Home));\n\nvar _c;\n\n$RefreshReg$(_c, \"EnhancedTableHead\");","map":{"version":3,"sources":["/Users/abhijeetsingh/My Data/my data/EazyPark ReactJs/eduorg/src/pages/Home/index.js"],"names":["React","Paper","Box","Typography","Divider","Container","InputLabel","Select","FormControl","FormHelperText","MenuItem","Grid","Button","Table","TextField","CircularProgress","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","connect","ThemeProvider","theme","withStyles","DateFnsUtils","MuiPickersUtilsProvider","KeyboardTimePicker","KeyboardDatePicker","UserService","moment","useStyles","root","marginTop","spacing","roots","width","paper","papers","marginBottom","formControl","minWidth","selectEmpty","headCells","id","numeric","disablePadding","label","paymentHeadCells","rows","EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","onRequestSort","createSortHandler","property","event","map","headCell","visuallyHidden","descendingComparator","a","b","getComparator","console","log","stableSort","array","comparator","stabilizedThis","el","index","sort","Home","PureComponent","constructor","getRefreshMapping","deviceuniqueid","token","state","response","mapping","status","data","groupmapping","list","length","names","item","push","instanceid","name","join","setState","mappingList","consolidates","error","getDailyAdminParkingStatusReport","inputdate","facilityid","startDate","inputdatetime","format","AdminParkingStatusReport","res","respCode","checkin","checkout","payment","totalcheckin","totalcheckout","totalPayment","totalVehicle","carIn","carOut","bikeIn","bikeOut","bicycleIn","bicycleOut","autoIn","autoOut","vehicleArray","vechicles","i","vehicletype","vehiclecount","vehicleName","ifExist","findIndex","value","paymentValue","paymentArray","colorArray","amountArray","cashCount","onlineCount","noCashCount","paymentmode","amountcollected","paymentName","opacity","finalArray","objCar","totalin","totalout","objBike","objBicycle","dailyReport","totalCheckIn","totalCheckOut","totalCash","totalOnline","totalNoCash","totalAmount","getMonthlyAdminParkingStatusReport","handleChange","type","target","facility","facilityName","handleTypeChange","handleDateChange","date","handleEndDateChange","endDate","handleRequestSort","isAsc","handleSelectAllClick","allBranch","checked","newSelecteds","n","selected","handleClick","selectedIndex","indexOf","newSelected","concat","slice","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","parseInt","age","Date","componentDidMount","userDetails","loginToken","render","emptyRows","Math","min","isSelected","e","toString","table","Lead","isItemSelected","labelId","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"date-fns\";\r\nimport {\r\n  Paper,\r\n  Box,\r\n  Typography,\r\n  Divider,\r\n  Container,\r\n  InputLabel,\r\n  Select,\r\n  FormControl,\r\n  FormHelperText,\r\n  MenuItem,\r\n  Grid,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Table, TextField, CircularProgress } from \"@material-ui/core\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport { connect } from \"react-redux\";\r\nimport { ThemeProvider } from \"@material-ui/core/styles\";\r\nimport { theme } from \"../../theme/light\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport UserService from \"../../services/user.service\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = (theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(4),\r\n    },\r\n  },\r\n  roots: {\r\n    width: \"100%\",\r\n  },\r\n  paper: {\r\n    width: \"100%\",\r\n  },\r\n  papers: {\r\n    width: \"100%\",\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n\r\n  formControl: {\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 300,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n});\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"facilityName\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Facility Name\",\r\n  },\r\n  {\r\n    id: \"vehicleType\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Vehicle Type\",\r\n  },\r\n  {\r\n    id: \"checkin\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Total Check In\",\r\n  },\r\n  {\r\n    id: \"checkout\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Total Check Out\",\r\n  },\r\n  // {\r\n  //   id: \"facilityName\",\r\n  //   numeric: false,\r\n  //   disablePadding: false,\r\n  //   label: \"Facility Name\",\r\n  // },\r\n  // { id: \"city\", numeric: false, disablePadding: false, label: \"Email\" },\r\n  // {\r\n  //   id: \"description\",\r\n  //   numeric: false,\r\n  //   disablePadding: false,\r\n  //   label: \"Description\",\r\n  // },\r\n];\r\n\r\nconst paymentHeadCells = [\r\n  {\r\n    id: \"online\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Online\",\r\n  },\r\n  {\r\n    id: \"cash\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Cash\",\r\n  },\r\n  {\r\n    id: \"exempt\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Exempt\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    numeric: false,\r\n    disablePadding: false,\r\n    label: \"Total\",\r\n  },\r\n];\r\nlet rows = [];\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    classes,\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\r\n          />\r\n        </TableCell> */}\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <span className={classes.visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </span>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  console.log(\"getComparator\", order);\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nclass Home extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      age: \"\",\r\n      startDate: \"Sat Oct 01 2022 00:37:00 GMT+0530 (India Standard Time)\",\r\n      endDate: new Date() + 1,\r\n      deviceuniqueid: \"Web\",\r\n      token: \"339CFB64EDC6E94C5577CD68319E72AB6732C711AE661427AC83931B33F05CC4\",\r\n      mappingList: [],\r\n      consolidates: \"\",\r\n      type: \"Daily\",\r\n      facilityid: \"\",\r\n      dailyReport: [],\r\n      selected: [],\r\n      order: \"asc\",\r\n      orderBy: \"calories\",\r\n      selected: [],\r\n      page: 0,\r\n      rowsPerPage: 10,\r\n      names: [],\r\n      facility: \"\",\r\n      facilityName: \"Consolidate\",\r\n      totalCheckIn: 0,\r\n      totalCheckOut: 0,\r\n      totalCash: 0,\r\n      totalOnline: 0,\r\n      totalNoCash: 0,\r\n      totalAmount: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { userDetails } = this.props;\r\n    const { loginToken } = userDetails;\r\n    this.setState(\r\n      {\r\n        token: loginToken,\r\n        facilityid: \"34\",\r\n      },\r\n      () => {\r\n        this.getRefreshMapping();\r\n        this.getDailyAdminParkingStatusReport(new Date());\r\n      }\r\n    );\r\n  }\r\n\r\n  getRefreshMapping = async () => {\r\n    const { deviceuniqueid, token } = this.state;\r\n\r\n    try {\r\n      const response = await UserService.mapping(deviceuniqueid, token);\r\n      const { status, data } = response;\r\n      const { groupmapping } = data;\r\n      const { data: list } = groupmapping;\r\n      console.log(\"response after getRefreshMapping --> \", response);\r\n      if (data && list.length > 0) {\r\n        let id = [];\r\n        let names = [];\r\n        list.map((item, index) => {\r\n          id.push(item.instanceid);\r\n          names.push(item.name);\r\n        });\r\n        id = id.join(\",\");\r\n        this.setState({\r\n          mappingList: list,\r\n          consolidates: id,\r\n          names,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error getRefreshMapping\", error);\r\n    }\r\n  };\r\n\r\n  getDailyAdminParkingStatusReport = async (inputdate) => {\r\n    const { token, facilityid, startDate } = this.state;\r\n\r\n    let inputdatetime = moment(startDate).format(\"DD-MMM-YYYY\"); // 01-Oct-2022\r\n\r\n    try {\r\n      const response = await UserService.AdminParkingStatusReport(\r\n        facilityid,\r\n        token,\r\n        inputdatetime\r\n      );\r\n\r\n      console.log(\"response after getDailyAdminParkingStatusReport \", response);\r\n      const { data: res } = response;\r\n      if (res.respCode === 1 && res) {\r\n        const { checkin, checkout, payment } = res;\r\n\r\n        let totalcheckin = 0;\r\n        let totalcheckout = 0;\r\n        let totalPayment = 0;\r\n        let totalVehicle = 0;\r\n        let carIn = 0;\r\n        let carOut = 0;\r\n        let bikeIn = 0;\r\n        let bikeOut = 0;\r\n        let bicycleIn = 0;\r\n        let bicycleOut = 0;\r\n        let autoIn = 0;\r\n        let autoOut = 0;\r\n\r\n        let vehicleArray = [];\r\n        const vechicles = {\r\n          1: \"Bike\",\r\n          2: \"Car\",\r\n          3: \"Auto\",\r\n          4: \"Bicycle\",\r\n        };\r\n        if (checkin) {\r\n          for (let i = 0; i < checkin.length; i++) {\r\n            const { vehicletype, vehiclecount } = checkin[i];\r\n            const vehicleName = vechicles[vehicletype];\r\n            const ifExist = vehicleArray.findIndex(\r\n              (value, index) => value === vehicleName\r\n            );\r\n            if (ifExist == -1) {\r\n              vehicleArray.push(vehicleName);\r\n            }\r\n\r\n            carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\r\n            bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\r\n            bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\r\n            autoIn = vehicleName == \"Auto\" ? vehiclecount : autoIn;\r\n\r\n            totalcheckin = totalcheckin + vehiclecount;\r\n          }\r\n          console.log(\"checkin data\", carIn);\r\n        }\r\n        if (checkout) {\r\n          for (let i = 0; i < checkout.length; i++) {\r\n            const { vehicletype, vehiclecount } = checkout[i];\r\n            const vehicleName = vechicles[vehicletype];\r\n            const ifExist = vehicleArray.findIndex(\r\n              (value, index) => value === vehicleName\r\n            );\r\n            if (ifExist == -1) {\r\n              vehicleArray.push(vehicleName);\r\n            }\r\n\r\n            carOut = vehicleName == \"Car\" ? vehiclecount : carOut;\r\n            bikeOut = vehicleName == \"Bike\" ? vehiclecount : bikeOut;\r\n            bicycleOut = vehicleName == \"Bicycle\" ? vehiclecount : bicycleOut;\r\n            autoOut = vehicleName == \"Auto\" ? vehiclecount : autoOut;\r\n\r\n            totalcheckout = totalcheckout + vehiclecount;\r\n          }\r\n        }\r\n\r\n        const paymentValue = {\r\n          2: \"Cash\",\r\n          3: \"Online\",\r\n          5: \"Exempt\",\r\n        };\r\n        let paymentArray = [];\r\n        // let colorArray = [(opacity = 1) => `#2E7D32`,(opacity = 1) => `#FD0002`,(opacity = 1) => `#00266B`];\r\n        let colorArray = [];\r\n\r\n        let amountArray = [];\r\n        let cashCount = 0;\r\n        let onlineCount = 0;\r\n        let noCashCount = 0;\r\n\r\n        if (payment) {\r\n          for (let i = 0; i < payment.length; i++) {\r\n            const { paymentmode, amountcollected } = payment[i];\r\n            const paymentName = paymentValue[paymentmode];\r\n            const ifExist = paymentArray.findIndex(\r\n              (value, index) => value === paymentName\r\n            );\r\n            if (ifExist == -1) {\r\n              paymentArray.push(paymentName);\r\n            }\r\n\r\n            cashCount =\r\n              paymentName == \"Cash\" ? amountcollected / 100 : cashCount;\r\n            onlineCount =\r\n              paymentName == \"Online\" ? amountcollected / 100 : onlineCount;\r\n            noCashCount =\r\n              paymentName == \"Exempt\" ? amountcollected / 100 : noCashCount;\r\n\r\n            if (cashCount !== 0) {\r\n              amountArray.push(cashCount);\r\n            } else if (onlineCount !== 0) {\r\n              amountArray.push(onlineCount);\r\n            } else if (noCashCount !== 0) {\r\n              amountArray.push(noCashCount);\r\n            }\r\n            if (paymentmode === 2) {\r\n              colorArray.push((opacity = 1) => `#2E7D32`);\r\n            } else if (paymentmode === 3) {\r\n              colorArray.push((opacity = 1) => `#FD0002`);\r\n            } else if (paymentmode === 5) {\r\n              colorArray.push((opacity = 1) => `#00266B`);\r\n            }\r\n            if (paymentmode !== 5) {\r\n              totalPayment = totalPayment + amountcollected / 100;\r\n            }\r\n          }\r\n        }\r\n\r\n        let finalArray = [];\r\n\r\n        let objCar = {\r\n          name: \"Car\",\r\n          totalin: carIn,\r\n          totalout: carOut,\r\n        };\r\n        finalArray.push(objCar);\r\n        let objBike = {\r\n          name: \"Bike\",\r\n          totalin: bikeIn,\r\n          totalout: bikeOut,\r\n        };\r\n        finalArray.push(objBike);\r\n        let objBicycle = {\r\n          name: \"Bicycle\",\r\n          totalin: bicycleIn,\r\n          totalout: bicycleOut,\r\n        };\r\n        finalArray.push(objBicycle);\r\n\r\n        this.setState({\r\n          dailyReport: finalArray,\r\n          totalCheckIn: totalcheckin,\r\n          totalCheckOut: totalcheckout,\r\n          totalCash: cashCount,\r\n          totalOnline: onlineCount,\r\n          totalNoCash: noCashCount,\r\n          totalAmount: totalPayment,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error getDailyAdminParkingStatusReport\", error);\r\n    }\r\n  };\r\n\r\n  getMonthlyAdminParkingStatusReport = async (inputdate) => {\r\n    const { token, facilityid } = this.state;\r\n    let inputdatetime = moment(inputdate).format(\"MMM-YYYY\"); // 01-Oct-2022\r\n\r\n    try {\r\n      const response = await UserService.AdminParkingStatusReport(\r\n        facilityid,\r\n        token,\r\n        \"Oct-2022\"\r\n      );\r\n\r\n      console.log(\r\n        \"response after getMonthlyAdminParkingStatusReport \",\r\n        response\r\n      );\r\n      const { data: res } = response;\r\n      if (res.respCode === 1 && res) {\r\n        const { checkin, checkout, payment } = res;\r\n\r\n        let totalcheckin = 0;\r\n        let totalcheckout = 0;\r\n        let totalPayment = 0;\r\n        let totalVehicle = 0;\r\n        let carIn = 0;\r\n        let carOut = 0;\r\n        let bikeIn = 0;\r\n        let bikeOut = 0;\r\n        let bicycleIn = 0;\r\n        let bicycleOut = 0;\r\n        let autoIn = 0;\r\n        let autoOut = 0;\r\n\r\n        let vehicleArray = [];\r\n        const vechicles = {\r\n          1: \"Bike\",\r\n          2: \"Car\",\r\n          3: \"Auto\",\r\n          4: \"Bicycle\",\r\n        };\r\n        if (checkin) {\r\n          for (let i = 0; i < checkin.length; i++) {\r\n            const { vehicletype, vehiclecount } = checkin[i];\r\n            const vehicleName = vechicles[vehicletype];\r\n            const ifExist = vehicleArray.findIndex(\r\n              (value, index) => value === vehicleName\r\n            );\r\n            if (ifExist == -1) {\r\n              vehicleArray.push(vehicleName);\r\n            }\r\n\r\n            carIn = vehicleName == \"Car\" ? vehiclecount : carIn;\r\n            bikeIn = vehicleName == \"Bike\" ? vehiclecount : bikeIn;\r\n            bicycleIn = vehicleName == \"Bicycle\" ? vehiclecount : bicycleIn;\r\n            autoIn = vehicleName == \"Auto\" ? vehiclecount : autoIn;\r\n\r\n            totalcheckin = totalcheckin + vehiclecount;\r\n          }\r\n          console.log(\"checkin data\", carIn);\r\n        }\r\n        if (checkout) {\r\n          for (let i = 0; i < checkout.length; i++) {\r\n            const { vehicletype, vehiclecount } = checkout[i];\r\n            const vehicleName = vechicles[vehicletype];\r\n            const ifExist = vehicleArray.findIndex(\r\n              (value, index) => value === vehicleName\r\n            );\r\n            if (ifExist == -1) {\r\n              vehicleArray.push(vehicleName);\r\n            }\r\n\r\n            carOut = vehicleName == \"Car\" ? vehiclecount : carOut;\r\n            bikeOut = vehicleName == \"Bike\" ? vehiclecount : bikeOut;\r\n            bicycleOut = vehicleName == \"Bicycle\" ? vehiclecount : bicycleOut;\r\n            autoOut = vehicleName == \"Auto\" ? vehiclecount : autoOut;\r\n\r\n            totalcheckout = totalcheckout + vehiclecount;\r\n          }\r\n        }\r\n\r\n        const paymentValue = {\r\n          2: \"Cash\",\r\n          3: \"Online\",\r\n          5: \"Exempt\",\r\n        };\r\n        let paymentArray = [];\r\n        // let colorArray = [(opacity = 1) => `#2E7D32`,(opacity = 1) => `#FD0002`,(opacity = 1) => `#00266B`];\r\n        let colorArray = [];\r\n\r\n        let amountArray = [];\r\n        let cashCount = 0;\r\n        let onlineCount = 0;\r\n        let noCashCount = 0;\r\n\r\n        if (payment) {\r\n          for (let i = 0; i < payment.length; i++) {\r\n            const { paymentmode, amountcollected } = payment[i];\r\n            const paymentName = paymentValue[paymentmode];\r\n            const ifExist = paymentArray.findIndex(\r\n              (value, index) => value === paymentName\r\n            );\r\n            if (ifExist == -1) {\r\n              paymentArray.push(paymentName);\r\n            }\r\n\r\n            cashCount =\r\n              paymentName == \"Cash\" ? amountcollected / 100 : cashCount;\r\n            onlineCount =\r\n              paymentName == \"Online\" ? amountcollected / 100 : onlineCount;\r\n            noCashCount =\r\n              paymentName == \"Exempt\" ? amountcollected / 100 : noCashCount;\r\n\r\n            if (cashCount !== 0) {\r\n              amountArray.push(cashCount);\r\n            } else if (onlineCount !== 0) {\r\n              amountArray.push(onlineCount);\r\n            } else if (noCashCount !== 0) {\r\n              amountArray.push(noCashCount);\r\n            }\r\n            if (paymentmode === 2) {\r\n              colorArray.push((opacity = 1) => `#2E7D32`);\r\n            } else if (paymentmode === 3) {\r\n              colorArray.push((opacity = 1) => `#FD0002`);\r\n            } else if (paymentmode === 5) {\r\n              colorArray.push((opacity = 1) => `#00266B`);\r\n            }\r\n            if (paymentmode !== 5) {\r\n              totalPayment = totalPayment + amountcollected / 100;\r\n            }\r\n          }\r\n        }\r\n\r\n        let finalArray = [];\r\n\r\n        let objCar = {\r\n          name: \"Car\",\r\n          totalin: carIn,\r\n          totalout: carOut,\r\n        };\r\n        finalArray.push(objCar);\r\n        let objBike = {\r\n          name: \"Bike\",\r\n          totalin: bikeIn,\r\n          totalout: bikeOut,\r\n        };\r\n        finalArray.push(objBike);\r\n        let objBicycle = {\r\n          name: \"Bicycle\",\r\n          totalin: bicycleIn,\r\n          totalout: bicycleOut,\r\n        };\r\n        finalArray.push(objBicycle);\r\n\r\n        this.setState({\r\n          dailyReport: finalArray,\r\n          totalCheckIn: totalcheckin,\r\n          totalCheckOut: totalcheckout,\r\n          totalCash: cashCount,\r\n          totalOnline: onlineCount,\r\n          totalNoCash: noCashCount,\r\n          totalAmount: totalPayment,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error getMonthlyAdminParkingStatusReport\", error);\r\n    }\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const { mappingList, type } = this.state;\r\n    let name = \"\";\r\n    for (let i = 0; i < mappingList.length; i++) {\r\n      if (event.target.value === mappingList[i][\"instanceid\"]) {\r\n        name = mappingList[i][\"name\"];\r\n      }\r\n    }\r\n    if (!name) {\r\n      name = \"Consolidate\";\r\n    }\r\n    console.log(\"name\", name);\r\n    this.setState(\r\n      {\r\n        facility: event.target.value,\r\n        facilityName: name,\r\n        dailyReport: [],\r\n        totalCheckIn: 0,\r\n        totalCheckOut: 0,\r\n        totalCash: 0,\r\n        totalOnline: 0,\r\n        totalNoCash: 0,\r\n        totalAmount: 0,\r\n      },\r\n      () => {\r\n        if (type === \"Daily\") {\r\n          this.getDailyAdminParkingStatusReport();\r\n        } else {\r\n          this.getMonthlyAdminParkingStatusReport();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleTypeChange = (event) => {\r\n    const { type } = this.state;\r\n    this.setState(\r\n      {\r\n        type: event.target.value,\r\n        dailyReport: [],\r\n        totalCheckIn: 0,\r\n        totalCheckOut: 0,\r\n        totalCash: 0,\r\n        totalOnline: 0,\r\n        totalNoCash: 0,\r\n        totalAmount: 0,\r\n      },\r\n      () => {\r\n        if (type === \"Daily\") {\r\n          this.getDailyAdminParkingStatusReport();\r\n        } else {\r\n          this.getMonthlyAdminParkingStatusReport();\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  handleDateChange = (date) => {\r\n    const { type } = this.state;\r\n    console.log(date);\r\n    this.setState(\r\n      {\r\n        startDate: date,\r\n        dailyReport: [],\r\n        totalCheckIn: 0,\r\n        totalCheckOut: 0,\r\n        totalCash: 0,\r\n        totalOnline: 0,\r\n        totalNoCash: 0,\r\n        totalAmount: 0,\r\n        //endDate: date + 1,\r\n      },\r\n      () => {\r\n        if (type === \"Daily\") {\r\n          this.getDailyAdminParkingStatusReport();\r\n        } else {\r\n          this.getMonthlyAdminParkingStatusReport();\r\n        }\r\n      }\r\n    );\r\n  };\r\n  handleEndDateChange = (date) => {\r\n    this.setState({\r\n      endDate: date,\r\n    });\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const { orderBy, order } = this.state;\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    this.setState({\r\n      order: isAsc ? \"desc\" : \"asc\",\r\n    });\r\n    this.setState({\r\n      orderBy: property,\r\n    });\r\n  };\r\n\r\n  handleSelectAllClick = (event) => {\r\n    const { allBranch } = this.state;\r\n    if (event.target.checked) {\r\n      const newSelecteds = allBranch.map((n) => n.id);\r\n\r\n      this.setState({\r\n        selected: newSelecteds,\r\n      });\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, name) => {\r\n    const { selected } = this.state;\r\n    console.log(selected);\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    this.setState({\r\n      selected: newSelected,\r\n    });\r\n  };\r\n\r\n  handleChangePage = (event, newPage) => {\r\n    this.setState({ page: newPage });\r\n  };\r\n\r\n  handleChangeRowsPerPage = (event) => {\r\n    this.setState({ rowsPerPage: parseInt(event.target.value, 10) });\r\n\r\n    this.setState({ page: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const {\r\n      facility,\r\n      startDate,\r\n      endDate,\r\n      mappingList,\r\n      type,\r\n      rowsPerPage,\r\n      page,\r\n      selected,\r\n      orderBy,\r\n      order,\r\n      dailyReport,\r\n      facilityName,\r\n      totalCheckIn,\r\n      totalCheckOut,\r\n      totalCash,\r\n      totalOnline,\r\n      totalNoCash,\r\n      totalAmount,\r\n    } = this.state;\r\n    const rows = dailyReport;\r\n    const emptyRows =\r\n      rowsPerPage -\r\n      Math.min(rowsPerPage, dailyReport.length - page * rowsPerPage);\r\n\r\n    const isSelected = (id) => selected.indexOf(id) !== -1;\r\n\r\n    console.log(\"mappingList\", mappingList, \" type\", type);\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <Box className=\"container\" p={2.5} bgcolor=\"primary.lightBgContainer\">\r\n          <Paper className=\"content lead-page\">\r\n            <Box className=\"page-heading\" mb={3}>\r\n              <Box color=\"text.secondary\" pt={3} pr={2.7} pb={1.8} pl={3}>\r\n                <Typography variant=\"h6\" gutterBottom color=\"inherit\">\r\n                  Dashboard\r\n                </Typography>\r\n              </Box>\r\n              <Divider />\r\n            </Box>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container justifyContent=\"space-evenly\">\r\n                <FormControl variant=\"standard\" className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"age-native-simple\">\r\n                    Select Facility\r\n                  </InputLabel>\r\n                  <Select\r\n                    native\r\n                    value={facility}\r\n                    placeholder={\"Facility Name\"}\r\n                    onChange={(e, index) => {\r\n                      this.handleChange(e);\r\n                    }}\r\n                  >\r\n                    <option value=\"0\">Consolidated</option>\r\n\r\n                    {mappingList.map((data, index) => {\r\n                      return (\r\n                        <option key={index.toString()} value={data.instanceid}>\r\n                          {data.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormControl>\r\n                <FormControl variant=\"standard\" className={classes.formControl}>\r\n                  <InputLabel htmlFor=\"age-native-simple\">\r\n                    Select Type\r\n                  </InputLabel>\r\n                  <Select\r\n                    native\r\n                    value={type}\r\n                    placeholder={\"Age\"}\r\n                    onChange={(e) => this.handleTypeChange(e)}\r\n                  >\r\n                    {/* <option aria-label=\"None\" value=\"NA\" /> */}\r\n                    <option value={\"Daily\"}>Daily</option>\r\n                    <option value={\"Monthly\"}>Monthly</option>\r\n                  </Select>\r\n                </FormControl>\r\n\r\n                <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"Date\"\r\n                  value={startDate}\r\n                  onChange={(date) => this.handleDateChange(date)}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                />\r\n                {/* <KeyboardDatePicker\r\n                  disableToolbar\r\n                  variant=\"inline\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  margin=\"normal\"\r\n                  id=\"date-picker-inline\"\r\n                  label=\"End Date\"\r\n                  minDate={startDate}\r\n                  value={endDate}\r\n                  onChange={(date) => this.handleEndDateChange(date)}\r\n                  KeyboardButtonProps={{\r\n                    \"aria-label\": \"change date\",\r\n                  }}\r\n                /> */}\r\n                <div className={classes.root}>\r\n                  <Button variant=\"contained\" size=\"small\" color=\"primary\">\r\n                    Submit\r\n                  </Button>\r\n                </div>\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n\r\n            <div className=\"data-table\">\r\n              <div className={classes.roots}>\r\n                <Paper className={classes.papers} elevation={0}>\r\n                  <TableContainer>\r\n                    <Table\r\n                      className={classes.table}\r\n                      aria-labelledby=\"tableTitle\"\r\n                      aria-label=\"enhanced table\"\r\n                    >\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          {headCells.map((headCell) => (\r\n                            <TableCell\r\n                              key={headCell.id}\r\n                              align={\"left\"}\r\n                              padding={\"none\"}\r\n                            >\r\n                              <TableSortLabel>{headCell.label}</TableSortLabel>\r\n                            </TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        {rows.map((Lead, index) => {\r\n                          console.log(\"first\", Lead);\r\n                          const isItemSelected = isSelected(Lead.id);\r\n                          const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                          return (\r\n                            <TableRow\r\n                              hover\r\n                              tabIndex={-1}\r\n                              key={index}\r\n                              selected={isItemSelected}\r\n                            >\r\n                              <TableCell\r\n                                component=\"th\"\r\n                                id={labelId}\r\n                                scope=\"row\"\r\n                                padding=\"none\"\r\n                                align=\"left\"\r\n                                color=\"green\"\r\n                              >\r\n                                {facilityName}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                component=\"th\"\r\n                                id={labelId}\r\n                                scope=\"row\"\r\n                                padding=\"none\"\r\n                                align=\"left\"\r\n                                color=\"green\"\r\n                              >\r\n                                {Lead.name}\r\n                              </TableCell>\r\n                              <TableCell align=\"left\">{Lead.totalin}</TableCell>\r\n                              <TableCell align=\"left\">\r\n                                {Lead.totalout}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n\r\n                        <TableRow>\r\n                          <TableCell rowSpan={3} />\r\n                          <TableCell colSpan={1}>Subtotal</TableCell>\r\n                          <TableCell align=\"left\">{totalCheckIn}</TableCell>\r\n                          <TableCell align=\"left\">{totalCheckOut}</TableCell>\r\n                        </TableRow>\r\n                        {/* <TableRow>\r\n                          <TableCell>Tax</TableCell>\r\n                          <TableCell align=\"right\">rate</TableCell>\r\n                          <TableCell align=\"right\">ohh</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell colSpan={2}>Total</TableCell>\r\n                          <TableCell align=\"right\">ok</TableCell>\r\n                        </TableRow> */}\r\n                        {emptyRows > 0 && (\r\n                          <TableRow>\r\n                            <TableCell colSpan={6} />\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n            <div className=\"data-table\">\r\n              <div className={classes.roots}>\r\n                <Paper className={classes.papers} elevation={0}>\r\n                  <TableContainer>\r\n                    <Table\r\n                      className={classes.table}\r\n                      aria-labelledby=\"tableTitle\"\r\n                      aria-label=\"enhanced table\"\r\n                    >\r\n                      <TableHead>\r\n                        <TableRow>\r\n                          {paymentHeadCells.map((headCell) => (\r\n                            <TableCell\r\n                              key={headCell.id}\r\n                              align={\"left\"}\r\n                              padding={\"none\"}\r\n                            >\r\n                              <TableSortLabel>{headCell.label}</TableSortLabel>\r\n                            </TableCell>\r\n                          ))}\r\n                        </TableRow>\r\n                      </TableHead>\r\n                      <TableBody>\r\n                        <TableRow hover tabIndex={-1}>\r\n                          <TableCell\r\n                            component=\"th\"\r\n                            id={\"online\"}\r\n                            scope=\"row\"\r\n                            padding=\"none\"\r\n                            align=\"left\"\r\n                            color=\"green\"\r\n                          >\r\n                            {totalOnline}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            component=\"th\"\r\n                            id={\"cash\"}\r\n                            scope=\"row\"\r\n                            padding=\"none\"\r\n                            align=\"left\"\r\n                            color=\"green\"\r\n                          >\r\n                            {totalCash}\r\n                          </TableCell>\r\n                          <TableCell align=\"left\">{totalNoCash}</TableCell>\r\n                          <TableCell align=\"left\">{totalAmount}</TableCell>\r\n                        </TableRow>\r\n\r\n                        {/* <TableRow>\r\n                          <TableCell>Tax</TableCell>\r\n                          <TableCell align=\"right\">rate</TableCell>\r\n                          <TableCell align=\"right\">ohh</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                          <TableCell colSpan={2}>Total</TableCell>\r\n                          <TableCell align=\"right\">ok</TableCell>\r\n                        </TableRow> */}\r\n                        {emptyRows > 0 && (\r\n                          <TableRow>\r\n                            <TableCell colSpan={6} />\r\n                          </TableRow>\r\n                        )}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableContainer>\r\n                </Paper>\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </Box>\r\n      </ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  userDetails: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(Home));\r\n"]},"metadata":{},"sourceType":"module"}